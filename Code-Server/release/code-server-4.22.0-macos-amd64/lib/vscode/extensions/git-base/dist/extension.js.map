{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://git-base/./src/api/api1.ts","webpack://git-base/./src/api/extension.ts","webpack://git-base/./src/decorators.ts","webpack://git-base/./src/model.ts","webpack://git-base/./src/remoteSource.ts","webpack://git-base/./src/util.ts","webpack://git-base/external commonjs \"vscode\"","webpack://git-base/webpack/bootstrap","webpack://git-base/./src/extension.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, commands } from 'vscode';\nimport { Model } from '../model';\nimport { getRemoteSourceActions, pickRemoteSource } from '../remoteSource';\nimport { GitBaseExtensionImpl } from './extension';\nimport { API, PickRemoteSourceOptions, PickRemoteSourceResult, RemoteSourceAction, RemoteSourceProvider } from './git-base';\n\nexport class ApiImpl implements API {\n\n\tconstructor(private _model: Model) { }\n\n\tpickRemoteSource(options: PickRemoteSourceOptions): Promise<PickRemoteSourceResult | string | undefined> {\n\t\treturn pickRemoteSource(this._model, options as any);\n\t}\n\n\tgetRemoteSourceActions(url: string): Promise<RemoteSourceAction[]> {\n\t\treturn getRemoteSourceActions(this._model, url);\n\t}\n\n\tregisterRemoteSourceProvider(provider: RemoteSourceProvider): Disposable {\n\t\treturn this._model.registerRemoteSourceProvider(provider);\n\t}\n}\n\nexport function registerAPICommands(extension: GitBaseExtensionImpl): Disposable {\n\tconst disposables: Disposable[] = [];\n\n\tdisposables.push(commands.registerCommand('git-base.api.getRemoteSources', (opts?: PickRemoteSourceOptions) => {\n\t\tif (!extension.model) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn pickRemoteSource(extension.model, opts as any);\n\t}));\n\n\treturn Disposable.from(...disposables);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Model } from '../model';\nimport { GitBaseExtension, API } from './git-base';\nimport { Event, EventEmitter } from 'vscode';\nimport { ApiImpl } from './api1';\n\nexport class GitBaseExtensionImpl implements GitBaseExtension {\n\n\tenabled: boolean = false;\n\n\tprivate _onDidChangeEnablement = new EventEmitter<boolean>();\n\treadonly onDidChangeEnablement: Event<boolean> = this._onDidChangeEnablement.event;\n\n\tprivate _model: Model | undefined = undefined;\n\n\tset model(model: Model | undefined) {\n\t\tthis._model = model;\n\n\t\tconst enabled = !!model;\n\n\t\tif (this.enabled === enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.enabled = enabled;\n\t\tthis._onDidChangeEnablement.fire(this.enabled);\n\t}\n\n\tget model(): Model | undefined {\n\t\treturn this._model;\n\t}\n\n\tconstructor(model?: Model) {\n\t\tif (model) {\n\t\t\tthis.enabled = true;\n\t\t\tthis._model = model;\n\t\t}\n\t}\n\n\tgetAPI(version: number): API {\n\t\tif (!this._model) {\n\t\t\tthrow new Error('Git model not found');\n\t\t}\n\n\t\tif (version !== 1) {\n\t\t\tthrow new Error(`No API version ${version} found.`);\n\t\t}\n\n\t\treturn new ApiImpl(this._model);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { done } from './util';\n\nexport function debounce(delay: number): Function {\n\treturn decorate((fn, key) => {\n\t\tconst timerKey = `$debounce$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tclearTimeout(this[timerKey]);\n\t\t\tthis[timerKey] = setTimeout(() => fn.apply(this, args), delay);\n\t\t};\n\t});\n}\n\nexport const throttle = decorate(_throttle);\n\nfunction _throttle<T>(fn: Function, key: string): Function {\n\tconst currentKey = `$throttle$current$${key}`;\n\tconst nextKey = `$throttle$next$${key}`;\n\n\tconst trigger = function (this: any, ...args: any[]) {\n\t\tif (this[nextKey]) {\n\t\t\treturn this[nextKey];\n\t\t}\n\n\t\tif (this[currentKey]) {\n\t\t\tthis[nextKey] = done(this[currentKey]).then(() => {\n\t\t\t\tthis[nextKey] = undefined;\n\t\t\t\treturn trigger.apply(this, args);\n\t\t\t});\n\n\t\t\treturn this[nextKey];\n\t\t}\n\n\t\tthis[currentKey] = fn.apply(this, args) as Promise<T>;\n\n\t\tconst clear = () => this[currentKey] = undefined;\n\t\tdone(this[currentKey]).then(clear, clear);\n\n\t\treturn this[currentKey];\n\t};\n\n\treturn trigger;\n}\n\nfunction decorate(decorator: (fn: Function, key: string) => Function): Function {\n\treturn (_target: any, key: string, descriptor: any) => {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn || !fnKey) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tdescriptor[fnKey] = decorator(fn, key);\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EventEmitter, Disposable } from 'vscode';\nimport { toDisposable } from './util';\nimport { RemoteSourceProvider } from './api/git-base';\nimport { IRemoteSourceProviderRegistry } from './remoteProvider';\n\nexport class Model implements IRemoteSourceProviderRegistry {\n\n\tprivate remoteSourceProviders = new Set<RemoteSourceProvider>();\n\n\tprivate _onDidAddRemoteSourceProvider = new EventEmitter<RemoteSourceProvider>();\n\treadonly onDidAddRemoteSourceProvider = this._onDidAddRemoteSourceProvider.event;\n\n\tprivate _onDidRemoveRemoteSourceProvider = new EventEmitter<RemoteSourceProvider>();\n\treadonly onDidRemoveRemoteSourceProvider = this._onDidRemoveRemoteSourceProvider.event;\n\n\tregisterRemoteSourceProvider(provider: RemoteSourceProvider): Disposable {\n\t\tthis.remoteSourceProviders.add(provider);\n\t\tthis._onDidAddRemoteSourceProvider.fire(provider);\n\n\t\treturn toDisposable(() => {\n\t\t\tthis.remoteSourceProviders.delete(provider);\n\t\t\tthis._onDidRemoveRemoteSourceProvider.fire(provider);\n\t\t});\n\t}\n\n\tgetRemoteProviders(): RemoteSourceProvider[] {\n\t\treturn [...this.remoteSourceProviders.values()];\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { QuickPickItem, window, QuickPick, QuickPickItemKind, l10n, Disposable } from 'vscode';\nimport { RemoteSourceProvider, RemoteSource, PickRemoteSourceOptions, PickRemoteSourceResult, RemoteSourceAction } from './api/git-base';\nimport { Model } from './model';\nimport { throttle, debounce } from './decorators';\n\nasync function getQuickPickResult<T extends QuickPickItem>(quickpick: QuickPick<T>): Promise<T | undefined> {\n\tconst listeners: Disposable[] = [];\n\tconst result = await new Promise<T | undefined>(c => {\n\t\tlisteners.push(\n\t\t\tquickpick.onDidAccept(() => c(quickpick.selectedItems[0])),\n\t\t\tquickpick.onDidHide(() => c(undefined)),\n\t\t);\n\t\tquickpick.show();\n\t});\n\n\tquickpick.hide();\n\tlisteners.forEach(l => l.dispose());\n\treturn result;\n}\n\nclass RemoteSourceProviderQuickPick implements Disposable {\n\n\tprivate disposables: Disposable[] = [];\n\tprivate isDisposed: boolean = false;\n\n\tprivate quickpick: QuickPick<QuickPickItem & { remoteSource?: RemoteSource }> | undefined;\n\n\tconstructor(private provider: RemoteSourceProvider) { }\n\n\tdispose() {\n\t\tthis.disposables.forEach(d => d.dispose());\n\t\tthis.disposables = [];\n\t\tthis.quickpick = undefined;\n\t\tthis.isDisposed = true;\n\t}\n\n\tprivate ensureQuickPick() {\n\t\tif (!this.quickpick) {\n\t\t\tthis.quickpick = window.createQuickPick();\n\t\t\tthis.disposables.push(this.quickpick);\n\t\t\tthis.quickpick.ignoreFocusOut = true;\n\t\t\tthis.disposables.push(this.quickpick.onDidHide(() => this.dispose()));\n\t\t\tif (this.provider.supportsQuery) {\n\t\t\t\tthis.quickpick.placeholder = this.provider.placeholder ?? l10n.t('Repository name (type to search)');\n\t\t\t\tthis.disposables.push(this.quickpick.onDidChangeValue(this.onDidChangeValue, this));\n\t\t\t} else {\n\t\t\t\tthis.quickpick.placeholder = this.provider.placeholder ?? l10n.t('Repository name');\n\t\t\t}\n\t\t}\n\t}\n\n\t@debounce(300)\n\tprivate onDidChangeValue(): void {\n\t\tthis.query();\n\t}\n\n\t@throttle\n\tprivate async query(): Promise<void> {\n\t\ttry {\n\t\t\tif (this.isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.ensureQuickPick();\n\t\t\tthis.quickpick!.busy = true;\n\t\t\tthis.quickpick!.show();\n\n\t\t\tconst remoteSources = await this.provider.getRemoteSources(this.quickpick?.value) || [];\n\t\t\t// The user may have cancelled the picker in the meantime\n\t\t\tif (this.isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (remoteSources.length === 0) {\n\t\t\t\tthis.quickpick!.items = [{\n\t\t\t\t\tlabel: l10n.t('No remote repositories found.'),\n\t\t\t\t\talwaysShow: true\n\t\t\t\t}];\n\t\t\t} else {\n\t\t\t\tthis.quickpick!.items = remoteSources.map(remoteSource => ({\n\t\t\t\t\tlabel: remoteSource.icon ? `$(${remoteSource.icon}) ${remoteSource.name}` : remoteSource.name,\n\t\t\t\t\tdescription: remoteSource.description || (typeof remoteSource.url === 'string' ? remoteSource.url : remoteSource.url[0]),\n\t\t\t\t\tdetail: remoteSource.detail,\n\t\t\t\t\tremoteSource,\n\t\t\t\t\talwaysShow: true\n\t\t\t\t}));\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthis.quickpick!.items = [{ label: l10n.t('{0} Error: {1}', '$(error)', err.message), alwaysShow: true }];\n\t\t\tconsole.error(err);\n\t\t} finally {\n\t\t\tif (!this.isDisposed) {\n\t\t\t\tthis.quickpick!.busy = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync pick(): Promise<RemoteSource | undefined> {\n\t\tawait this.query();\n\t\tif (this.isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = await getQuickPickResult(this.quickpick!);\n\t\treturn result?.remoteSource;\n\t}\n}\n\nexport async function getRemoteSourceActions(model: Model, url: string): Promise<RemoteSourceAction[]> {\n\tconst providers = model.getRemoteProviders();\n\n\tconst remoteSourceActions = [];\n\tfor (const provider of providers) {\n\t\tconst providerActions = await provider.getRemoteSourceActions?.(url);\n\t\tif (providerActions?.length) {\n\t\t\tremoteSourceActions.push(...providerActions);\n\t\t}\n\t}\n\n\treturn remoteSourceActions;\n}\n\nexport async function pickRemoteSource(model: Model, options: PickRemoteSourceOptions & { branch?: false | undefined }): Promise<string | undefined>;\nexport async function pickRemoteSource(model: Model, options: PickRemoteSourceOptions & { branch: true }): Promise<PickRemoteSourceResult | undefined>;\nexport async function pickRemoteSource(model: Model, options: PickRemoteSourceOptions = {}): Promise<string | PickRemoteSourceResult | undefined> {\n\tconst quickpick = window.createQuickPick<(QuickPickItem & { provider?: RemoteSourceProvider; url?: string })>();\n\tquickpick.title = options.title;\n\n\tif (options.providerName) {\n\t\tconst provider = model.getRemoteProviders()\n\t\t\t.filter(provider => provider.name === options.providerName)[0];\n\n\t\tif (provider) {\n\t\t\treturn await pickProviderSource(provider, options);\n\t\t}\n\t}\n\n\tconst remoteProviders = model.getRemoteProviders()\n\t\t.map(provider => ({ label: (provider.icon ? `$(${provider.icon}) ` : '') + (options.providerLabel ? options.providerLabel(provider) : provider.name), alwaysShow: true, provider }));\n\n\tconst recentSources: (QuickPickItem & { url?: string; timestamp: number })[] = [];\n\tif (options.showRecentSources) {\n\t\tfor (const { provider } of remoteProviders) {\n\t\t\tconst sources = (await provider.getRecentRemoteSources?.() ?? []).map((item) => {\n\t\t\t\treturn {\n\t\t\t\t\t...item,\n\t\t\t\t\tlabel: (item.icon ? `$(${item.icon}) ` : '') + item.name,\n\t\t\t\t\turl: typeof item.url === 'string' ? item.url : item.url[0],\n\t\t\t\t};\n\t\t\t});\n\t\t\trecentSources.push(...sources);\n\t\t}\n\t}\n\n\tconst items = [\n\t\t{ kind: QuickPickItemKind.Separator, label: l10n.t('remote sources') },\n\t\t...remoteProviders,\n\t\t{ kind: QuickPickItemKind.Separator, label: l10n.t('recently opened') },\n\t\t...recentSources.sort((a, b) => b.timestamp - a.timestamp)\n\t];\n\n\tquickpick.placeholder = options.placeholder ?? (remoteProviders.length === 0\n\t\t? l10n.t('Provide repository URL')\n\t\t: l10n.t('Provide repository URL or pick a repository source.'));\n\n\tconst updatePicks = (value?: string) => {\n\t\tif (value) {\n\t\t\tconst label = (typeof options.urlLabel === 'string' ? options.urlLabel : options.urlLabel?.(value)) ?? l10n.t('URL');\n\t\t\tquickpick.items = [{\n\t\t\t\tlabel: label,\n\t\t\t\tdescription: value,\n\t\t\t\talwaysShow: true,\n\t\t\t\turl: value\n\t\t\t},\n\t\t\t...items\n\t\t\t];\n\t\t} else {\n\t\t\tquickpick.items = items;\n\t\t}\n\t};\n\n\tquickpick.onDidChangeValue(updatePicks);\n\tupdatePicks();\n\n\tconst result = await getQuickPickResult(quickpick);\n\n\tif (result) {\n\t\tif (result.url) {\n\t\t\treturn result.url;\n\t\t} else if (result.provider) {\n\t\t\treturn await pickProviderSource(result.provider, options);\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nasync function pickProviderSource(provider: RemoteSourceProvider, options: PickRemoteSourceOptions = {}): Promise<string | PickRemoteSourceResult | undefined> {\n\tconst quickpick = new RemoteSourceProviderQuickPick(provider);\n\tconst remote = await quickpick.pick();\n\tquickpick.dispose();\n\n\tlet url: string | undefined;\n\n\tif (remote) {\n\t\tif (typeof remote.url === 'string') {\n\t\t\turl = remote.url;\n\t\t} else if (remote.url.length > 0) {\n\t\t\turl = await window.showQuickPick(remote.url, { ignoreFocusOut: true, placeHolder: l10n.t('Choose a URL to clone from.') });\n\t\t}\n\t}\n\n\tif (!url || !options.branch) {\n\t\treturn url;\n\t}\n\n\tif (!provider.getBranches) {\n\t\treturn { url };\n\t}\n\n\tconst branches = await provider.getBranches(url);\n\n\tif (!branches) {\n\t\treturn { url };\n\t}\n\n\tconst branch = await window.showQuickPick(branches, {\n\t\tplaceHolder: l10n.t('Branch name')\n\t});\n\n\tif (!branch) {\n\t\treturn { url };\n\t}\n\n\treturn { url, branch };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function toDisposable(dispose: () => void): IDisposable {\n\treturn { dispose };\n}\n\nexport function done<T>(promise: Promise<T>): Promise<void> {\n\treturn promise.then<void>(() => undefined);\n}\n\nexport namespace Versions {\n\tdeclare type VersionComparisonResult = -1 | 0 | 1;\n\n\texport interface Version {\n\t\tmajor: number;\n\t\tminor: number;\n\t\tpatch: number;\n\t\tpre?: string;\n\t}\n\n\texport function compare(v1: string | Version, v2: string | Version): VersionComparisonResult {\n\t\tif (typeof v1 === 'string') {\n\t\t\tv1 = fromString(v1);\n\t\t}\n\t\tif (typeof v2 === 'string') {\n\t\t\tv2 = fromString(v2);\n\t\t}\n\n\t\tif (v1.major > v2.major) { return 1; }\n\t\tif (v1.major < v2.major) { return -1; }\n\n\t\tif (v1.minor > v2.minor) { return 1; }\n\t\tif (v1.minor < v2.minor) { return -1; }\n\n\t\tif (v1.patch > v2.patch) { return 1; }\n\t\tif (v1.patch < v2.patch) { return -1; }\n\n\t\tif (v1.pre === undefined && v2.pre !== undefined) { return 1; }\n\t\tif (v1.pre !== undefined && v2.pre === undefined) { return -1; }\n\n\t\tif (v1.pre !== undefined && v2.pre !== undefined) {\n\t\t\treturn v1.pre.localeCompare(v2.pre) as VersionComparisonResult;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\texport function from(major: string | number, minor: string | number, patch?: string | number, pre?: string): Version {\n\t\treturn {\n\t\t\tmajor: typeof major === 'string' ? parseInt(major, 10) : major,\n\t\t\tminor: typeof minor === 'string' ? parseInt(minor, 10) : minor,\n\t\t\tpatch: patch === undefined || patch === null ? 0 : typeof patch === 'string' ? parseInt(patch, 10) : patch,\n\t\t\tpre: pre,\n\t\t};\n\t}\n\n\texport function fromString(version: string): Version {\n\t\tconst [ver, pre] = version.split('-');\n\t\tconst [major, minor, patch] = ver.split('.');\n\t\treturn from(major, minor, patch, pre);\n\t}\n}\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ExtensionContext } from 'vscode';\nimport { registerAPICommands } from './api/api1';\nimport { GitBaseExtensionImpl } from './api/extension';\nimport { Model } from './model';\n\nexport function activate(context: ExtensionContext): GitBaseExtensionImpl {\n\tconst apiImpl = new GitBaseExtensionImpl(new Model());\n\tcontext.subscriptions.push(registerAPICommands(apiImpl));\n\n\treturn apiImpl;\n}\n"],"names":["constructor","_model","pickRemoteSource","options","this","getRemoteSourceActions","url","registerRemoteSourceProvider","provider","extension","disposables","push","commands","registerCommand","opts","model","Disposable","from","enabled","_onDidChangeEnablement","fire","EventEmitter","onDidChangeEnablement","event","undefined","getAPI","version","Error","ApiImpl","decorate","decorator","_target","key","descriptor","fnKey","fn","value","get","delay","timerKey","args","clearTimeout","setTimeout","apply","throttle","currentKey","nextKey","trigger","done","then","clear","remoteSourceProviders","Set","_onDidAddRemoteSourceProvider","onDidAddRemoteSourceProvider","_onDidRemoveRemoteSourceProvider","onDidRemoveRemoteSourceProvider","add","toDisposable","delete","getRemoteProviders","values","async","getQuickPickResult","quickpick","listeners","result","Promise","c","onDidAccept","selectedItems","onDidHide","show","hide","forEach","l","dispose","RemoteSourceProviderQuickPick","isDisposed","d","ensureQuickPick","window","createQuickPick","ignoreFocusOut","supportsQuery","placeholder","l10n","t","onDidChangeValue","query","busy","remoteSources","getRemoteSources","length","items","label","alwaysShow","map","remoteSource","icon","name","description","detail","err","message","console","error","pickProviderSource","remote","pick","showQuickPick","placeHolder","branch","getBranches","branches","debounce","providers","remoteSourceActions","providerActions","title","providerName","filter","remoteProviders","providerLabel","recentSources","showRecentSources","sources","getRecentRemoteSources","item","kind","QuickPickItemKind","Separator","sort","a","b","timestamp","updatePicks","urlLabel","Versions","promise","major","minor","patch","pre","parseInt","fromString","ver","split","compare","v1","v2","localeCompare","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","context","apiImpl","GitBaseExtensionImpl","Model","subscriptions","registerAPICommands"],"sourceRoot":""}