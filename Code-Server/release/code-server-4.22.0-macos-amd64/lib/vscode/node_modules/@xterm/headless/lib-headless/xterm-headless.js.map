{"version":3,"file":"xterm-headless.js","mappings":"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","sources":["webpack://@xterm/xterm/./src/common/CircularList.ts","webpack://@xterm/xterm/./src/common/Clone.ts","webpack://@xterm/xterm/./src/common/CoreTerminal.ts","webpack://@xterm/xterm/./src/common/EventEmitter.ts","webpack://@xterm/xterm/./src/common/InputHandler.ts","webpack://@xterm/xterm/./src/common/Lifecycle.ts","webpack://@xterm/xterm/./src/common/Platform.ts","webpack://@xterm/xterm/./src/common/TaskQueue.ts","webpack://@xterm/xterm/./src/common/WindowsMode.ts","webpack://@xterm/xterm/./src/common/buffer/AttributeData.ts","webpack://@xterm/xterm/./src/common/buffer/Buffer.ts","webpack://@xterm/xterm/./src/common/buffer/BufferLine.ts","webpack://@xterm/xterm/./src/common/buffer/BufferReflow.ts","webpack://@xterm/xterm/./src/common/buffer/BufferSet.ts","webpack://@xterm/xterm/./src/common/buffer/CellData.ts","webpack://@xterm/xterm/./src/common/buffer/Constants.ts","webpack://@xterm/xterm/./src/common/buffer/Marker.ts","webpack://@xterm/xterm/./src/common/data/Charsets.ts","webpack://@xterm/xterm/./src/common/data/EscapeSequences.ts","webpack://@xterm/xterm/./src/common/input/TextDecoder.ts","webpack://@xterm/xterm/./src/common/input/UnicodeV6.ts","webpack://@xterm/xterm/./src/common/input/WriteBuffer.ts","webpack://@xterm/xterm/./src/common/input/XParseColor.ts","webpack://@xterm/xterm/./src/common/parser/Constants.ts","webpack://@xterm/xterm/./src/common/parser/DcsParser.ts","webpack://@xterm/xterm/./src/common/parser/EscapeSequenceParser.ts","webpack://@xterm/xterm/./src/common/parser/OscParser.ts","webpack://@xterm/xterm/./src/common/parser/Params.ts","webpack://@xterm/xterm/./src/common/public/AddonManager.ts","webpack://@xterm/xterm/./src/common/public/BufferApiView.ts","webpack://@xterm/xterm/./src/common/public/BufferLineApiView.ts","webpack://@xterm/xterm/./src/common/public/BufferNamespaceApi.ts","webpack://@xterm/xterm/./src/common/public/ParserApi.ts","webpack://@xterm/xterm/./src/common/public/UnicodeApi.ts","webpack://@xterm/xterm/./src/common/services/BufferService.ts","webpack://@xterm/xterm/./src/common/services/CharsetService.ts","webpack://@xterm/xterm/./src/common/services/CoreMouseService.ts","webpack://@xterm/xterm/./src/common/services/CoreService.ts","webpack://@xterm/xterm/./src/common/services/InstantiationService.ts","webpack://@xterm/xterm/./src/common/services/LogService.ts","webpack://@xterm/xterm/./src/common/services/OptionsService.ts","webpack://@xterm/xterm/./src/common/services/OscLinkService.ts","webpack://@xterm/xterm/./src/common/services/ServiceRegistry.ts","webpack://@xterm/xterm/./src/common/services/Services.ts","webpack://@xterm/xterm/./src/common/services/UnicodeService.ts","webpack://@xterm/xterm/./src/headless/Terminal.ts","webpack://@xterm/xterm/webpack/bootstrap","webpack://@xterm/xterm/./src/headless/public/Terminal.ts"],"sourcesContent":["/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsWrappingHeuristics = this.register(new MutableDisposable());\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onMultipleOptionChange(['windowsMode', 'windowsPty'], () => this._handleWindowsPtyOptionChange()));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used to avoid\n   * unwanted events being handled by the viewport when the event was triggered from the viewport\n   * originally.\n   * @param source Which component the event came from.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  public scrollToTop(): void {\n    this.scrollLines(-this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToBottom(): void {\n    this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this._bufferService.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    this._handleWindowsPtyOptionChange();\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n\n  private _handleWindowsPtyOptionChange(): void {\n    let value = false;\n    const windowsPty = this.optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber !== undefined && windowsPty.buildNumber !== undefined) {\n      value = !!(windowsPty.backend === 'conpty' && windowsPty.buildNumber < 21376);\n    } else if (this.optionsService.rawOptions.windowsMode) {\n      value = true;\n    }\n    if (value) {\n      this._enableWindowsWrappingHeuristics();\n    } else {\n      this._windowsWrappingHeuristics.clear();\n    }\n  }\n\n  protected _enableWindowsWrappingHeuristics(): void {\n    if (!this._windowsWrappingHeuristics.value) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsWrappingHeuristics.value = toDisposable(() => {\n        for (const d of disposables) {\n          d.dispose();\n        }\n      });\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    this.clearListeners();\n    this._disposed = true;\n  }\n\n  public clearListeners(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n\nexport function runAndSubscribe<T>(event: IEvent<T>, handler: (e: T | undefined) => any): IDisposable {\n  handler(undefined);\n  return event(e => handler(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType, SpecialColorIndex } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via @xterm/addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with same chunk and the promise\n   *   resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order\n   * and proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing, fire only for rows within the\n    // _viewport_ which is relative to ydisp, not relative to ybase.\n    const viewportEnd = this._dirtyRowTracker.end + (this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n    const viewportStart = this._dirtyRowTracker.start + (this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n    if (viewportStart < this._bufferService.rows) {\n      this._onRequestRefreshRows.fire(Math.min(viewportStart, this._bufferService.rows - 1), Math.min(viewportEnd, this._bufferService.rows - 1));\n    }\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodepoint(this._activeBuffer.x - 1, 0, 1, curAttr);\n    }\n\n    let precedingJoinState = this._parser.precedingJoinState;\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      const currentInfo = this._unicodeService.charProperties(code, precedingJoinState);\n      chWidth = UnicodeService.extractWidth(currentInfo);\n      const shouldJoin = UnicodeService.extractShouldJoin(currentInfo);\n      const oldWidth = shouldJoin ? UnicodeService.extractWidth(precedingJoinState) : 0;\n      precedingJoinState = currentInfo;\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - oldWidth > cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          const oldRow = bufferRow;\n          let oldCol = this._activeBuffer.x - oldWidth;\n          this._activeBuffer.x = oldWidth;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n          if (oldWidth > 0 && bufferRow instanceof BufferLine) {\n            // Combining character widens 1 column to 2.\n            // Move old character to next line.\n            bufferRow.copyCellsFrom(oldRow as BufferLine,\n              oldCol, 0, oldWidth, false);\n          }\n          // clear left over cells to the right\n          while (oldCol < cols) {\n            oldRow.setCellFromCodepoint(oldCol++, 0, 1, curAttr);\n          }\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (shouldJoin && this._activeBuffer.x) {\n        const offset = bufferRow.getWidth(this._activeBuffer.x - 1) ? 1 : 2;\n        // if empty cell after fullwidth, need to go 2 cells back\n        // it is save to step 2 cells back here\n        // since an empty cell is only set by fullwidth chars\n        bufferRow.addCodepointToCell(this._activeBuffer.x - offset,\n          code, chWidth);\n        for (let delta = chWidth - oldWidth; --delta >= 0; ) {\n          bufferRow.setCellFromCodepoint(this._activeBuffer.x++, 0, 0, curAttr);\n        }\n        continue;\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth - oldWidth, this._activeBuffer.getNullCell(curAttr));\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodepoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodepoint(this._activeBuffer.x++, code, chWidth, curAttr);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodepoint(this._activeBuffer.x++, 0, 0, curAttr);\n        }\n      }\n    }\n\n    this._parser.precedingJoinState = precedingJoinState;\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodepoint(this._activeBuffer.x, 0, 1, curAttr);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    } else {\n      // There was an explicit line feed (not just a carriage return), so clear the wrapped state of\n      // the line. This is particularly important on conpty/Windows where revisiting lines to\n      // reprint is common, especially on resize. Note that the windowsMode wrapped line heuristics\n      // can mess with this so windowsMode should be disabled, which is recommended on Windows build\n      // 21376 and above.\n      this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one\n        //   cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once\n          // before early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row. The cell gets replaced with the eraseChar of\n   * the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y);\n    if (line) {\n      line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n      this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the\n   * blank characters. Text between the cursor and right margin moves to the right. Characters moved\n   * past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData())\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to\n   * the left. Character attributes move with the characters. The terminal adds blank characters at\n   * the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData())\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll\n   * margins, moving content to the right. Content at the right margin is lost. DECIC has no effect\n   * outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData())\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * We extend xterm's behavior to allow repeating entire grapheme clusters.\n   * This isn't 100% xterm-compatible, but it seems saner and more useful.\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty, the\n   * preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is\n   * set. REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    const joinState = this._parser.precedingJoinState;\n    if (!joinState) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const chWidth = UnicodeService.extractWidth(joinState);\n    const x = this._activeBuffer.x - chWidth;\n    const bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n    const text = bufferRow.getString(x);\n    const data = new Uint32Array(text.length * length);\n    let idata = 0;\n    for (let itext = 0; itext < text.length; ) {\n      const ch = text.codePointAt(itext) || 0;\n      data[idata++] = ch;\n      itext += ch > 0xffff ? 2 : 1;\n    }\n    let tlength = idata;\n    for (let i = 1; i < length; ++i) {\n      data.copyWithin(tlength, 0, idata);\n      tlength += idata;\n    }\n    this.print(data, 0, tlength);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_RESET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_SET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 67) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 53        | Overlined.                                               | #Y      |\n   * | 55        | Not Overlined.                                           | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58)\n   * as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 53) {\n        // overline\n        attr.bg |= BgFlags.OVERLINE;\n      } else if (p === 55) {\n        // not overline\n        attr.bg &= ~BgFlags.OVERLINE;\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full\n   * terminal bootstrap, DECSTR only resets certain attributes. For most needs DECSTR should be\n   * sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event\n   * `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from\n   * `XParseColor` (see OSC 10 for supported formats). There may be multipe `c ; spec` pairs present\n   * in the same instruction. If `spec` contains `?` the terminal returns a sequence with the\n   * currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (isValidColorIndex(index)) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character.\n   * Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover\n   * feedback. Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [SpecialColorIndex.FOREGROUND, SpecialColorIndex.BACKGROUND, SpecialColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (isValidColorIndex(index)) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the\n   * corresponding CSI string, `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n\nfunction isValidColorIndex(value: number): value is ColorIndex {\n  return 0 <= value && value < 256;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n  private _value?: T;\n  private _isDisposed = false;\n\n  /**\n   * Gets the value if it exists.\n   */\n  public get value(): T | undefined {\n    return this._isDisposed ? undefined : this._value;\n  }\n\n  /**\n   * Sets the value, disposing of the old value if it exists.\n   */\n  public set value(value: T | undefined) {\n    if (this._isDisposed || value === this._value) {\n      return;\n    }\n    this._value?.dispose();\n    this._value = value;\n  }\n\n  /**\n   * Resets the stored value and disposes of the previously stored value.\n   */\n  public clear(): void {\n    this.value = undefined;\n  }\n\n  public dispose(): void {\n    this._isDisposed = true;\n    this._value?.dispose();\n    this._value = undefined;\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\ndeclare const process: unknown;\n\nexport const isNode = (typeof process !== 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n  public isOverline(): number      { return this.bg & BgFlags.OVERLINE; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n  public getUnderlineVariantOffset(): number {\n    return this.extended.underlineVariantOffset;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  public get underlineVariantOffset(): number {\n    const val = (this._ext & ExtFlags.VARIANT_OFFSET) >> 29;\n    if (val < 0) {\n      return val ^ 0xFFFFFFF8;\n    }\n    return val;\n  }\n  public set underlineVariantOffset(value: number) {\n    this._ext &= ~ExtFlags.VARIANT_OFFSET;\n    this._ext |= (value << 29) & ExtFlags.VARIANT_OFFSET;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IdleTaskQueue } from 'common/TaskQueue';\nimport { IAttributeData, IBufferLine, ICellData, ICharset } from 'common/Types';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { getWrappedLineTrimmedLength, reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths } from 'common/buffer/BufferReflow';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, WHITESPACE_CELL_WIDTH } from 'common/buffer/Constants';\nimport { Marker } from 'common/buffer/Marker';\nimport { IBuffer } from 'common/buffer/Types';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode || this._optionsService.rawOptions.windowsPty.backend !== undefined || this._optionsService.rawOptions.windowsPty.buildNumber !== undefined) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted\n      // lines, which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    const windowsPty = this._optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber) {\n      return this._hasScrollback && windowsPty.backend === 'conpty' && windowsPty.buildNumber >= 21376;\n    }\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IAttributeData, IBufferLine, ICellData, IExtendedAttrs } from 'common/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { CellData } from 'common/buffer/CellData';\nimport { Attributes, BgFlags, CHAR_DATA_ATTR_INDEX, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, Content, NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR } from 'common/buffer/Constants';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodepoint(index: number, codePoint: number, width: number, attrs: IAttributeData): void {\n    if (attrs.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = attrs.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = attrs.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = attrs.bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number, width: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n    }\n    if (width) {\n      content &= ~Content.WIDTH_MASK;\n      content |= width << Content.WIDTH_SHIFT;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodepoint(pos - 1, 0, 1, fillCellData);\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodepoint(this.length - 1, 0, 1, fillCellData);\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodepoint(pos - 1, 0, 1, fillCellData);\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodepoint(pos, 0, 1, fillCellData);\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodepoint(start - 1, 0, 1, fillCellData);\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodepoint(end, 0, 1, fillCellData);\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodepoint(start - 1, 0, 1, fillCellData);\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodepoint(end, 0, 1, fillCellData);\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public getNoBgTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK) || (this._data[i * CELL_SIZE + Cell.BG] & Attributes.CM_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  /**\n   * Translates the buffer line to a string.\n   *\n   * @param trimRight Whether to trim any empty cells on the right.\n   * @param startCol The column to start the string (0-based inclusive).\n   * @param endCol The column to end the string (0-based exclusive).\n   * @param outColumns if specified, this array will be filled with column numbers such that\n   * `returnedString[i]` is displayed at `outColumns[i]` column. `outColumns[returnedString.length]`\n   * is where the character following `returnedString` will be displayed.\n   *\n   * When a single cell is translated to multiple UTF-16 code units (e.g. surrogate pair) in the\n   * returned string, the corresponding entries in `outColumns` will have the same column number.\n   */\n  public translateToString(trimRight?: boolean, startCol?: number, endCol?: number, outColumns?: number[]): string {\n    startCol = startCol ?? 0;\n    endCol = endCol ?? this.length;\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    if (outColumns) {\n      outColumns.length = 0;\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      const chars = (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      result += chars;\n      if (outColumns) {\n        for (let i = 0; i < chars.length; ++i) {\n          outColumns.push(startCol);\n        }\n      }\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by at least 1\n    }\n    if (outColumns) {\n      outColumns.push(startCol);\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000,\n  OVERLINE = 0x40000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..29\n   */\n  UNDERLINE_STYLE = 0x1C000000,\n\n  /**\n   * bit 30..32\n   *\n   * An optional variant for the glyph, this can be used for example to offset underlines by a\n   * number of pixels to create a perfect pattern.\n   */\n  VARIANT_OFFSET = 0xE0000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private readonly _disposables: IDisposable[] = [];\n\n  private readonly _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate\n      // pair conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider, UnicodeCharProperties, UnicodeCharWidth } from 'common/services/Services';\nimport { UnicodeService } from 'common/services/UnicodeService';\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): UnicodeCharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as UnicodeCharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n\n  public charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties {\n    let width = this.wcwidth(codepoint);\n    let shouldJoin = width === 0 && preceding !== 0;\n    if (shouldJoin) {\n      const oldWidth = UnicodeService.extractWidth(preceding);\n      if (oldWidth === 0) {\n        shouldJoin = false;\n      } else if (oldWidth > width) {\n        width = oldWidth;\n      }\n    }\n    return UnicodeService.createPropertyValue(0, width, shouldJoin);\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens\n         * took very long). This cannot be solved here for the handler itself (it is the handlers\n         * responsibility to slice hard work), but we can at least schedule a screen update as we\n         * gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingJoinState: number; // UnicodeJoinProperties\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingJoinState = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingJoinState = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing. This is a really bad\n           * condition with screwed up execution order and prolly messed up terminal state,\n           * therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that, as\n           * the pending async handler still might mess up the terminal later. Instead fix the\n           * faulty async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingJoinState = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingJoinState = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from '@xterm/xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from '@xterm/xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from '@xterm/xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from '@xterm/xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class BufferNamespaceApi extends Disposable implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = this.register(new EventEmitter<IBufferApi>());\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    super();\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from '@xterm/xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from '@xterm/xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward\n    //       event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { clone } from 'common/Clone';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { IBufferService, ICoreService, ILogService, IOptionsService } from 'common/services/Services';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  trace: LogLevelEnum.TRACE,\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  private _logLevel: LogLevelEnum = LogLevelEnum.OFF;\n  public get logLevel(): LogLevelEnum { return this._logLevel; }\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n\n    // For trace logging, assume the latest created log service is valid\n    traceLogger = this;\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, (this._optionsService.options.logger ? '' : LOG_PREFIX) + message, ...optionalParams);\n  }\n\n  public trace(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.TRACE) {\n      this._log(this._optionsService.options.logger?.trace.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.DEBUG) {\n      this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.INFO) {\n      this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.WARN) {\n      this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.ERROR) {\n      this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, message, optionalParams);\n    }\n  }\n}\n\nlet traceLogger: ILogService;\nexport function setTraceLogger(logger: ILogService): void {\n  traceLogger = logger;\n}\n\n/**\n * A decorator that can be used to automatically log trace calls to the decorated function.\n */\nexport function traceCall(_target: any, key: string, descriptor: any): any {\n  if (typeof descriptor.value !== 'function') {\n    throw new Error('not supported');\n  }\n  const fnKey = 'value';\n  const fn = descriptor.value;\n  descriptor[fnKey] = function (...args: any[]) {\n    // Early exit\n    if (traceLogger.logLevel !== LogLevelEnum.TRACE) {\n      return fn.apply(this, args);\n    }\n\n    traceLogger.trace(`GlyphRenderer#${fn.name}(${args.map(e => JSON.stringify(e)).join(', ')})`);\n    const result = fn.apply(this, args);\n    traceLogger.trace(`GlyphRenderer#${fn.name} return`, result);\n    return result;\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { FontWeight, IOptionsService, ITerminalOptions } from 'common/services/Services';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  cursorInactiveStyle: 'outline',\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  documentOverride: null,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  ignoreBracketedPasteMode: false,\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  logger: null,\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  windowsPty: {},\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n\n    // Clear out options that could link outside xterm.js as they could easily cause an embedder\n    // memory leak\n    this.register(toDisposable(() => {\n      this.rawOptions.linkHandler = null;\n      this.rawOptions.documentOverride = null;\n    }));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n      case 'windowsPty':\n        value = value ?? {};\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, CursorInactiveStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler, IWindowsPty, ILogger } from '@xterm/xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  TRACE = 0,\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n  OFF = 5\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  readonly logLevel: LogLevelEnum;\n\n  trace(message: any, ...optionalParams: any[]): void;\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  cursorInactiveStyle?: CursorInactiveStyle;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  documentOverride?: any | null;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  ignoreBracketedPasteMode?: boolean;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  logger?: ILogger | null;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowsPty?: IWindowsPty;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\n/*\n * Width and Grapheme_Cluster_Break properties of a character as a bit mask.\n *\n * bit 0: shouldJoin - should combine with preceding character.\n * bit 1..2: wcwidth - see UnicodeCharWidth.\n * bit 3..31: class of character (currently only 4 bits are used).\n *   This is used to determined grapheme clustering - i.e. which codepoints\n *   are to be combined into a single compound character.\n *\n * Use the UnicodeService static function createPropertyValue to create a\n * UnicodeCharProperties; use extractShouldJoin, extractWidth, and\n * extractCharKind to extract the components.\n */\nexport type UnicodeCharProperties = number;\n\n/**\n * Width in columns of a character.\n * In a CJK context, \"half-width\" characters (such as Latin) are width 1,\n * while \"full-width\" characters (such as Kanji) are 2 columns wide.\n * Combining characters (such as accents) are width 0.\n */\nexport type UnicodeCharWidth = 0 | 1 | 2;\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): UnicodeCharWidth;\n  getStringCellWidth(s: string): number;\n  /**\n   * Return character width and type for grapheme clustering.\n   * If preceding != 0, it is the return code from the previous character;\n   * in that case the result specifies if the characters should be joined.\n   */\n  charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): UnicodeCharWidth;\n  charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\nimport { IUnicodeService, IUnicodeVersionProvider, UnicodeCharProperties, UnicodeCharWidth } from 'common/services/Services';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  public static extractShouldJoin(value: UnicodeCharProperties): boolean {\n    return (value & 1) !== 0;\n  }\n  public static extractWidth(value: UnicodeCharProperties): UnicodeCharWidth {\n    return ((value >> 1) & 0x3) as UnicodeCharWidth;\n  }\n  public static extractCharKind(value: UnicodeCharProperties): number {\n    return value >> 3;\n  }\n  public static createPropertyValue(state: number, width: number, shouldJoin: boolean = false): UnicodeCharProperties {\n    return ((state & 0xffffff) << 3) | ((width & 3) << 1) | (shouldJoin?1:0);\n  }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): UnicodeCharWidth {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    let precedingInfo = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      const currentInfo = this.charProperties(code, precedingInfo);\n      let chWidth = UnicodeService.extractWidth(currentInfo);\n      if (UnicodeService.extractShouldJoin(currentInfo)) {\n        chWidth -= UnicodeService.extractWidth(precedingInfo);\n      }\n      result += chWidth;\n      precedingInfo = currentInfo;\n    }\n    return result;\n  }\n\n  public charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties {\n    return this._activeProvider.charProperties(codepoint, preceding);\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { IBuffer } from 'common/buffer/Types';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { EventEmitter, forwardEvent } from 'common/EventEmitter';\nimport { IMarker, ITerminalOptions, ScrollSource } from 'common/Types';\n\nexport class Terminal extends CoreTerminal {\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yCharEmitter.event;\n  private readonly _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTabEmitter.event;\n\n  constructor(\n    options: ITerminalOptions = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this.bell()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  // TODO: Support paste here?\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public bell(): void {\n    this._onBell.fire();\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n\n    this._setup();\n    super.reset();\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { IBufferNamespace as IBufferNamespaceApi, IMarker, IModes, IParser, ITerminalAddon, ITerminalInitOnlyOptions, IUnicodeHandling, Terminal as ITerminalApi } from '@xterm/headless';\nimport { Terminal as TerminalCore } from 'headless/Terminal';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { ITerminalOptions } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal extends Disposable implements ITerminalApi {\n  private _core: TerminalCore;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions & ITerminalInitOnlyOptions) {\n    super();\n\n    this._core = this.register(new TerminalCore(options));\n    this._addonManager = this.register(new AddonManager());\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      Object.defineProperty(this._publicOptions, propName, {\n        get: () => {\n          return this._core.options[propName];\n        },\n        set: (value: any) => {\n          this._checkReadonlyOptions(propName);\n          this._core.options[propName] = value;\n        }\n      });\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.options.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n\n  public get parser(): IParser {\n    this._checkProposedApi();\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    this._checkProposedApi();\n    if (!this._buffer) {\n      this._buffer = this.register(new BufferNamespaceApi(this._core));\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker | undefined {\n    this._checkProposedApi();\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.registerMarker(cursorYOffset);\n  }\n  public dispose(): void {\n    super.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    // TODO: This could cause issues if the addon calls renderer apis\n    this._addonManager.loadAddon(this as any, addon);\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n}\n"],"names":["CircularList","Disposable","constructor","_maxLength","super","onDeleteEmitter","this","register","EventEmitter","onDelete","event","onInsertEmitter","onInsert","onTrimEmitter","onTrim","_array","Array","_startIndex","_length","maxLength","newMaxLength","newArray","i","Math","min","length","_getCyclicIndex","newLength","undefined","get","index","set","value","push","fire","recycle","Error","isFull","pop","splice","start","deleteCount","items","amount","countToTrim","trimStart","count","shiftElements","offset","expandListBy","clone","val","depth","clonedObject","isArray","key","hasWriteSyncWarnHappened","CoreTerminal","onScroll","_onScrollApi","_onScroll","ev","position","cols","_bufferService","rows","buffers","options","optionsService","_windowsWrappingHeuristics","MutableDisposable","_onBinary","onBinary","_onData","onData","_onLineFeed","onLineFeed","_onResize","onResize","_onWriteParsed","onWriteParsed","_instantiationService","InstantiationService","OptionsService","setService","IOptionsService","createInstance","BufferService","IBufferService","_logService","LogService","ILogService","coreService","CoreService","ICoreService","coreMouseService","CoreMouseService","ICoreMouseService","unicodeService","UnicodeService","IUnicodeService","_charsetService","CharsetService","ICharsetService","_oscLinkService","OscLinkService","IOscLinkService","_inputHandler","InputHandler","forwardEvent","onRequestScrollToBottom","scrollToBottom","onUserInput","_writeBuffer","handleUserInput","onMultipleOptionChange","_handleWindowsPtyOptionChange","buffer","ydisp","source","markRangeDirty","scrollTop","scrollBottom","WriteBuffer","data","promiseResult","parse","write","callback","writeSync","maxSubsequentCalls","logLevel","LogLevelEnum","WARN","warn","resize","x","y","isNaN","max","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","isWrapped","scrollLines","disp","suppressScrollEvent","scrollPages","pageCount","scrollToTop","ybase","scrollToLine","line","scrollAmount","registerEscHandler","id","registerDcsHandler","registerCsiHandler","registerOscHandler","ident","_setup","reset","windowsPty","rawOptions","buildNumber","backend","windowsMode","_enableWindowsWrappingHeuristics","clear","disposables","updateWindowsModeWrappedState","bind","final","toDisposable","d","dispose","_listeners","_disposed","_event","listener","disposable","arg1","arg2","queue","call","clearListeners","from","to","e","handler","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","WindowsOptionsReportType","$temp","getAttrData","_curAttrData","_coreService","_optionsService","_coreMouseService","_unicodeService","_parser","EscapeSequenceParser","_parseBuffer","Uint32Array","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_workCell","CellData","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","DEFAULT_ATTR_DATA","_eraseAttrDataInternal","_onRequestBell","onRequestBell","_onRequestRefreshRows","onRequestRefreshRows","_onRequestReset","onRequestReset","_onRequestSendFocus","onRequestSendFocus","_onRequestSyncScrollBar","onRequestSyncScrollBar","_onRequestWindowsOptionsReport","onRequestWindowsOptionsReport","_onA11yChar","onA11yChar","_onA11yTab","onA11yTab","_onCursorMove","onCursorMove","_onTitleChange","onTitleChange","_onColor","onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","_dirtyRowTracker","DirtyRowTracker","_activeBuffer","onBufferActivate","activeBuffer","setCsiHandlerFallback","params","debug","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","code","setOscHandlerFallback","action","setDcsHandlerFallback","payload","setPrintHandler","end","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","selectProtected","requestMode","setExecuteHandler","C0","BEL","bell","LF","lineFeed","VT","FF","CR","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setHyperlink","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","CHARSETS","selectCharset","screenAlignmentPattern","setErrorHandler","state","error","DcsHandler","requestStatusString","_preserveStack","_logSlowResolvingAsync","p","Promise","race","res","rej","setTimeout","catch","err","console","_getCurrentLinkId","extended","urlId","result","wasPaused","DEBUG","prototype","map","String","fromCharCode","join","split","charCodeAt","clearRange","len","decode","substring","subarray","viewportEnd","viewportStart","chWidth","charset","screenReaderMode","wraparoundMode","decPrivateModes","wraparound","insertMode","modes","curAttr","bufferRow","lines","markDirty","getWidth","setCellFromCodepoint","precedingJoinState","pos","ch","currentInfo","charProperties","extractWidth","shouldJoin","extractShouldJoin","oldWidth","stringFromCodePoint","addLineToLink","oldRow","oldCol","_eraseAttrData","BufferLine","copyCellsFrom","addCodepointToCell","delta","insertCells","getNullCell","NULL_CELL_CODE","NULL_CELL_WIDTH","hasContent","convertEol","reverseWraparound","_restrictCursor","hasWidth","originalX","nextStop","maxCol","origin","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","bg","_eraseInBufferLine","clearWrap","respectProtect","replaceCells","_resetBufferLine","fill","clearMarkers","j","scrollBackSize","row","scrollBottomRowsOffset","scrollBottomAbsolute","getBlankLine","deleteCells","joinState","text","getString","idata","itext","codePointAt","tlength","copyWithin","_is","triggerDataEvent","ESC","term","termName","indexOf","applicationCursorKeys","setgCharset","DEFAULT_CHARSET","cursorBlink","applicationKeypad","activeProtocol","sendFocus","activeEncoding","isCursorHidden","activateAltBuffer","isCursorInitialized","bracketedPasteMode","activateNormalBuffer","ansi","dm","mouseProtocol","mouseEncoding","cs","active","alt","b2v","m","v","_updateAttrColor","color","mode","c1","c2","c3","AttributeData","fromColorRGB","_extractColor","attr","accu","cSpace","advance","hasSubParams","subparams","getSubParams","fg","underlineColor","_processUnderline","style","underlineStyle","updateExtended","_processSGR0","l","savedX","savedY","savedCurAttrData","savedCharset","cursorStyle","isBlinking","top","bottom","second","GET_WIN_SIZE_PIXELS","GET_CELL_SIZE_PIXELS","shift","_savedCharset","slots","idx","spec","exec","parseInt","isValidColorIndex","type","parseColor","args","_createHyperlink","_finishHyperlink","uri","parsedParams","idParamIndex","findIndex","startsWith","slice","registerLink","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","cell","content","yOffset","markAllDirty","b","s","f","isProtected","y1","y2","disposeArray","_disposables","_isDisposed","unregister","_value","array","isNode","process","userAgent","navigator","platform","isFirefox","includes","isLegacyEdge","isSafari","test","majorVersion","match","isMac","isIpad","isIphone","isWindows","isLinux","isChromeOS","TaskQueue","_tasks","_i","enqueue","task","_start","flush","_idleCallback","_cancelCallback","_requestCallback","_process","deadline","taskDuration","longestTask","lastDeadlineRemaining","timeRemaining","deadlineRemaining","Date","now","abs","round","PriorityTaskQueue","_createDeadline","clearTimeout","duration","IdleTaskQueue","window","requestIdleCallback","cancelIdleCallback","_queue","bufferService","lastChar","CHAR_DATA_CODE_INDEX","WHITESPACE_CELL_CODE","ExtendedAttrs","toColorRGB","newObj","isInverse","isBold","isUnderline","hasExtendedAttrs","isBlink","isInvisible","isItalic","isDim","isStrikethrough","isOverline","getFgColorMode","getBgColorMode","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","getFgColor","getBgColor","isEmpty","getUnderlineColor","getUnderlineColorMode","isUnderlineColorRGB","isUnderlineColorPalette","isUnderlineColorDefault","getUnderlineStyle","getUnderlineVariantOffset","underlineVariantOffset","ext","_urlId","_ext","MAX_BUFFER_SIZE","_hasScrollback","markers","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_CHAR","WHITESPACE_CELL_WIDTH","_isClearing","_memoryCleanupQueue","_memoryCleanupPosition","_cols","_rows","_getCorrectBufferLength","setupTabStops","getWhitespaceCell","hasScrollback","isCursorInViewport","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","dirtyMemoryLines","addToY","amountToTrim","_isReflowEnabled","_reflow","_batchedMemoryCleanup","normalRun","counted","cleanupMemory","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","getTrimmedLength","wrappedLines","unshift","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","translateBufferLineToString","lineIndex","trimRight","startCol","endCol","translateToString","getWrappedRangeForLine","first","last","tabStopWidth","clearAllMarkers","addMarker","marker","Marker","onDispose","_removeMarker","Object","freeze","$startIndex","fillCellData","_combined","_extendedAttrs","_data","cp","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","getFg","getBg","getCodePoint","isCombined","loadCell","combinedData","codePoint","width","attrs","byteLength","uint32Cells","keys","extKeys","copyFrom","el","getNoBgTrimmedLength","src","applyInReverse","srcData","srcCombinedKeys","outColumns","chars","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","c","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","lineLength","BufferSet","_onBufferActivate","onSpecificOptionChange","_normal","Buffer","_alt","inactiveBuffer","normal","obj","setFromCharData","getChars","getCode","combined","getAsCharData","DEFAULT_COLOR","DEFAULT_ATTR","DEFAULT_EXT","_id","isDisposed","_nextId","_onDispose","C","C1_ESCAPED","NUL","SOH","STX","ETX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","DEL","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","ST","OSC","PM","APC","codepoint","_interim","input","target","size","startPos","interim","Uint8Array","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","BMP_COMBINING","HIGH_COMBINING","table","version","r","wcwidth","num","ucs","mid","bisearch","preceding","createPropertyValue","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","_didUserInput","chunk","cb","_innerWrite","lastTime","startTime","continuation","queueMicrotask","resolve","then","RGB_REX","HASH_REX","pad","bits","toString","s2","low","toLowerCase","base","adv","g","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","unhook","hook","put","utf32ToString","success","handlerResult","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","TransitionTable","setDefault","next","add","addMany","codes","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","DcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_state","_put","MAX_VALUE","fromArray","values","k","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","newParams","getSubParamsAll","store","cur","_addons","instance","loadAddon","terminal","loadedAddon","_wrappedAddonDispose","activate","_buffer","init","cursorY","cursorX","viewportY","baseY","getLine","BufferLineApiView","_line","getCell","startColumn","endColumn","BufferNamespaceApi","_core","_onBufferChange","onBufferChange","BufferApiView","_alternate","alternate","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","oldYdisp","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","events","restrict","X10","button","ctrl","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","col","SGR","SGR_PIXELS","_protocols","_encodings","_activeProtocol","_activeEncoding","_lastEvent","_onProtocolChange","onProtocolChange","name","addProtocol","addEncoding","protocol","encoding","areMouseEventsActive","triggerMouseEvent","_equalEvents","report","triggerBinaryEvent","explainEvents","down","up","drag","move","wheel","e1","e2","pixels","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_onRequestScrollToBottom","wasUserInput","disableStdin","scrollOnUserInput","ServiceCollection","entries","_entries","Map","service","forEach","has","_services","IInstantiationService","getService","ctor","serviceDependencies","getServiceDependencies","sort","a","serviceArgs","dependency","firstServiceArgPos","optionsKeyToLogLevel","trace","TRACE","info","INFO","ERROR","off","OFF","traceLogger","_logLevel","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","logger","log","_target","descriptor","fn","JSON","stringify","DEFAULT_OPTIONS","cursorWidth","cursorInactiveStyle","customGlyphs","drawBoldTextInBrightColors","documentOverride","fastScrollModifier","fastScrollSensitivity","fontFamily","fontSize","fontWeight","fontWeightBold","ignoreBracketedPasteMode","lineHeight","letterSpacing","linkHandler","scrollSensitivity","smoothScrollDuration","macOptionIsMeta","macOptionClickForcesSelection","minimumContrastRatio","allowProposedApi","allowTransparency","theme","rightClickSelectsWord","wordSeparator","altClickMovesCursor","cancelEvents","overviewRulerWidth","FONT_WEIGHT_OPTIONS","_onOptionChange","onOptionChange","defaultOptions","newValue","_sanitizeAndValidateOption","_setupOptions","eventKey","getter","propName","setter","desc","defineProperty","isCursorStyle","floor","_entriesWithId","_dataByLinkId","entry","_removeMarkerFromLink","castData","_getEntryIdKey","linkId","every","getLinkData","linkData","delete","DI_TARGET","DI_DEPENDENCIES","serviceRegistry","decorator","arguments","storeServiceDependency","createDecorator","IDecorationService","extractCharKind","_providers","_onChange","onChange","defaultProvider","UnicodeV6","_activeProvider","getStringCellWidth","precedingInfo","Terminal","_onBell","onBell","_onA11yCharEmitter","_onA11yTabEmitter","cursorYOffset","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","CONSTRUCTOR_ONLY_OPTIONS","_addonManager","AddonManager","_publicOptions","_checkReadonlyOptions","_checkProposedApi","parser","ParserApi","unicode","UnicodeApi","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","originMode","reverseWraparoundMode","sendFocusMode","columns","_verifyIntegers","registerMarker","writeln","addon","Infinity"],"sourceRoot":""}