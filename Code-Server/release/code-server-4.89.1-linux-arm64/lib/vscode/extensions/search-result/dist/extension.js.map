{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://search-result/external commonjs \"vscode\"","webpack://search-result/external node-commonjs \"path\"","webpack://search-result/webpack/bootstrap","webpack://search-result/./src/extension.ts"],"sourcesContent":["module.exports = require(\"vscode\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport * as pathUtils from 'path';\n\nconst FILE_LINE_REGEX = /^(\\S.*):$/;\nconst RESULT_LINE_REGEX = /^(\\s+)(\\d+)(: |  )(\\s*)(.*)$/;\nconst ELISION_REGEX = /âŸª ([0-9]+) characters skipped âŸ«/g;\nconst SEARCH_RESULT_SELECTOR = { language: 'search-result', exclusive: true };\nconst DIRECTIVES = ['# Query:', '# Flags:', '# Including:', '# Excluding:', '# ContextLines:'];\nconst FLAGS = ['RegExp', 'CaseSensitive', 'IgnoreExcludeSettings', 'WordMatch'];\n\nlet cachedLastParse: { version: number; parse: ParsedSearchResults; uri: vscode.Uri } | undefined;\nlet documentChangeListener: vscode.Disposable | undefined;\n\n\nexport function activate(context: vscode.ExtensionContext) {\n\n\tconst contextLineDecorations = vscode.window.createTextEditorDecorationType({ opacity: '0.7' });\n\tconst matchLineDecorations = vscode.window.createTextEditorDecorationType({ fontWeight: 'bold' });\n\n\tconst decorate = (editor: vscode.TextEditor) => {\n\t\tconst parsed = parseSearchResults(editor.document).filter(isResultLine);\n\t\tconst contextRanges = parsed.filter(line => line.isContext).map(line => line.prefixRange);\n\t\tconst matchRanges = parsed.filter(line => !line.isContext).map(line => line.prefixRange);\n\t\teditor.setDecorations(contextLineDecorations, contextRanges);\n\t\teditor.setDecorations(matchLineDecorations, matchRanges);\n\t};\n\n\tif (vscode.window.activeTextEditor && vscode.window.activeTextEditor.document.languageId === 'search-result') {\n\t\tdecorate(vscode.window.activeTextEditor);\n\t}\n\n\tcontext.subscriptions.push(\n\n\t\tvscode.languages.registerDocumentSymbolProvider(SEARCH_RESULT_SELECTOR, {\n\t\t\tprovideDocumentSymbols(document: vscode.TextDocument, token: vscode.CancellationToken): vscode.DocumentSymbol[] {\n\t\t\t\tconst results = parseSearchResults(document, token)\n\t\t\t\t\t.filter(isFileLine)\n\t\t\t\t\t.map(line => new vscode.DocumentSymbol(\n\t\t\t\t\t\tline.path,\n\t\t\t\t\t\t'',\n\t\t\t\t\t\tvscode.SymbolKind.File,\n\t\t\t\t\t\tline.allLocations.map(({ originSelectionRange }) => originSelectionRange!).reduce((p, c) => p.union(c), line.location.originSelectionRange!),\n\t\t\t\t\t\tline.location.originSelectionRange!,\n\t\t\t\t\t));\n\n\t\t\t\treturn results;\n\t\t\t}\n\t\t}),\n\n\t\tvscode.languages.registerCompletionItemProvider(SEARCH_RESULT_SELECTOR, {\n\t\t\tprovideCompletionItems(document: vscode.TextDocument, position: vscode.Position): vscode.CompletionItem[] {\n\n\t\t\t\tconst line = document.lineAt(position.line);\n\t\t\t\tif (position.line > 3) { return []; }\n\t\t\t\tif (position.character === 0 || (position.character === 1 && line.text === '#')) {\n\t\t\t\t\tconst header = Array.from({ length: DIRECTIVES.length }).map((_, i) => document.lineAt(i).text);\n\n\t\t\t\t\treturn DIRECTIVES\n\t\t\t\t\t\t.filter(suggestion => header.every(line => line.indexOf(suggestion) === -1))\n\t\t\t\t\t\t.map(flag => ({ label: flag, insertText: (flag.slice(position.character)) + ' ' }));\n\t\t\t\t}\n\n\t\t\t\tif (line.text.indexOf('# Flags:') === -1) { return []; }\n\n\t\t\t\treturn FLAGS\n\t\t\t\t\t.filter(flag => line.text.indexOf(flag) === -1)\n\t\t\t\t\t.map(flag => ({ label: flag, insertText: flag + ' ' }));\n\t\t\t}\n\t\t}, '#'),\n\n\t\tvscode.languages.registerDefinitionProvider(SEARCH_RESULT_SELECTOR, {\n\t\t\tprovideDefinition(document: vscode.TextDocument, position: vscode.Position, token: vscode.CancellationToken): vscode.DefinitionLink[] {\n\t\t\t\tconst lineResult = parseSearchResults(document, token)[position.line];\n\t\t\t\tif (!lineResult) { return []; }\n\t\t\t\tif (lineResult.type === 'file') {\n\t\t\t\t\treturn lineResult.allLocations.map(l => ({ ...l, originSelectionRange: lineResult.location.originSelectionRange }));\n\t\t\t\t}\n\n\t\t\t\tconst location = lineResult.locations.find(l => l.originSelectionRange.contains(position));\n\t\t\t\tif (!location) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\tconst targetPos = new vscode.Position(\n\t\t\t\t\tlocation.targetSelectionRange.start.line,\n\t\t\t\t\tlocation.targetSelectionRange.start.character + (position.character - location.originSelectionRange.start.character)\n\t\t\t\t);\n\t\t\t\treturn [{\n\t\t\t\t\t...location,\n\t\t\t\t\ttargetSelectionRange: new vscode.Range(targetPos, targetPos),\n\t\t\t\t}];\n\t\t\t}\n\t\t}),\n\n\t\tvscode.languages.registerDocumentLinkProvider(SEARCH_RESULT_SELECTOR, {\n\t\t\tasync provideDocumentLinks(document: vscode.TextDocument, token: vscode.CancellationToken): Promise<vscode.DocumentLink[]> {\n\t\t\t\treturn parseSearchResults(document, token)\n\t\t\t\t\t.filter(isFileLine)\n\t\t\t\t\t.map(({ location }) => ({ range: location.originSelectionRange!, target: location.targetUri }));\n\t\t\t}\n\t\t}),\n\n\t\tvscode.window.onDidChangeActiveTextEditor(editor => {\n\t\t\tif (editor?.document.languageId === 'search-result') {\n\t\t\t\t// Clear the parse whenever we open a new editor.\n\t\t\t\t// Conservative because things like the URI might remain constant even if the contents change, and re-parsing even large files is relatively fast.\n\t\t\t\tcachedLastParse = undefined;\n\n\t\t\t\tdocumentChangeListener?.dispose();\n\t\t\t\tdocumentChangeListener = vscode.workspace.onDidChangeTextDocument(doc => {\n\t\t\t\t\tif (doc.document.uri === editor.document.uri) {\n\t\t\t\t\t\tdecorate(editor);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tdecorate(editor);\n\t\t\t}\n\t\t}),\n\n\t\t{ dispose() { cachedLastParse = undefined; documentChangeListener?.dispose(); } }\n\t);\n}\n\n\nfunction relativePathToUri(path: string, resultsUri: vscode.Uri): vscode.Uri | undefined {\n\n\tconst userDataPrefix = '(Settings) ';\n\tif (path.startsWith(userDataPrefix)) {\n\t\treturn vscode.Uri.file(path.slice(userDataPrefix.length)).with({ scheme: 'vscode-userdata' });\n\t}\n\n\tif (pathUtils.isAbsolute(path)) {\n\t\tif (/^[\\\\\\/]Untitled-\\d*$/.test(path)) {\n\t\t\treturn vscode.Uri.file(path.slice(1)).with({ scheme: 'untitled', path: path.slice(1) });\n\t\t}\n\t\treturn vscode.Uri.file(path);\n\t}\n\n\tif (path.indexOf('~/') === 0) {\n\t\tconst homePath = process.env.HOME || process.env.HOMEPATH || '';\n\t\treturn vscode.Uri.file(pathUtils.join(homePath, path.slice(2)));\n\t}\n\n\tconst uriFromFolderWithPath = (folder: vscode.WorkspaceFolder, path: string): vscode.Uri =>\n\t\tvscode.Uri.joinPath(folder.uri, path);\n\n\tif (vscode.workspace.workspaceFolders) {\n\t\tconst multiRootFormattedPath = /^(.*) â€¢ (.*)$/.exec(path);\n\t\tif (multiRootFormattedPath) {\n\t\t\tconst [, workspaceName, workspacePath] = multiRootFormattedPath;\n\t\t\tconst folder = vscode.workspace.workspaceFolders.filter(wf => wf.name === workspaceName)[0];\n\t\t\tif (folder) {\n\t\t\t\treturn uriFromFolderWithPath(folder, workspacePath);\n\t\t\t}\n\t\t}\n\t\telse if (vscode.workspace.workspaceFolders.length === 1) {\n\t\t\treturn uriFromFolderWithPath(vscode.workspace.workspaceFolders[0], path);\n\t\t} else if (resultsUri.scheme !== 'untitled') {\n\t\t\t// We're in a multi-root workspace, but the path is not multi-root formatted\n\t\t\t// Possibly a saved search from a single root session. Try checking if the search result document's URI is in a current workspace folder.\n\t\t\tconst prefixMatch = vscode.workspace.workspaceFolders.filter(wf => resultsUri.toString().startsWith(wf.uri.toString()))[0];\n\t\t\tif (prefixMatch) {\n\t\t\t\treturn uriFromFolderWithPath(prefixMatch, path);\n\t\t\t}\n\t\t}\n\t}\n\n\tconsole.error(`Unable to resolve path ${path}`);\n\treturn undefined;\n}\n\ntype ParsedSearchFileLine = { type: 'file'; location: vscode.LocationLink; allLocations: vscode.LocationLink[]; path: string };\ntype ParsedSearchResultLine = { type: 'result'; locations: Required<vscode.LocationLink>[]; isContext: boolean; prefixRange: vscode.Range };\ntype ParsedSearchResults = Array<ParsedSearchFileLine | ParsedSearchResultLine>;\nconst isFileLine = (line: ParsedSearchResultLine | ParsedSearchFileLine): line is ParsedSearchFileLine => line.type === 'file';\nconst isResultLine = (line: ParsedSearchResultLine | ParsedSearchFileLine): line is ParsedSearchResultLine => line.type === 'result';\n\n\nfunction parseSearchResults(document: vscode.TextDocument, token?: vscode.CancellationToken): ParsedSearchResults {\n\n\tif (cachedLastParse && cachedLastParse.uri === document.uri && cachedLastParse.version === document.version) {\n\t\treturn cachedLastParse.parse;\n\t}\n\n\tconst lines = document.getText().split(/\\r?\\n/);\n\tconst links: ParsedSearchResults = [];\n\n\tlet currentTarget: vscode.Uri | undefined = undefined;\n\tlet currentTargetLocations: vscode.LocationLink[] | undefined = undefined;\n\n\tfor (let i = 0; i < lines.length; i++) {\n\t\t// TODO: This is probably always false, given we're pegging the thread...\n\t\tif (token?.isCancellationRequested) { return []; }\n\t\tconst line = lines[i];\n\n\t\tconst fileLine = FILE_LINE_REGEX.exec(line);\n\t\tif (fileLine) {\n\t\t\tconst [, path] = fileLine;\n\n\t\t\tcurrentTarget = relativePathToUri(path, document.uri);\n\t\t\tif (!currentTarget) { continue; }\n\t\t\tcurrentTargetLocations = [];\n\n\t\t\tconst location: vscode.LocationLink = {\n\t\t\t\ttargetRange: new vscode.Range(0, 0, 0, 1),\n\t\t\t\ttargetUri: currentTarget,\n\t\t\t\toriginSelectionRange: new vscode.Range(i, 0, i, line.length),\n\t\t\t};\n\n\n\t\t\tlinks[i] = { type: 'file', location, allLocations: currentTargetLocations, path };\n\t\t}\n\n\t\tif (!currentTarget) { continue; }\n\n\t\tconst resultLine = RESULT_LINE_REGEX.exec(line);\n\t\tif (resultLine) {\n\t\t\tconst [, indentation, _lineNumber, separator] = resultLine;\n\t\t\tconst lineNumber = +_lineNumber - 1;\n\t\t\tconst metadataOffset = (indentation + _lineNumber + separator).length;\n\t\t\tconst targetRange = new vscode.Range(Math.max(lineNumber - 3, 0), 0, lineNumber + 3, line.length);\n\n\t\t\tconst locations: Required<vscode.LocationLink>[] = [];\n\n\t\t\tlet lastEnd = metadataOffset;\n\t\t\tlet offset = 0;\n\t\t\tELISION_REGEX.lastIndex = metadataOffset;\n\t\t\tfor (let match: RegExpExecArray | null; (match = ELISION_REGEX.exec(line));) {\n\t\t\t\tlocations.push({\n\t\t\t\t\ttargetRange,\n\t\t\t\t\ttargetSelectionRange: new vscode.Range(lineNumber, offset, lineNumber, offset),\n\t\t\t\t\ttargetUri: currentTarget,\n\t\t\t\t\toriginSelectionRange: new vscode.Range(i, lastEnd, i, ELISION_REGEX.lastIndex - match[0].length),\n\t\t\t\t});\n\n\t\t\t\toffset += (ELISION_REGEX.lastIndex - lastEnd - match[0].length) + Number(match[1]);\n\t\t\t\tlastEnd = ELISION_REGEX.lastIndex;\n\t\t\t}\n\n\t\t\tif (lastEnd < line.length) {\n\t\t\t\tlocations.push({\n\t\t\t\t\ttargetRange,\n\t\t\t\t\ttargetSelectionRange: new vscode.Range(lineNumber, offset, lineNumber, offset),\n\t\t\t\t\ttargetUri: currentTarget,\n\t\t\t\t\toriginSelectionRange: new vscode.Range(i, lastEnd, i, line.length),\n\t\t\t\t});\n\t\t\t}\n\t\t\t// only show result lines in file-level peek\n\t\t\tif (separator.includes(':')) {\n\t\t\t\tcurrentTargetLocations?.push(...locations);\n\t\t\t}\n\n\t\t\t// Allow line number, indentation, etc to take you to definition as well.\n\t\t\tconst convenienceLocation: Required<vscode.LocationLink> = {\n\t\t\t\ttargetRange,\n\t\t\t\ttargetSelectionRange: new vscode.Range(lineNumber, 0, lineNumber, 1),\n\t\t\t\ttargetUri: currentTarget,\n\t\t\t\toriginSelectionRange: new vscode.Range(i, 0, i, metadataOffset - 1),\n\t\t\t};\n\t\t\tlocations.push(convenienceLocation);\n\t\t\tlinks[i] = { type: 'result', locations, isContext: separator === ' ', prefixRange: new vscode.Range(i, 0, i, metadataOffset) };\n\t\t}\n\t}\n\n\tcachedLastParse = {\n\t\tversion: document.version,\n\t\tparse: links,\n\t\turi: document.uri\n\t};\n\n\treturn links;\n}\n"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","context","contextLineDecorations","vscode","window","createTextEditorDecorationType","opacity","matchLineDecorations","fontWeight","decorate","editor","parsed","parseSearchResults","document","filter","isResultLine","contextRanges","line","isContext","map","prefixRange","matchRanges","setDecorations","activeTextEditor","languageId","subscriptions","push","languages","registerDocumentSymbolProvider","SEARCH_RESULT_SELECTOR","provideDocumentSymbols","token","isFileLine","DocumentSymbol","path","SymbolKind","File","allLocations","originSelectionRange","reduce","p","c","union","location","registerCompletionItemProvider","provideCompletionItems","position","lineAt","character","text","header","Array","from","length","DIRECTIVES","_","i","suggestion","every","indexOf","flag","label","insertText","slice","FLAGS","registerDefinitionProvider","provideDefinition","lineResult","type","l","locations","find","contains","targetPos","Position","targetSelectionRange","start","Range","registerDocumentLinkProvider","async","range","target","targetUri","onDidChangeActiveTextEditor","cachedLastParse","documentChangeListener","dispose","workspace","onDidChangeTextDocument","doc","uri","FILE_LINE_REGEX","RESULT_LINE_REGEX","ELISION_REGEX","language","exclusive","relativePathToUri","resultsUri","startsWith","Uri","file","userDataPrefix","with","scheme","pathUtils","isAbsolute","test","homePath","process","env","HOME","HOMEPATH","join","uriFromFolderWithPath","folder","joinPath","workspaceFolders","multiRootFormattedPath","exec","workspaceName","workspacePath","wf","name","prefixMatch","toString","console","error","version","parse","lines","getText","split","links","currentTarget","currentTargetLocations","isCancellationRequested","fileLine","targetRange","resultLine","indentation","_lineNumber","separator","lineNumber","metadataOffset","Math","max","lastEnd","offset","lastIndex","match","Number","includes","convenienceLocation"],"sourceRoot":""}