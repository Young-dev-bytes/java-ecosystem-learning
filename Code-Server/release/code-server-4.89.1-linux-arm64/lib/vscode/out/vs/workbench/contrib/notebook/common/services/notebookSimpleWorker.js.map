{"version":3,"sources":["out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/fake","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/mime.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/stream.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/buffer.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/symbols.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/extpath.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/network.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/resources.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/async.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/glob.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/core/eolCounter.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/core/stringBuilder.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/core/textChange.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/model/pieceTreeTextBuffer/rbTreeBase.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeBase.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBuffer.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/contextkey/common/scanner.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/instantiation/common/descriptors.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/instantiation/common/extensions.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/instantiation/common/instantiation.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/contextkey/common/contextkey.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/services/notebook/common/notebookDocumentService.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/contrib/notebook/common/notebookCommon.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/contrib/notebook/common/services/notebookSimpleWorker.ts"],"sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { extname } from 'vs/base/common/path';\n\nexport const Mimes = Object.freeze({\n\ttext: 'text/plain',\n\tbinary: 'application/octet-stream',\n\tunknown: 'application/unknown',\n\tmarkdown: 'text/markdown',\n\tlatex: 'text/latex',\n\turiList: 'text/uri-list',\n});\n\ninterface MapExtToMediaMimes {\n\t[index: string]: string;\n}\n\nconst mapExtToTextMimes: MapExtToMediaMimes = {\n\t'.css': 'text/css',\n\t'.csv': 'text/csv',\n\t'.htm': 'text/html',\n\t'.html': 'text/html',\n\t'.ics': 'text/calendar',\n\t'.js': 'text/javascript',\n\t'.mjs': 'text/javascript',\n\t'.txt': 'text/plain',\n\t'.xml': 'text/xml'\n};\n\n// Known media mimes that we can handle\nconst mapExtToMediaMimes: MapExtToMediaMimes = {\n\t'.aac': 'audio/x-aac',\n\t'.avi': 'video/x-msvideo',\n\t'.bmp': 'image/bmp',\n\t'.flv': 'video/x-flv',\n\t'.gif': 'image/gif',\n\t'.ico': 'image/x-icon',\n\t'.jpe': 'image/jpg',\n\t'.jpeg': 'image/jpg',\n\t'.jpg': 'image/jpg',\n\t'.m1v': 'video/mpeg',\n\t'.m2a': 'audio/mpeg',\n\t'.m2v': 'video/mpeg',\n\t'.m3a': 'audio/mpeg',\n\t'.mid': 'audio/midi',\n\t'.midi': 'audio/midi',\n\t'.mk3d': 'video/x-matroska',\n\t'.mks': 'video/x-matroska',\n\t'.mkv': 'video/x-matroska',\n\t'.mov': 'video/quicktime',\n\t'.movie': 'video/x-sgi-movie',\n\t'.mp2': 'audio/mpeg',\n\t'.mp2a': 'audio/mpeg',\n\t'.mp3': 'audio/mpeg',\n\t'.mp4': 'video/mp4',\n\t'.mp4a': 'audio/mp4',\n\t'.mp4v': 'video/mp4',\n\t'.mpe': 'video/mpeg',\n\t'.mpeg': 'video/mpeg',\n\t'.mpg': 'video/mpeg',\n\t'.mpg4': 'video/mp4',\n\t'.mpga': 'audio/mpeg',\n\t'.oga': 'audio/ogg',\n\t'.ogg': 'audio/ogg',\n\t'.opus': 'audio/opus',\n\t'.ogv': 'video/ogg',\n\t'.png': 'image/png',\n\t'.psd': 'image/vnd.adobe.photoshop',\n\t'.qt': 'video/quicktime',\n\t'.spx': 'audio/ogg',\n\t'.svg': 'image/svg+xml',\n\t'.tga': 'image/x-tga',\n\t'.tif': 'image/tiff',\n\t'.tiff': 'image/tiff',\n\t'.wav': 'audio/x-wav',\n\t'.webm': 'video/webm',\n\t'.webp': 'image/webp',\n\t'.wma': 'audio/x-ms-wma',\n\t'.wmv': 'video/x-ms-wmv',\n\t'.woff': 'application/font-woff',\n};\n\nexport function getMediaOrTextMime(path: string): string | undefined {\n\tconst ext = extname(path);\n\tconst textMime = mapExtToTextMimes[ext.toLowerCase()];\n\tif (textMime !== undefined) {\n\t\treturn textMime;\n\t} else {\n\t\treturn getMediaMime(path);\n\t}\n}\n\nexport function getMediaMime(path: string): string | undefined {\n\tconst ext = extname(path);\n\treturn mapExtToMediaMimes[ext.toLowerCase()];\n}\n\nexport function getExtensionForMimeType(mimeType: string): string | undefined {\n\tfor (const extension in mapExtToMediaMimes) {\n\t\tif (mapExtToMediaMimes[extension] === mimeType) {\n\t\t\treturn extension;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nconst _simplePattern = /^(.+)\\/(.+?)(;.+)?$/;\n\nexport function normalizeMimeType(mimeType: string): string;\nexport function normalizeMimeType(mimeType: string, strict: true): string | undefined;\nexport function normalizeMimeType(mimeType: string, strict?: true): string | undefined {\n\n\tconst match = _simplePattern.exec(mimeType);\n\tif (!match) {\n\t\treturn strict\n\t\t\t? undefined\n\t\t\t: mimeType;\n\t}\n\t// https://datatracker.ietf.org/doc/html/rfc2045#section-5.1\n\t// media and subtype must ALWAYS be lowercase, parameter not\n\treturn `${match[1].toLowerCase()}/${match[2].toLowerCase()}${match[3] ?? ''}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t *\n\t * NOTE: PLEASE UNDERSTAND THAT ADDING A DATA LISTENER CAN\n\t * TURN THE STREAM INTO FLOWING MODE. IT IS THEREFOR THE\n\t * LAST LISTENER THAT SHOULD BE ADDED AND NOT THE FIRST\n\t *\n\t * Use `listenStream` as a helper method to listen to\n\t * stream events in the right order.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in native and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * Allows to remove a listener that was previously added.\n\t */\n\tremoveListener(event: string, callback: Function): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in native and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\nexport function isReadable<T>(obj: unknown): obj is Readable<T> {\n\tconst candidate = obj as Readable<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn typeof candidate.read === 'function';\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in native and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t *\n\t * If a `highWaterMark` is configured and writing to the\n\t * stream reaches this mark, a promise will be returned\n\t * that should be awaited on before writing more data.\n\t * Otherwise there is a risk of buffering a large number\n\t * of data chunks without consumer.\n\t */\n\twrite(data: T): void | Promise<void>;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t *\n\t * NOTE: call `end` to signal that the stream has ended,\n\t * this DOES NOT happen automatically from `error`.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is provided, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t */\n\tend(result?: T): void;\n}\n\n/**\n * A stream that has a buffer already read. Returns the original stream\n * that was read as well as the chunks that got read.\n *\n * The `ended` flag indicates if the stream has been fully consumed.\n */\nexport interface ReadableBufferedStream<T> {\n\n\t/**\n\t * The original stream that is being read.\n\t */\n\tstream: ReadableStream<T>;\n\n\t/**\n\t * An array of chunks already read from this stream.\n\t */\n\tbuffer: T[];\n\n\t/**\n\t * Signals if the stream has ended or not. If not, consumers\n\t * should continue to read from the stream until consumed.\n\t */\n\tended: boolean;\n}\n\nexport function isReadableStream<T>(obj: unknown): obj is ReadableStream<T> {\n\tconst candidate = obj as ReadableStream<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport function isReadableBufferedStream<T>(obj: unknown): obj is ReadableBufferedStream<T> {\n\tconst candidate = obj as ReadableBufferedStream<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn isReadableStream(candidate.stream) && Array.isArray(candidate.buffer) && typeof candidate.ended === 'boolean';\n}\n\nexport interface IReducer<T, R = T> {\n\t(data: T[]): R;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>, options?: WriteableStreamOptions): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer, options);\n}\n\nexport interface WriteableStreamOptions {\n\n\t/**\n\t * The number of objects to buffer before WriteableStream#write()\n\t * signals back that the buffer is full. Can be used to reduce\n\t * the memory pressure when the stream is not flowing.\n\t */\n\thighWaterMark?: number;\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tprivate readonly pendingWritePromises: Function[] = [];\n\n\tconstructor(private reducer: IReducer<T>, private options?: WriteableStreamOptions) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void | Promise<void> {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitData(data);\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\n\t\t\t// highWaterMark: if configured, signal back when buffer reached limits\n\t\t\tif (typeof this.options?.highWaterMark === 'number' && this.buffer.data.length > this.options.highWaterMark) {\n\t\t\t\treturn new Promise(resolve => this.pendingWritePromises.push(resolve));\n\t\t\t}\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitError(error);\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data if provided\n\t\tif (typeof result !== 'undefined') {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitEnd();\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\tprivate emitData(data: T): void {\n\t\tthis.listeners.data.slice(0).forEach(listener => listener(data)); // slice to avoid listener mutation from delivering event\n\t}\n\n\tprivate emitError(error: Error): void {\n\t\tif (this.listeners.error.length === 0) {\n\t\t\tonUnexpectedError(error); // nobody listened to this error so we log it as unexpected\n\t\t} else {\n\t\t\tthis.listeners.error.slice(0).forEach(listener => listener(error)); // slice to avoid listener mutation from delivering event\n\t\t}\n\t}\n\n\tprivate emitEnd(): void {\n\t\tthis.listeners.end.slice(0).forEach(listener => listener()); // slice to avoid listener mutation from delivering event\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tremoveListener(event: string, callback: Function): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet listeners: unknown[] | undefined = undefined;\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tlisteners = this.listeners.data;\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tlisteners = this.listeners.end;\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tlisteners = this.listeners.error;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (listeners) {\n\t\t\tconst index = listeners.indexOf(callback);\n\t\t\tif (index >= 0) {\n\t\t\t\tlisteners.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.emitData(fullDataBuffer);\n\n\t\t\tthis.buffer.data.length = 0;\n\n\t\t\t// When the buffer is empty, resolve all pending writers\n\t\t\tconst pendingWritePromises = [...this.pendingWritePromises];\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t\tpendingWritePromises.forEach(pendingWritePromise => pendingWritePromise());\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.emitError(error);\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.emitEnd();\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function peekReadable<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T or consuming\n * a stream fully, awaiting all the events without caring\n * about the data.\n */\nexport function consumeStream<T, R = T>(stream: ReadableStreamEvents<T>, reducer: IReducer<T, R>): Promise<R>;\nexport function consumeStream(stream: ReadableStreamEvents<unknown>): Promise<undefined>;\nexport function consumeStream<T, R = T>(stream: ReadableStreamEvents<T>, reducer?: IReducer<T, R>): Promise<R | undefined> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tlistenStream(stream, {\n\t\t\tonData: chunk => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\tchunks.push(chunk);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError: error => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonEnd: () => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\tresolve(reducer(chunks));\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport interface IStreamListener<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\tonData(data: T): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\tonError(err: Error): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\tonEnd(): void;\n}\n\n/**\n * Helper to listen to all events of a T stream in proper order.\n */\nexport function listenStream<T>(stream: ReadableStreamEvents<T>, listener: IStreamListener<T>, token?: CancellationToken): void {\n\n\tstream.on('error', error => {\n\t\tif (!token?.isCancellationRequested) {\n\t\t\tlistener.onError(error);\n\t\t}\n\t});\n\n\tstream.on('end', () => {\n\t\tif (!token?.isCancellationRequested) {\n\t\t\tlistener.onEnd();\n\t\t}\n\t});\n\n\t// Adding the `data` listener will turn the stream\n\t// into flowing mode. As such it is important to\n\t// add this listener last (DO NOT CHANGE!)\n\tstream.on('data', data => {\n\t\tif (!token?.isCancellationRequested) {\n\t\t\tlistener.onData(data);\n\t\t}\n\t});\n}\n\n/**\n * Helper to peek up to `maxChunks` into a stream. The return type signals if\n * the stream has ended or not. If not, caller needs to add a `data` listener\n * to continue reading.\n */\nexport function peekStream<T>(stream: ReadableStream<T>, maxChunks: number): Promise<ReadableBufferedStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst streamListeners = new DisposableStore();\n\t\tconst buffer: T[] = [];\n\n\t\t// Data Listener\n\t\tconst dataListener = (chunk: T) => {\n\n\t\t\t// Add to buffer\n\t\t\tbuffer.push(chunk);\n\n\t\t\t// We reached maxChunks and thus need to return\n\t\t\tif (buffer.length > maxChunks) {\n\n\t\t\t\t// Dispose any listeners and ensure to pause the\n\t\t\t\t// stream so that it can be consumed again by caller\n\t\t\t\tstreamListeners.dispose();\n\t\t\t\tstream.pause();\n\n\t\t\t\treturn resolve({ stream, buffer, ended: false });\n\t\t\t}\n\t\t};\n\n\t\t// Error Listener\n\t\tconst errorListener = (error: Error) => {\n\t\t\tstreamListeners.dispose();\n\n\t\t\treturn reject(error);\n\t\t};\n\n\t\t// End Listener\n\t\tconst endListener = () => {\n\t\t\tstreamListeners.dispose();\n\n\t\t\treturn resolve({ stream, buffer, ended: true });\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('error', errorListener)));\n\t\tstream.on('error', errorListener);\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('end', endListener)));\n\t\tstream.on('end', endListener);\n\n\t\t// Important: leave the `data` listener last because\n\t\t// this can turn the stream into flowing mode and we\n\t\t// want `error` events to be received as well.\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('data', dataListener)));\n\t\tstream.on('data', dataListener);\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to create an empty stream\n */\nexport function emptyStream(): ReadableStream<never> {\n\tconst stream = newWriteableStream<never>(() => { throw new Error('not supported'); });\n\tstream.end();\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tlistenStream(stream, {\n\t\tonData: data => target.write(transformer.data(data)),\n\t\tonError: error => target.error(transformer.error ? transformer.error(error) : error),\n\t\tonEnd: () => target.end()\n\t});\n\n\treturn target;\n}\n\n/**\n * Helper to take an existing readable that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedReadable<T>(prefix: T, readable: Readable<T>, reducer: IReducer<T>): Readable<T> {\n\tlet prefixHandled = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tconst chunk = readable.read();\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\t// If we have also a read-result, make\n\t\t\t\t// sure to reduce it to a single result\n\t\t\t\tif (chunk !== null) {\n\t\t\t\t\treturn reducer([prefix, chunk]);\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, just return prefix directly\n\t\t\t\treturn prefix;\n\t\t\t}\n\n\t\t\treturn chunk;\n\t\t}\n\t};\n}\n\n/**\n * Helper to take an existing stream that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedStream<T>(prefix: T, stream: ReadableStream<T>, reducer: IReducer<T>): ReadableStream<T> {\n\tlet prefixHandled = false;\n\n\tconst target = newWriteableStream<T>(reducer);\n\n\tlistenStream(stream, {\n\t\tonData: data => {\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\treturn target.write(reducer([prefix, data]));\n\t\t\t}\n\n\t\t\treturn target.write(data);\n\t\t},\n\t\tonError: error => target.error(error),\n\t\tonEnd: () => {\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\ttarget.write(prefix);\n\t\t\t}\n\n\t\t\ttarget.end();\n\t\t}\n\t});\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Lazy } from 'vs/base/common/lazy';\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst indexOfTable = new Lazy(() => new Uint8Array(256));\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\t/**\n\t * When running in a nodejs context, if `actual` is not a nodejs Buffer, the backing store for\n\t * the returned `VSBuffer` instance might use a nodejs Buffer allocated from node's Buffer pool,\n\t * which is not transferrable.\n\t */\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic fromString(source: string, options?: { dontUseNodeBuffer?: boolean }): VSBuffer {\n\t\tconst dontUseNodeBuffer = options?.dontUseNodeBuffer || false;\n\t\tif (!dontUseNodeBuffer && hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t}\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic fromByteArray(source: number[]): VSBuffer {\n\t\tconst result = VSBuffer.alloc(source.length);\n\t\tfor (let i = 0, len = source.length; i < len; i++) {\n\t\t\tresult.buffer[i] = source[i];\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tclone(): VSBuffer {\n\t\tconst result = VSBuffer.alloc(this.byteLength);\n\t\tresult.set(this);\n\t\treturn result;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performance, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void;\n\tset(array: Uint8Array, offset?: number): void;\n\tset(array: ArrayBuffer, offset?: number): void;\n\tset(array: ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void {\n\t\tif (array instanceof VSBuffer) {\n\t\t\tthis.buffer.set(array.buffer, offset);\n\t\t} else if (array instanceof Uint8Array) {\n\t\t\tthis.buffer.set(array, offset);\n\t\t} else if (array instanceof ArrayBuffer) {\n\t\t\tthis.buffer.set(new Uint8Array(array), offset);\n\t\t} else if (ArrayBuffer.isView(array)) {\n\t\t\tthis.buffer.set(new Uint8Array(array.buffer, array.byteOffset, array.byteLength), offset);\n\t\t} else {\n\t\t\tthrow new Error(`Unknown argument 'array'`);\n\t\t}\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt32LE(offset: number): number {\n\t\treturn readUInt32LE(this.buffer, offset);\n\t}\n\n\twriteUInt32LE(value: number, offset: number): void {\n\t\twriteUInt32LE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n\n\tindexOf(subarray: VSBuffer | Uint8Array, offset = 0) {\n\t\treturn binaryIndexOf(this.buffer, subarray instanceof VSBuffer ? subarray.buffer : subarray, offset);\n\t}\n}\n\n/**\n * Like String.indexOf, but works on Uint8Arrays.\n * Uses the boyer-moore-horspool algorithm to be reasonably speedy.\n */\nexport function binaryIndexOf(haystack: Uint8Array, needle: Uint8Array, offset = 0): number {\n\tconst needleLen = needle.byteLength;\n\tconst haystackLen = haystack.byteLength;\n\n\tif (needleLen === 0) {\n\t\treturn 0;\n\t}\n\n\tif (needleLen === 1) {\n\t\treturn haystack.indexOf(needle[0]);\n\t}\n\n\tif (needleLen > haystackLen - offset) {\n\t\treturn -1;\n\t}\n\n\t// find index of the subarray using boyer-moore-horspool algorithm\n\tconst table = indexOfTable.value;\n\ttable.fill(needle.length);\n\tfor (let i = 0; i < needle.length; i++) {\n\t\ttable[needle[i]] = needle.length - i - 1;\n\t}\n\n\tlet i = offset + needle.length - 1;\n\tlet j = i;\n\tlet result = -1;\n\twhile (i < haystackLen) {\n\t\tif (haystack[i] === needle[j]) {\n\t\t\tif (j === 0) {\n\t\t\t\tresult = i;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ti--;\n\t\t\tj--;\n\t\t} else {\n\t\t\ti += Math.max(needle.length - j, table[haystack[i]]);\n\t\t\tj = needle.length - 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0)\n\t);\n}\n\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0) |\n\t\t((source[offset + 2] << 16) >>> 0) |\n\t\t((source[offset + 3] << 24) >>> 0)\n\t);\n}\n\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 3] = (value & 0b11111111);\n}\n\nexport function readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport interface VSBufferReadableBufferedStream extends streams.ReadableBufferedStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport async function bufferedStreamToBuffer(bufferedStream: streams.ReadableBufferedStream<VSBuffer>): Promise<VSBuffer> {\n\tif (bufferedStream.ended) {\n\t\treturn VSBuffer.concat(bufferedStream.buffer);\n\t}\n\n\treturn VSBuffer.concat([\n\n\t\t// Include already read chunks...\n\t\t...bufferedStream.buffer,\n\n\t\t// ...and all additional chunks\n\t\tawait streamToBuffer(bufferedStream.stream)\n\t]);\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(options?: streams.WriteableStreamOptions): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks), options);\n}\n\nexport function prefixedBufferReadable(prefix: VSBuffer, readable: VSBufferReadable): VSBufferReadable {\n\treturn streams.prefixedReadable(prefix, readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function prefixedBufferStream(prefix: VSBuffer, stream: VSBufferReadableStream): VSBufferReadableStream {\n\treturn streams.prefixedStream(prefix, stream, chunks => VSBuffer.concat(chunks));\n}\n\n/** Decodes base64 to a uint8 array. URL-encoded and unpadded base64 is allowed. */\nexport function decodeBase64(encoded: string) {\n\tlet building = 0;\n\tlet remainder = 0;\n\tlet bufi = 0;\n\n\t// The simpler way to do this is `Uint8Array.from(atob(str), c => c.charCodeAt(0))`,\n\t// but that's about 10-20x slower than this function in current Chromium versions.\n\n\tconst buffer = new Uint8Array(Math.floor(encoded.length / 4 * 3));\n\tconst append = (value: number) => {\n\t\tswitch (remainder) {\n\t\t\tcase 3:\n\t\t\t\tbuffer[bufi++] = building | value;\n\t\t\t\tremainder = 0;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tbuffer[bufi++] = building | (value >>> 2);\n\t\t\t\tbuilding = value << 6;\n\t\t\t\tremainder = 3;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tbuffer[bufi++] = building | (value >>> 4);\n\t\t\t\tbuilding = value << 4;\n\t\t\t\tremainder = 2;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbuilding = value << 2;\n\t\t\t\tremainder = 1;\n\t\t}\n\t};\n\n\tfor (let i = 0; i < encoded.length; i++) {\n\t\tconst code = encoded.charCodeAt(i);\n\t\t// See https://datatracker.ietf.org/doc/html/rfc4648#section-4\n\t\t// This branchy code is about 3x faster than an indexOf on a base64 char string.\n\t\tif (code >= 65 && code <= 90) {\n\t\t\tappend(code - 65); // A-Z starts ranges from char code 65 to 90\n\t\t} else if (code >= 97 && code <= 122) {\n\t\t\tappend(code - 97 + 26); // a-z starts ranges from char code 97 to 122, starting at byte 26\n\t\t} else if (code >= 48 && code <= 57) {\n\t\t\tappend(code - 48 + 52); // 0-9 starts ranges from char code 48 to 58, starting at byte 52\n\t\t} else if (code === 43 || code === 45) {\n\t\t\tappend(62); // \"+\" or \"-\" for URLS\n\t\t} else if (code === 47 || code === 95) {\n\t\t\tappend(63); // \"/\" or \"_\" for URLS\n\t\t} else if (code === 61) {\n\t\t\tbreak; // \"=\"\n\t\t} else {\n\t\t\tthrow new SyntaxError(`Unexpected base64 character ${encoded[i]}`);\n\t\t}\n\t}\n\n\tconst unpadded = bufi;\n\twhile (remainder > 0) {\n\t\tappend(0);\n\t}\n\n\t// slice is needed to account for overestimation due to padding\n\treturn VSBuffer.wrap(buffer).slice(0, unpadded);\n}\n\nconst base64Alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst base64UrlSafeAlphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';\n\n/** Encodes a buffer to a base64 string. */\nexport function encodeBase64({ buffer }: VSBuffer, padded = true, urlSafe = false) {\n\tconst dictionary = urlSafe ? base64UrlSafeAlphabet : base64Alphabet;\n\tlet output = '';\n\n\tconst remainder = buffer.byteLength % 3;\n\n\tlet i = 0;\n\tfor (; i < buffer.byteLength - remainder; i += 3) {\n\t\tconst a = buffer[i + 0];\n\t\tconst b = buffer[i + 1];\n\t\tconst c = buffer[i + 2];\n\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4 | b >>> 4) & 0b111111];\n\t\toutput += dictionary[(b << 2 | c >>> 6) & 0b111111];\n\t\toutput += dictionary[c & 0b111111];\n\t}\n\n\tif (remainder === 1) {\n\t\tconst a = buffer[i + 0];\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4) & 0b111111];\n\t\tif (padded) { output += '=='; }\n\t} else if (remainder === 2) {\n\t\tconst a = buffer[i + 0];\n\t\tconst b = buffer[i + 1];\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4 | b >>> 4) & 0b111111];\n\t\toutput += dictionary[(b << 2) & 0b111111];\n\t\tif (padded) { output += '='; }\n\t}\n\n\treturn output;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Can be passed into the Delayed to defer using a microtask\n * */\nexport const MicrotaskDelay = Symbol('MicrotaskDelay');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isAbsolute, join, normalize, posix, sep } from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\nimport { equalsIgnoreCase, rtrim, startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { isNumber } from 'vs/base/common/types';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Takes a Windows OS path (using backward or forward slashes) and turns it into a posix path:\n * - turns backward slashes into forward slashes\n * - makes it absolute if it starts with a drive letter\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toPosixPath(osPath: string) {\n\tif (osPath.indexOf('/') === -1) {\n\t\tosPath = toSlashes(osPath);\n\t}\n\tif (/^[a-zA-Z]:(\\/|$)/.test(osPath)) { // starts with a drive letter\n\t\tosPath = '/' + osPath;\n\t}\n\treturn osPath;\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\tcode = path.charCodeAt(1);\n\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\n\tcode = path.charCodeAt(pos + 1);\n\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])(\\.(.*?))?$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqual` instead. If you are\n * in a context without services, consider to pass down the `extUri` from the outside\n * or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqualOrParent` instead. If\n * you are in a context without services, consider to pass down the `extUri` from the\n * outside, or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqualOrParent(base: string, parentCandidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (base === parentCandidate) {\n\t\treturn true;\n\t}\n\n\tif (!base || !parentCandidate) {\n\t\treturn false;\n\t}\n\n\tif (parentCandidate.length > base.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(base, parentCandidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (parentCandidate.length === base.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = parentCandidate.length;\n\t\tif (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn base.charAt(sepOffset) === separator;\n\t}\n\n\tif (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n\t\tparentCandidate += separator;\n\t}\n\n\treturn base.indexOf(parentCandidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\treturn removeTrailingPathSeparator(candidate);\n}\n\nexport function removeTrailingPathSeparator(candidate: string): string {\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn hasDriveLetter(pathNormalized) &&\n\t\t\t(path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function hasDriveLetter(path: string, isWindowsOS: boolean = isWindows): boolean {\n\tif (isWindowsOS) {\n\t\treturn isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === CharCode.Colon;\n\t}\n\n\treturn false;\n}\n\nexport function getDriveLetter(path: string, isWindowsOS: boolean = isWindows): string | undefined {\n\treturn hasDriveLetter(path, isWindowsOS) ? path[0] : undefined;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase?: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n\nexport interface IPathWithLineAndColumn {\n\tpath: string;\n\tline?: number;\n\tcolumn?: number;\n}\n\nexport function parseLineAndColumnAware(rawPath: string): IPathWithLineAndColumn {\n\tconst segments = rawPath.split(':'); // C:\\file.txt:<line>:<column>\n\n\tlet path: string | undefined = undefined;\n\tlet line: number | undefined = undefined;\n\tlet column: number | undefined = undefined;\n\n\tfor (const segment of segments) {\n\t\tconst segmentAsNumber = Number(segment);\n\t\tif (!isNumber(segmentAsNumber)) {\n\t\t\tpath = !!path ? [path, segment].join(':') : segment; // a colon can well be part of a path (e.g. C:\\...)\n\t\t} else if (line === undefined) {\n\t\t\tline = segmentAsNumber;\n\t\t} else if (column === undefined) {\n\t\t\tcolumn = segmentAsNumber;\n\t\t}\n\t}\n\n\tif (!path) {\n\t\tthrow new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`');\n\t}\n\n\treturn {\n\t\tpath,\n\t\tline: line !== undefined ? line : undefined,\n\t\tcolumn: column !== undefined ? column : line !== undefined ? 1 : undefined // if we have a line, make sure column is also set\n\t};\n}\n\nconst pathChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nconst windowsSafePathFirstChars = 'BDEFGHIJKMOQRSTUVWXYZbdefghijkmoqrstuvwxyz0123456789';\n\nexport function randomPath(parent?: string, prefix?: string, randomLength = 8): string {\n\tlet suffix = '';\n\tfor (let i = 0; i < randomLength; i++) {\n\t\tlet pathCharsTouse: string;\n\t\tif (i === 0 && isWindows && !prefix && (randomLength === 3 || randomLength === 4)) {\n\n\t\t\t// Windows has certain reserved file names that cannot be used, such\n\t\t\t// as AUX, CON, PRN, etc. We want to avoid generating a random name\n\t\t\t// that matches that pattern, so we use a different set of characters\n\t\t\t// for the first character of the name that does not include any of\n\t\t\t// the reserved names first characters.\n\n\t\t\tpathCharsTouse = windowsSafePathFirstChars;\n\t\t} else {\n\t\t\tpathCharsTouse = pathChars;\n\t\t}\n\n\t\tsuffix += pathCharsTouse.charAt(Math.floor(Math.random() * pathCharsTouse.length));\n\t}\n\n\tlet randomFileName: string;\n\tif (prefix) {\n\t\trandomFileName = `${prefix}-${suffix}`;\n\t} else {\n\t\trandomFileName = suffix;\n\t}\n\n\tif (parent) {\n\t\treturn join(parent, randomFileName);\n\t}\n\n\treturn randomFileName;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as errors from 'vs/base/common/errors';\nimport * as platform from 'vs/base/common/platform';\nimport { equalsIgnoreCase, startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport * as paths from 'vs/base/common/path';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const vscodeManagedRemoteResource = 'vscode-managed-remote-resource';\n\n\texport const vscodeUserData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeNotebookCell = 'vscode-notebook-cell';\n\texport const vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n\texport const vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n\texport const vscodeInteractiveInput = 'vscode-interactive-input';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const vscodeWorkspaceTrust = 'vscode-workspace-trust';\n\n\texport const vscodeTerminal = 'vscode-terminal';\n\n\t/** Scheme used for code blocks in chat. */\n\texport const vscodeChatCodeBlock = 'vscode-chat-code-block';\n\t/** Scheme used for LHS of code compare (aka diff) blocks in chat. */\n\texport const vscodeChatCodeCompreBlock = 'vscode-chat-code-compare-block';\n\t/** Scheme used for the chat input editor. */\n\texport const vscodeChatSesssion = 'vscode-chat-editor';\n\n\t/**\n\t * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n\t */\n\texport const webviewPanel = 'webview-panel';\n\n\t/**\n\t * Scheme used for loading the wrapper html and script in webviews.\n\t */\n\texport const vscodeWebview = 'vscode-webview';\n\n\t/**\n\t * Scheme used for extension pages\n\t */\n\texport const extension = 'extension';\n\n\t/**\n\t * Scheme used as a replacement of `file` scheme to load\n\t * files with our custom protocol handler (desktop only).\n\t */\n\texport const vscodeFileResource = 'vscode-file';\n\n\t/**\n\t * Scheme used for temporary resources\n\t */\n\texport const tmp = 'tmp';\n\n\t/**\n\t * Scheme used vs live share\n\t */\n\texport const vsls = 'vsls';\n\n\t/**\n\t * Scheme used for the Source Control commit input's text document\n\t */\n\texport const vscodeSourceControl = 'vscode-scm';\n\n\t/**\n\t * Scheme used for input box for creating comments.\n\t */\n\texport const commentsInput = 'comment';\n\n\t/**\n\t * Scheme used for special rendering of settings in the release notes\n\t */\n\texport const codeSetting = 'code-setting';\n}\n\nexport function matchesScheme(target: URI | string, scheme: string): boolean {\n\tif (URI.isUri(target)) {\n\t\treturn equalsIgnoreCase(target.scheme, scheme);\n\t} else {\n\t\treturn startsWithIgnoreCase(target, scheme + ':');\n\t}\n}\n\nexport function matchesSomeScheme(target: URI | string, ...schemes: string[]): boolean {\n\treturn schemes.some(scheme => matchesScheme(target, scheme));\n}\n\nexport const connectionTokenCookieName = 'vscode-tkn';\nexport const connectionTokenQueryName = 'tkn';\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\tprivate _serverRootPath: string = '/';\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tsetServerRootPath(product: { quality?: string; commit?: string }, serverBasePath: string | undefined): void {\n\t\tthis._serverRootPath = getServerRootPath(product, serverBasePath);\n\t}\n\n\tgetServerRootPath(): string {\n\t\treturn this._serverRootPath;\n\t}\n\n\tprivate get _remoteResourcesPath(): string {\n\t\treturn paths.posix.join(this._serverRootPath, Schemas.vscodeRemoteResource);\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\tgetPreferredWebSchema(): 'http' | 'https' {\n\t\treturn this._preferredWebSchema;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\ttry {\n\t\t\t\treturn this._delegate(uri);\n\t\t\t} catch (err) {\n\t\t\t\terrors.onUnexpectedError(err);\n\t\t\t\treturn uri;\n\t\t\t}\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1 && host.indexOf('[') === -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\tconst port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: `${host}:${port}`,\n\t\t\tpath: platform.isWeb\n\t\t\t\t? (window.location.pathname + \"/\" + this._remoteResourcesPath).replace(/\\/\\/+/g, \"/\")\n\t\t\t\t: this._remoteResourcesPath,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n\nexport function getServerRootPath(product: { quality?: string; commit?: string }, basePath: string | undefined): string {\n\treturn paths.posix.join(basePath ?? '/', `${product.quality ?? 'oss'}-${product.commit ?? 'dev'}`);\n}\n\n/**\n * A string pointing to a path inside the app. It should not begin with ./ or ../\n */\nexport type AppResourcePath = (\n\t`a${string}` | `b${string}` | `c${string}` | `d${string}` | `e${string}` | `f${string}`\n\t| `g${string}` | `h${string}` | `i${string}` | `j${string}` | `k${string}` | `l${string}`\n\t| `m${string}` | `n${string}` | `o${string}` | `p${string}` | `q${string}` | `r${string}`\n\t| `s${string}` | `t${string}` | `u${string}` | `v${string}` | `w${string}` | `x${string}`\n\t| `y${string}` | `z${string}`\n);\n\nexport const builtinExtensionsPath: AppResourcePath = 'vs/../../extensions';\nexport const nodeModulesPath: AppResourcePath = 'vs/../../node_modules';\nexport const nodeModulesAsarPath: AppResourcePath = 'vs/../../node_modules.asar';\nexport const nodeModulesAsarUnpackedPath: AppResourcePath = 'vs/../../node_modules.asar.unpacked';\n\nexport const VSCODE_AUTHORITY = 'vscode-app';\n\nclass FileAccessImpl {\n\n\tprivate static readonly FALLBACK_AUTHORITY = VSCODE_AUTHORITY;\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\tasBrowserUri(resourcePath: AppResourcePath | ''): URI {\n\t\tconst uri = this.toUri(resourcePath, require);\n\t\treturn this.uriToBrowserUri(uri);\n\t}\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\turiToBrowserUri(uri: URI): URI {\n\t\t// Handle remote URIs via `RemoteAuthorities`\n\t\tif (uri.scheme === Schemas.vscodeRemote) {\n\t\t\treturn RemoteAuthorities.rewrite(uri);\n\t\t}\n\n\t\t// Convert to `vscode-file` resource..\n\t\tif (\n\t\t\t// ...only ever for `file` resources\n\t\t\turi.scheme === Schemas.file &&\n\t\t\t(\n\t\t\t\t// ...and we run in native environments\n\t\t\t\tplatform.isNative ||\n\t\t\t\t// ...or web worker extensions on desktop\n\t\t\t\t(platform.webWorkerOrigin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`)\n\t\t\t)\n\t\t) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.vscodeFileResource,\n\t\t\t\t// We need to provide an authority here so that it can serve\n\t\t\t\t// as origin for network and loading matters in chromium.\n\t\t\t\t// If the URI is not coming with an authority already, we\n\t\t\t\t// add our own\n\t\t\t\tauthority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\tasFileUri(resourcePath: AppResourcePath | ''): URI {\n\t\tconst uri = this.toUri(resourcePath, require);\n\t\treturn this.uriToFileUri(uri);\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\turiToFileUri(uri: URI): URI {\n\t\t// Only convert the URI if it is `vscode-file:` scheme\n\t\tif (uri.scheme === Schemas.vscodeFileResource) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.file,\n\t\t\t\t// Only preserve the `authority` if it is different from\n\t\t\t\t// our fallback authority. This ensures we properly preserve\n\t\t\t\t// Windows UNC paths that come with their own authority.\n\t\t\t\tauthority: uri.authority !== FileAccessImpl.FALLBACK_AUTHORITY ? uri.authority : null,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\tprivate toUri(uriOrModule: URI | string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI {\n\t\tif (URI.isUri(uriOrModule)) {\n\t\t\treturn uriOrModule;\n\t\t}\n\n\t\treturn URI.parse(moduleIdToUrl.toUrl(uriOrModule));\n\t}\n}\n\nexport const FileAccess = new FileAccessImpl();\n\n\nexport namespace COI {\n\n\tconst coiHeaders = new Map<'3' | '2' | '1' | string, Record<string, string>>([\n\t\t['1', { 'Cross-Origin-Opener-Policy': 'same-origin' }],\n\t\t['2', { 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n\t\t['3', { 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n\t]);\n\n\texport const CoopAndCoep = Object.freeze(coiHeaders.get('3'));\n\n\tconst coiSearchParamName = 'vscode-coi';\n\n\t/**\n\t * Extract desired headers from `vscode-coi` invocation\n\t */\n\texport function getHeadersFromQuery(url: string | URI | URL): Record<string, string> | undefined {\n\t\tlet params: URLSearchParams | undefined;\n\t\tif (typeof url === 'string') {\n\t\t\tparams = new URL(url).searchParams;\n\t\t} else if (url instanceof URL) {\n\t\t\tparams = url.searchParams;\n\t\t} else if (URI.isUri(url)) {\n\t\t\tparams = new URL(url.toString(true)).searchParams;\n\t\t}\n\t\tconst value = params?.get(coiSearchParamName);\n\t\tif (!value) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn coiHeaders.get(value);\n\t}\n\n\t/**\n\t * Add the `vscode-coi` query attribute based on wanting `COOP` and `COEP`. Will be a noop when `crossOriginIsolated`\n\t * isn't enabled the current context\n\t */\n\texport function addSearchParam(urlOrSearch: URLSearchParams | Record<string, string>, coop: boolean, coep: boolean): void {\n\t\tif (!(<any>globalThis).crossOriginIsolated) {\n\t\t\t// depends on the current context being COI\n\t\t\treturn;\n\t\t}\n\t\tconst value = coop && coep ? '3' : coep ? '2' : '1';\n\t\tif (urlOrSearch instanceof URLSearchParams) {\n\t\t\turlOrSearch.set(coiSearchParamName, value);\n\t\t} else {\n\t\t\t(<Record<string, string>>urlOrSearch)[coiSearchParamName] = value;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as extpath from 'vs/base/common/extpath';\nimport { Schemas } from 'vs/base/common/network';\nimport * as paths from 'vs/base/common/path';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { compare as strCompare, equalsIgnoreCase } from 'vs/base/common/strings';\nimport { URI, uriToFsPath } from 'vs/base/common/uri';\n\nexport function originalFSPath(uri: URI): string {\n\treturn uriToFsPath(uri, true);\n}\n\n//#region IExtUri\n\nexport interface IExtUri {\n\n\t// --- identity\n\n\t/**\n\t * Compares two uris.\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tcompare(uri1: URI, uri2: URI, ignoreFragment?: boolean): number;\n\n\t/**\n\t * Tests whether two uris are equal\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n\t *\n\t * @param base A uri which is \"longer\" or at least same length as `parentCandidate`\n\t * @param parentCandidate A uri which is \"shorter\" or up to same length as `base`\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Creates a key from a resource URI to be used to resource comparison and for resource maps.\n\t * @see {@link ResourceMap}\n\t * @param uri Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tgetComparisonKey(uri: URI, ignoreFragment?: boolean): string;\n\n\t/**\n\t * Whether the casing of the path-component of the uri should be ignored.\n\t */\n\tignorePathCasing(uri: URI): boolean;\n\n\t// --- path math\n\n\tbasenameOrAuthority(resource: URI): string;\n\n\t/**\n\t * Returns the basename of the path component of an uri.\n\t * @param resource\n\t */\n\tbasename(resource: URI): string;\n\n\t/**\n\t * Returns the extension of the path component of an uri.\n\t * @param resource\n\t */\n\textname(resource: URI): string;\n\t/**\n\t * Return a URI representing the directory of a URI path.\n\t *\n\t * @param resource The input URI.\n\t * @returns The URI representing the directory of the input URI.\n\t */\n\tdirname(resource: URI): URI;\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param resource The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI;\n\t/**\n\t * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n\t *\n\t * @param resource The URI to normalize the path.\n\t * @returns The URI with the normalized path.\n\t */\n\tnormalizePath(resource: URI): URI;\n\t/**\n\t *\n\t * @param from\n\t * @param to\n\t */\n\trelativePath(from: URI, to: URI): string | undefined;\n\t/**\n\t * Resolves an absolute or relative path against a base URI.\n\t * The path can be relative or absolute posix or a Windows path\n\t */\n\tresolvePath(base: URI, path: string): URI;\n\n\t// --- misc\n\n\t/**\n\t * Returns true if the URI path is absolute.\n\t */\n\tisAbsolutePath(resource: URI): boolean;\n\t/**\n\t * Tests whether the two authorities are the same\n\t */\n\tisEqualAuthority(a1: string, a2: string): boolean;\n\t/**\n\t * Returns true if the URI path has a trailing path separator\n\t */\n\thasTrailingPathSeparator(resource: URI, sep?: string): boolean;\n\t/**\n\t * Removes a trailing path separator, if there's one.\n\t * Important: Doesn't remove the first slash, it would make the URI invalid\n\t */\n\tremoveTrailingPathSeparator(resource: URI, sep?: string): URI;\n\t/**\n\t * Adds a trailing path separator to the URI if there isn't one already.\n\t * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n\t */\n\taddTrailingPathSeparator(resource: URI, sep?: string): URI;\n}\n\nexport class ExtUri implements IExtUri {\n\n\tconstructor(private _ignorePathCasing: (uri: URI) => boolean) { }\n\n\tcompare(uri1: URI, uri2: URI, ignoreFragment: boolean = false): number {\n\t\tif (uri1 === uri2) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n\t}\n\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment: boolean = false): boolean {\n\t\tif (uri1 === uri2) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!uri1 || !uri2) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n\t}\n\n\tgetComparisonKey(uri: URI, ignoreFragment: boolean = false): string {\n\t\treturn uri.with({\n\t\t\tpath: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n\t\t\tfragment: ignoreFragment ? null : undefined\n\t\t}).toString();\n\t}\n\n\tignorePathCasing(uri: URI): boolean {\n\t\treturn this._ignorePathCasing(uri);\n\t}\n\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment: boolean = false): boolean {\n\t\tif (base.scheme === parentCandidate.scheme) {\n\t\t\tif (base.scheme === Schemas.file) {\n\t\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// --- path math\n\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI {\n\t\treturn URI.joinPath(resource, ...pathFragment);\n\t}\n\n\tbasenameOrAuthority(resource: URI): string {\n\t\treturn basename(resource) || resource.authority;\n\t}\n\n\tbasename(resource: URI): string {\n\t\treturn paths.posix.basename(resource.path);\n\t}\n\n\textname(resource: URI): string {\n\t\treturn paths.posix.extname(resource.path);\n\t}\n\n\tdirname(resource: URI): URI {\n\t\tif (resource.path.length === 0) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet dirname;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tdirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tdirname = paths.posix.dirname(resource.path);\n\t\t\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\t\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\t\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t\t\t}\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: dirname\n\t\t});\n\t}\n\n\tnormalizePath(resource: URI): URI {\n\t\tif (!resource.path.length) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet normalizedPath: string;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: normalizedPath\n\t\t});\n\t}\n\n\trelativePath(from: URI, to: URI): string | undefined {\n\t\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (from.scheme === Schemas.file) {\n\t\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t\t}\n\t\tlet fromPath = from.path || '/';\n\t\tconst toPath = to.path || '/';\n\t\tif (this._ignorePathCasing(from)) {\n\t\t\t// make casing of fromPath match toPath\n\t\t\tlet i = 0;\n\t\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t\t}\n\t\treturn paths.posix.relative(fromPath, toPath);\n\t}\n\n\tresolvePath(base: URI, path: string): URI {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\t\treturn base.with({\n\t\t\t\tauthority: newURI.authority,\n\t\t\t\tpath: newURI.path\n\t\t\t});\n\t\t}\n\t\tpath = extpath.toPosixPath(path); // we allow path to be a windows path\n\t\treturn base.with({\n\t\t\tpath: paths.posix.resolve(base.path, path)\n\t\t});\n\t}\n\n\t// --- misc\n\n\tisAbsolutePath(resource: URI): boolean {\n\t\treturn !!resource.path && resource.path[0] === '/';\n\t}\n\n\tisEqualAuthority(a1: string | undefined, a2: string | undefined) {\n\t\treturn a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n\t}\n\n\thasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t\t} else {\n\t\t\tconst p = resource.path;\n\t\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t\t}\n\t}\n\n\tremoveTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\t\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t\t}\n\t\treturn resource;\n\t}\n\n\taddTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\tlet isRootSep: boolean = false;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t\t} else {\n\t\t\tsep = '/';\n\t\t\tconst p = resource.path;\n\t\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t\t}\n\t\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path + '/' });\n\t\t}\n\t\treturn resource;\n\t}\n}\n\n\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn uri.scheme === Schemas.file ? !isLinux : true;\n});\n\n\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\n\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n\n//#endregion\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined, localScheme: string): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: localScheme, authority, path });\n\t}\n\n\treturn resource.with({ scheme: localScheme });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { BugIndicatingError, CancellationError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, DisposableMap, DisposableStore, IDisposable, MutableDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { extUri as defaultExtUri, IExtUri } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { setTimeout0 } from 'vs/base/common/platform';\nimport { MicrotaskDelay } from './symbols';\nimport { Lazy } from 'vs/base/common/lazy';\n\nexport function isThenable<T>(obj: unknown): obj is Promise<T> {\n\treturn !!obj && typeof (obj as unknown as Promise<T>).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tconst subscription = source.token.onCancellationRequested(() => {\n\t\t\tsubscription.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t\tsource.dispose();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\n/**\n * Returns a promise that resolves with `undefined` as soon as the passed token is cancelled.\n * @see {@link raceCancellationError}\n */\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\n\n/**\n * Returns a promise that resolves with `defaultValue` as soon as the passed token is cancelled.\n * @see {@link raceCancellationError}\n */\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T | undefined> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst ref = token.onCancellationRequested(() => {\n\t\t\tref.dispose();\n\t\t\tresolve(defaultValue);\n\t\t});\n\t\tpromise.then(resolve, reject).finally(() => ref.dispose());\n\t});\n}\n\n/**\n * Returns a promise that rejects with an {@CancellationError} as soon as the passed token is cancelled.\n * @see {@link raceCancellation}\n */\nexport function raceCancellationError<T>(promise: Promise<T>, token: CancellationToken): Promise<T> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst ref = token.onCancellationRequested(() => {\n\t\t\tref.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t\tpromise.then(resolve, reject).finally(() => ref.dispose());\n\t});\n}\n\n/**\n * Returns as soon as one of the promises resolves or rejects and cancels remaining promises\n */\nexport async function raceCancellablePromises<T>(cancellablePromises: CancelablePromise<T>[]): Promise<T> {\n\tlet resolvedPromiseIndex = -1;\n\tconst promises = cancellablePromises.map((promise, index) => promise.then(result => { resolvedPromiseIndex = index; return result; }));\n\ttry {\n\t\tconst result = await Promise.race(promises);\n\t\treturn result;\n\t} finally {\n\t\tcancellablePromises.forEach((cancellablePromise, index) => {\n\t\t\tif (index !== resolvedPromiseIndex) {\n\t\t\t\tcancellablePromise.cancel();\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T | undefined> {\n\tlet promiseResolve: ((value: T | undefined) => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.(undefined);\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T | undefined>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\n/**\n * Creates and returns a new promise, plus its `resolve` and `reject` callbacks.\n *\n * Replace with standardized [`Promise.withResolvers`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/withResolvers) once it is supported\n */\nexport function promiseWithResolvers<T>(): { promise: Promise<T>; resolve: (value: T | PromiseLike<T>) => void; reject: (err?: any) => void } {\n\tlet resolve: (value: T | PromiseLike<T>) => void;\n\tlet reject: (reason?: any) => void;\n\tconst promise = new Promise<T>((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\treturn { promise, resolve: resolve!, reject: reject! };\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler implements IDisposable {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tprivate isDisposed = false;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.isDisposed) {\n\t\t\treturn Promise.reject(new Error('Throttler is disposed'));\n\t\t}\n\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tif (this.isDisposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(resolve => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(resolve);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.queuedPromise!.then(resolve, reject);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.activePromise!.then((result: T) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tresolve(result);\n\t\t\t}, (err: unknown) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\treject(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<unknown> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask(), () => promiseTask());\n\t}\n}\n\nexport class SequencerByKey<TKey> {\n\n\tprivate promiseMap = new Map<TKey, Promise<unknown>>();\n\n\tqueue<T>(key: TKey, promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\tconst runningPromise = this.promiseMap.get(key) ?? Promise.resolve();\n\t\tconst newPromise = runningPromise\n\t\t\t.catch(() => { })\n\t\t\t.then(promiseTask)\n\t\t\t.finally(() => {\n\t\t\t\tif (this.promiseMap.get(key) === newPromise) {\n\t\t\t\t\tthis.promiseMap.delete(key);\n\t\t\t\t}\n\t\t\t});\n\t\tthis.promiseMap.set(key, newPromise);\n\t\treturn newPromise;\n\t}\n}\n\ninterface IScheduledLater extends IDisposable {\n\tisTriggered(): boolean;\n}\n\nconst timeoutDeferred = (timeout: number, fn: () => void): IScheduledLater => {\n\tlet scheduled = true;\n\tconst handle = setTimeout(() => {\n\t\tscheduled = false;\n\t\tfn();\n\t}, timeout);\n\treturn {\n\t\tisTriggered: () => scheduled,\n\t\tdispose: () => {\n\t\t\tclearTimeout(handle);\n\t\t\tscheduled = false;\n\t\t},\n\t};\n};\n\nconst microtaskDeferred = (fn: () => void): IScheduledLater => {\n\tlet scheduled = true;\n\tqueueMicrotask(() => {\n\t\tif (scheduled) {\n\t\t\tscheduled = false;\n\t\t\tfn();\n\t\t}\n\t});\n\n\treturn {\n\t\tisTriggered: () => scheduled,\n\t\tdispose: () => { scheduled = false; },\n\t};\n};\n\n/**\n * A helper to delay (debounce) execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate deferred: IScheduledLater | null;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number | typeof MicrotaskDelay) {\n\t\tthis.deferred = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((resolve, reject) => {\n\t\t\t\tthis.doResolve = resolve;\n\t\t\t\tthis.doReject = reject;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tconst fn = () => {\n\t\t\tthis.deferred = null;\n\t\t\tthis.doResolve?.(null);\n\t\t};\n\n\t\tthis.deferred = delay === MicrotaskDelay ? microtaskDeferred(fn) : timeoutDeferred(delay, fn);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn !!this.deferred?.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tthis.doReject?.(new CancellationError());\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tthis.deferred?.dispose();\n\t\tthis.deferred = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as unknown as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t\tthis.throttler.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently after a certain period of\n * time or when open is called explicitly\n */\nexport class AutoOpenBarrier extends Barrier {\n\n\tprivate readonly _timeout: any;\n\n\tconstructor(autoOpenTimeMs: number) {\n\t\tsuper();\n\t\tthis._timeout = setTimeout(() => this.open(), autoOpenTimeMs);\n\t}\n\n\toverride open(): void {\n\t\tclearTimeout(this._timeout);\n\t\tsuper.open();\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(() => {\n\t\t\tdisposable.dispose();\n\t\t\tresolve();\n\t\t}, millis);\n\t\tconst disposable = token.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\tdisposable.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t});\n}\n\n/**\n * Creates a timeout that can be disposed using its returned value.\n * @param handler The timeout handler.\n * @param timeout An optional timeout in milliseconds.\n * @param store An optional {@link DisposableStore} that will have the timeout disposable managed automatically.\n *\n * @example\n * const store = new DisposableStore;\n * // Call the timeout after 1000ms at which point it will be automatically\n * // evicted from the store.\n * const timeoutDisposable = disposableTimeout(() => {}, 1000, store);\n *\n * if (foo) {\n *   // Cancel the timeout and evict it from store.\n *   timeoutDisposable.dispose();\n * }\n */\nexport function disposableTimeout(handler: () => void, timeout = 0, store?: DisposableStore): IDisposable {\n\tconst timer = setTimeout(() => {\n\t\thandler();\n\t\tif (store) {\n\t\t\tdisposable.dispose();\n\t\t}\n\t}, timeout);\n\tconst disposable = toDisposable(() => {\n\t\tclearTimeout(timer);\n\t\tstore?.deleteAndLeak(disposable);\n\t});\n\tstore?.add(disposable);\n\treturn disposable;\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\n/**\n * Returns the result of the first promise that matches the \"shouldStop\",\n * running all promises in parallel. Supports cancelable promises.\n */\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop?: (t: T) => boolean, defaultValue?: T | null): Promise<T | null>;\nexport function firstParallel<T, R extends T>(promiseList: Promise<T>[], shouldStop: (t: T) => t is R, defaultValue?: R | null): Promise<R | null>;\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null) {\n\tif (promiseList.length === 0) {\n\t\treturn Promise.resolve(defaultValue);\n\t}\n\n\tlet todo = promiseList.length;\n\tconst finish = () => {\n\t\ttodo = -1;\n\t\tfor (const promise of promiseList) {\n\t\t\t(promise as Partial<CancelablePromise<T>>).cancel?.();\n\t\t}\n\t};\n\n\treturn new Promise<T | null>((resolve, reject) => {\n\t\tfor (const promise of promiseList) {\n\t\t\tpromise.then(result => {\n\t\t\t\tif (--todo >= 0 && shouldStop(result)) {\n\t\t\t\t\tfinish();\n\t\t\t\t\tresolve(result);\n\t\t\t\t} else if (todo === 0) {\n\t\t\t\t\tresolve(defaultValue);\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tif (--todo >= 0) {\n\t\t\t\t\t\tfinish();\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t});\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value: T | Promise<T>) => void;\n\te: (error?: unknown) => void;\n}\n\nexport interface ILimiter<T> {\n\n\treadonly size: number;\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T>;\n\n\tclear(): void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> implements ILimiter<T> {\n\n\tprivate _size = 0;\n\tprivate _isDisposed = false;\n\tprivate runningPromises: number;\n\tprivate readonly maxDegreeOfParalellism: number;\n\tprivate readonly outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onDrained: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onDrained = new Emitter<void>();\n\t}\n\n\t/**\n\t *\n\t * @returns A promise that resolved when all work is done (onDrained) or when\n\t * there is nothing to do\n\t */\n\twhenIdle(): Promise<void> {\n\t\treturn this.size > 0\n\t\t\t? Event.toPromise(this.onDrained)\n\t\t\t: Promise.resolve();\n\t}\n\n\tget onDrained(): Event<void> {\n\t\treturn this._onDrained.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error('Object has been disposed');\n\t\t}\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tthis.runningPromises--;\n\t\tif (--this._size === 0) {\n\t\t\tthis._onDrained.fire();\n\t\t}\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t}\n\t}\n\n\tclear(): void {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error('Object has been disposed');\n\t\t}\n\t\tthis.outstandingPromises.length = 0;\n\t\tthis._size = this.runningPromises;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tthis.outstandingPromises.length = 0; // stop further processing\n\t\tthis._size = 0;\n\t\tthis._onDrained.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * Same as `Queue`, ensures that only 1 task is executed at the same time. The difference to `Queue` is that\n * there is only 1 task about to be scheduled next. As such, calling `queue` while a task is executing will\n * replace the currently queued task until it executes.\n *\n * As such, the returned promise may not be from the factory that is passed in but from the next factory that\n * is running after having called `queue`.\n */\nexport class LimitedQueue {\n\n\tprivate readonly sequentializer = new TaskSequentializer();\n\n\tprivate tasks = 0;\n\n\tqueue(factory: ITask<Promise<void>>): Promise<void> {\n\t\tif (!this.sequentializer.isRunning()) {\n\t\t\treturn this.sequentializer.run(this.tasks++, factory());\n\t\t}\n\n\t\treturn this.sequentializer.queue(() => {\n\t\t\treturn this.sequentializer.run(this.tasks++, factory());\n\t\t});\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tprivate readonly drainers = new Set<DeferredPromise<void>>();\n\n\tprivate drainListeners: DisposableMap<number> | undefined = undefined;\n\tprivate drainListenerCount = 0;\n\n\tasync whenDrained(): Promise<void> {\n\t\tif (this.isDrained()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst promise = new DeferredPromise<void>();\n\t\tthis.drainers.add(promise);\n\n\t\treturn promise.p;\n\t}\n\n\tprivate isDrained(): boolean {\n\t\tfor (const [, queue] of this.queues) {\n\t\t\tif (queue.size > 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tqueueSize(resource: URI, extUri: IExtUri = defaultExtUri): number {\n\t\tconst key = extUri.getComparisonKey(resource);\n\n\t\treturn this.queues.get(key)?.size ?? 0;\n\t}\n\n\tqueueFor(resource: URI, factory: ITask<Promise<void>>, extUri: IExtUri = defaultExtUri): Promise<void> {\n\t\tconst key = extUri.getComparisonKey(resource);\n\n\t\tlet queue = this.queues.get(key);\n\t\tif (!queue) {\n\t\t\tqueue = new Queue<void>();\n\t\t\tconst drainListenerId = this.drainListenerCount++;\n\t\t\tconst drainListener = Event.once(queue.onDrained)(() => {\n\t\t\t\tqueue?.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t\tthis.onDidQueueDrain();\n\n\t\t\t\tthis.drainListeners?.deleteAndDispose(drainListenerId);\n\n\t\t\t\tif (this.drainListeners?.size === 0) {\n\t\t\t\t\tthis.drainListeners.dispose();\n\t\t\t\t\tthis.drainListeners = undefined;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!this.drainListeners) {\n\t\t\t\tthis.drainListeners = new DisposableMap();\n\t\t\t}\n\t\t\tthis.drainListeners.set(drainListenerId, drainListener);\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn queue.queue(factory);\n\t}\n\n\tprivate onDidQueueDrain(): void {\n\t\tif (!this.isDrained()) {\n\t\t\treturn; // not done yet\n\t\t}\n\n\t\tthis.releaseDrainers();\n\t}\n\n\tprivate releaseDrainers(): void {\n\t\tfor (const drainer of this.drainers) {\n\t\t\tdrainer.complete();\n\t\t}\n\n\t\tthis.drainers.clear();\n\t}\n\n\tdispose(): void {\n\t\tfor (const [, queue] of this.queues) {\n\t\t\tqueue.dispose();\n\t\t}\n\n\t\tthis.queues.clear();\n\n\t\t// Even though we might still have pending\n\t\t// tasks queued, after the queues have been\n\t\t// disposed, we can no longer track them, so\n\t\t// we release drainers to prevent hanging\n\t\t// promises when the resource queue is being\n\t\t// disposed.\n\t\tthis.releaseDrainers();\n\n\t\tthis.drainListeners?.dispose();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate disposable: IDisposable | undefined = undefined;\n\n\tcancel(): void {\n\t\tthis.disposable?.dispose();\n\t\tthis.disposable = undefined;\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number, context = globalThis): void {\n\t\tthis.cancel();\n\t\tconst handle = context.setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\n\t\tthis.disposable = toDisposable(() => {\n\t\t\tcontext.clearInterval(handle);\n\t\t\tthis.disposable = undefined;\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n}\n\nexport class RunOnceScheduler implements IDisposable {\n\n\tprotected runner: ((...args: unknown[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, delay: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\tget delay(): number {\n\t\treturn this.timeout;\n\t}\n\n\tset delay(value: number) {\n\t\tthis.timeout = value;\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tflush(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tthis.cancel();\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tthis.runner?.();\n\t}\n}\n\n/**\n * Same as `RunOnceScheduler`, but doesn't count the time spent in sleep mode.\n * > **NOTE**: Only offers 1s resolution.\n *\n * When calling `setTimeout` with 3hrs, and putting the computer immediately to sleep\n * for 8hrs, `setTimeout` will fire **as soon as the computer wakes from sleep**. But\n * this scheduler will execute 3hrs **after waking the computer from sleep**.\n */\nexport class ProcessTimeRunOnceScheduler {\n\n\tprivate runner: (() => void) | null;\n\tprivate timeout: number;\n\n\tprivate counter: number;\n\tprivate intervalToken: any;\n\tprivate intervalHandler: () => void;\n\n\tconstructor(runner: () => void, delay: number) {\n\t\tif (delay % 1000 !== 0) {\n\t\t\tconsole.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${delay}ms is not a multiple of 1000ms.`);\n\t\t}\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.counter = 0;\n\t\tthis.intervalToken = -1;\n\t\tthis.intervalHandler = this.onInterval.bind(this);\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearInterval(this.intervalToken);\n\t\t\tthis.intervalToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tif (delay % 1000 !== 0) {\n\t\t\tconsole.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${delay}ms is not a multiple of 1000ms.`);\n\t\t}\n\t\tthis.cancel();\n\t\tthis.counter = Math.ceil(delay / 1000);\n\t\tthis.intervalToken = setInterval(this.intervalHandler, 1000);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.intervalToken !== -1;\n\t}\n\n\tprivate onInterval() {\n\t\tthis.counter--;\n\t\tif (this.counter > 0) {\n\t\t\t// still need to wait\n\t\t\treturn;\n\t\t}\n\n\t\t// time elapsed\n\t\tclearInterval(this.intervalToken);\n\t\tthis.intervalToken = -1;\n\t\tthis.runner?.();\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected override doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tthis.runner?.(units);\n\t}\n\n\toverride dispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport interface IThrottledWorkerOptions {\n\n\t/**\n\t * maximum of units the worker will pass onto handler at once\n\t */\n\tmaxWorkChunkSize: number;\n\n\t/**\n\t * maximum of units the worker will keep in memory for processing\n\t */\n\tmaxBufferedWork: number | undefined;\n\n\t/**\n\t * delay before processing the next round of chunks when chunk size exceeds limits\n\t */\n\tthrottleDelay: number;\n}\n\n/**\n * The `ThrottledWorker` will accept units of work `T`\n * to handle. The contract is:\n * * there is a maximum of units the worker can handle at once (via `maxWorkChunkSize`)\n * * there is a maximum of units the worker will keep in memory for processing (via `maxBufferedWork`)\n * * after having handled `maxWorkChunkSize` units, the worker needs to rest (via `throttleDelay`)\n */\nexport class ThrottledWorker<T> extends Disposable {\n\n\tprivate readonly pendingWork: T[] = [];\n\n\tprivate readonly throttler = this._register(new MutableDisposable<RunOnceScheduler>());\n\tprivate disposed = false;\n\n\tconstructor(\n\t\tprivate options: IThrottledWorkerOptions,\n\t\tprivate readonly handler: (units: T[]) => void\n\t) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * The number of work units that are pending to be processed.\n\t */\n\tget pending(): number { return this.pendingWork.length; }\n\n\t/**\n\t * Add units to be worked on. Use `pending` to figure out\n\t * how many units are not yet processed after this method\n\t * was called.\n\t *\n\t * @returns whether the work was accepted or not. If the\n\t * worker is disposed, it will not accept any more work.\n\t * If the number of pending units would become larger\n\t * than `maxPendingWork`, more work will also not be accepted.\n\t */\n\twork(units: readonly T[]): boolean {\n\t\tif (this.disposed) {\n\t\t\treturn false; // work not accepted: disposed\n\t\t}\n\n\t\t// Check for reaching maximum of pending work\n\t\tif (typeof this.options.maxBufferedWork === 'number') {\n\n\t\t\t// Throttled: simple check if pending + units exceeds max pending\n\t\t\tif (this.throttler.value) {\n\t\t\t\tif (this.pending + units.length > this.options.maxBufferedWork) {\n\t\t\t\t\treturn false; // work not accepted: too much pending work\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Unthrottled: same as throttled, but account for max chunk getting\n\t\t\t// worked on directly without being pending\n\t\t\telse {\n\t\t\t\tif (this.pending + units.length - this.options.maxWorkChunkSize > this.options.maxBufferedWork) {\n\t\t\t\t\treturn false; // work not accepted: too much pending work\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add to pending units first\n\t\tfor (const unit of units) {\n\t\t\tthis.pendingWork.push(unit);\n\t\t}\n\n\t\t// If not throttled, start working directly\n\t\t// Otherwise, when the throttle delay has\n\t\t// past, pending work will be worked again.\n\t\tif (!this.throttler.value) {\n\t\t\tthis.doWork();\n\t\t}\n\n\t\treturn true; // work accepted\n\t}\n\n\tprivate doWork(): void {\n\n\t\t// Extract chunk to handle and handle it\n\t\tthis.handler(this.pendingWork.splice(0, this.options.maxWorkChunkSize));\n\n\t\t// If we have remaining work, schedule it after a delay\n\t\tif (this.pendingWork.length > 0) {\n\t\t\tthis.throttler.value = new RunOnceScheduler(() => {\n\t\t\t\tthis.throttler.clear();\n\n\t\t\t\tthis.doWork();\n\t\t\t}, this.options.throttleDelay);\n\t\t\tthis.throttler.value.schedule();\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.disposed = true;\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n\ntype IdleApi = Pick<typeof globalThis, 'requestIdleCallback' | 'cancelIdleCallback'>;\n\n\n/**\n * Execute the callback the next time the browser is idle, returning an\n * {@link IDisposable} that will cancel the callback when disposed. This wraps\n * [requestIdleCallback] so it will fallback to [setTimeout] if the environment\n * doesn't support it.\n *\n * @param callback The callback to run when idle, this includes an\n * [IdleDeadline] that provides the time alloted for the idle callback by the\n * browser. Not respecting this deadline will result in a degraded user\n * experience.\n * @param timeout A timeout at which point to queue no longer wait for an idle\n * callback but queue it on the regular event loop (like setTimeout). Typically\n * this should not be used.\n *\n * [IdleDeadline]: https://developer.mozilla.org/en-US/docs/Web/API/IdleDeadline\n * [requestIdleCallback]: https://developer.mozilla.org/en-US/docs/Web/API/Window/requestIdleCallback\n * [setTimeout]: https://developer.mozilla.org/en-US/docs/Web/API/Window/setTimeout\n *\n * **Note** that there is `dom.ts#runWhenWindowIdle` which is better suited when running inside a browser\n * context\n */\nexport let runWhenGlobalIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\nexport let _runWhenIdle: (targetWindow: IdleApi, callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\n(function () {\n\tif (typeof globalThis.requestIdleCallback !== 'function' || typeof globalThis.cancelIdleCallback !== 'function') {\n\t\t_runWhenIdle = (_targetWindow, runner) => {\n\t\t\tsetTimeout0(() => {\n\t\t\t\tif (disposed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst end = Date.now() + 15; // one frame at 64fps\n\t\t\t\tconst deadline: IdleDeadline = {\n\t\t\t\t\tdidTimeout: true,\n\t\t\t\t\ttimeRemaining() {\n\t\t\t\t\t\treturn Math.max(0, end - Date.now());\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\trunner(Object.freeze(deadline));\n\t\t\t});\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\t_runWhenIdle = (targetWindow: IdleApi, runner, timeout?) => {\n\t\t\tconst handle: number = targetWindow.requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\ttargetWindow.cancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n\trunWhenGlobalIdle = (runner) => _runWhenIdle(globalThis, runner);\n})();\n\nexport abstract class AbstractIdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: unknown;\n\n\tconstructor(targetWindow: IdleApi, executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = _runWhenIdle(targetWindow, () => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tget value(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n\n\tget isInitialized(): boolean {\n\t\treturn this._didRun;\n\t}\n}\n\n/**\n * An `IdleValue` that always uses the current window (which might be throttled or inactive)\n *\n * **Note** that there is `dom.ts#WindowIdleValue` which is better suited when running inside a browser\n * context\n */\nexport class GlobalIdleValue<T> extends AbstractIdleValue<T> {\n\n\tconstructor(executor: () => T) {\n\t\tsuper(globalThis, executor);\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IRunningTask {\n\treadonly taskId: number;\n\treadonly cancel: () => void;\n\treadonly promise: Promise<void>;\n}\n\ninterface IQueuedTask {\n\treadonly promise: Promise<void>;\n\treadonly promiseResolve: () => void;\n\treadonly promiseReject: (error: Error) => void;\n\trun: ITask<Promise<void>>;\n}\n\nexport interface ITaskSequentializerWithRunningTask {\n\treadonly running: Promise<void>;\n}\n\nexport interface ITaskSequentializerWithQueuedTask {\n\treadonly queued: IQueuedTask;\n}\n\n/**\n * @deprecated use `LimitedQueue` instead for an easier to use API\n */\nexport class TaskSequentializer {\n\n\tprivate _running?: IRunningTask;\n\tprivate _queued?: IQueuedTask;\n\n\tisRunning(taskId?: number): this is ITaskSequentializerWithRunningTask {\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._running?.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._running;\n\t}\n\n\tget running(): Promise<void> | undefined {\n\t\treturn this._running?.promise;\n\t}\n\n\tcancelRunning(): void {\n\t\tthis._running?.cancel();\n\t}\n\n\trun(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._running = { taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.doneRunning(taskId), () => this.doneRunning(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate doneRunning(taskId: number): void {\n\t\tif (this._running && taskId === this._running.taskId) {\n\n\t\t\t// only set running to done if the promise finished that is associated with that taskId\n\t\t\tthis._running = undefined;\n\n\t\t\t// schedule the queued task now that we are free if we have any\n\t\t\tthis.runQueued();\n\t\t}\n\t}\n\n\tprivate runQueued(): void {\n\t\tif (this._queued) {\n\t\t\tconst queued = this._queued;\n\t\t\tthis._queued = undefined;\n\n\t\t\t// Run queued task and complete on the associated promise\n\t\t\tqueued.run().then(queued.promiseResolve, queued.promiseReject);\n\t\t}\n\t}\n\n\t/**\n\t * Note: the promise to schedule as next run MUST itself call `run`.\n\t *       Otherwise, this sequentializer will report `false` for `isRunning`\n\t *       even when this task is running. Missing this detail means that\n\t *       suddenly multiple tasks will run in parallel.\n\t */\n\tqueue(run: ITask<Promise<void>>): Promise<void> {\n\n\t\t// this is our first queued task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._queued) {\n\t\t\tconst { promise, resolve: promiseResolve, reject: promiseReject } = promiseWithResolvers<void>();\n\t\t\tthis._queued = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous queued task, just overwrite it\n\t\telse {\n\t\t\tthis._queued.run = run;\n\t\t}\n\n\t\treturn this._queued.promise;\n\t}\n\n\thasQueued(): this is ITaskSequentializerWithQueuedTask {\n\t\treturn !!this._queued;\n\t}\n\n\tasync join(): Promise<void> {\n\t\treturn this._queued?.promise ?? this._running?.promise;\n\t}\n}\n\n//#endregion\n\n//#region\n\n/**\n * The `IntervalCounter` allows to count the number\n * of calls to `increment()` over a duration of\n * `interval`. This utility can be used to conditionally\n * throttle a frequent task when a certain threshold\n * is reached.\n */\nexport class IntervalCounter {\n\n\tprivate lastIncrementTime = 0;\n\n\tprivate value = 0;\n\n\tconstructor(private readonly interval: number, private readonly nowFn = () => Date.now()) { }\n\n\tincrement(): number {\n\t\tconst now = this.nowFn();\n\n\t\t// We are outside of the range of `interval` and as such\n\t\t// start counting from 0 and remember the time\n\t\tif (now - this.lastIncrementTime > this.interval) {\n\t\t\tthis.lastIncrementTime = now;\n\t\t\tthis.value = 0;\n\t\t}\n\n\t\tthis.value++;\n\n\t\treturn this.value;\n\t}\n}\n\n//#endregion\n\n//#region\n\nexport type ValueCallback<T = unknown> = (value: T | Promise<T>) => void;\n\nconst enum DeferredOutcome {\n\tResolved,\n\tRejected\n}\n\n/**\n * Creates a promise whose resolution or rejection can be controlled imperatively.\n */\nexport class DeferredPromise<T> {\n\n\tprivate completeCallback!: ValueCallback<T>;\n\tprivate errorCallback!: (err: unknown) => void;\n\tprivate outcome?: { outcome: DeferredOutcome.Rejected; value: any } | { outcome: DeferredOutcome.Resolved; value: T };\n\n\tpublic get isRejected() {\n\t\treturn this.outcome?.outcome === DeferredOutcome.Rejected;\n\t}\n\n\tpublic get isResolved() {\n\t\treturn this.outcome?.outcome === DeferredOutcome.Resolved;\n\t}\n\n\tpublic get isSettled() {\n\t\treturn !!this.outcome;\n\t}\n\n\tpublic get value() {\n\t\treturn this.outcome?.outcome === DeferredOutcome.Resolved ? this.outcome?.value : undefined;\n\t}\n\n\tpublic readonly p: Promise<T>;\n\n\tconstructor() {\n\t\tthis.p = new Promise<T>((c, e) => {\n\t\t\tthis.completeCallback = c;\n\t\t\tthis.errorCallback = e;\n\t\t});\n\t}\n\n\tpublic complete(value: T) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.completeCallback(value);\n\t\t\tthis.outcome = { outcome: DeferredOutcome.Resolved, value };\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic error(err: unknown) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.errorCallback(err);\n\t\t\tthis.outcome = { outcome: DeferredOutcome.Rejected, value: err };\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic cancel() {\n\t\treturn this.error(new CancellationError());\n\t}\n}\n\n//#endregion\n\n//#region Promises\n\nexport namespace Promises {\n\n\t/**\n\t * A drop-in replacement for `Promise.all` with the only difference\n\t * that the method awaits every promise to either fulfill or reject.\n\t *\n\t * Similar to `Promise.all`, only the first error will be returned\n\t * if any.\n\t */\n\texport async function settled<T>(promises: Promise<T>[]): Promise<T[]> {\n\t\tlet firstError: Error | undefined = undefined;\n\n\t\tconst result = await Promise.all(promises.map(promise => promise.then(value => value, error => {\n\t\t\tif (!firstError) {\n\t\t\t\tfirstError = error;\n\t\t\t}\n\n\t\t\treturn undefined; // do not rethrow so that other promises can settle\n\t\t})));\n\n\t\tif (typeof firstError !== 'undefined') {\n\t\t\tthrow firstError;\n\t\t}\n\n\t\treturn result as unknown as T[]; // cast is needed and protected by the `throw` above\n\t}\n\n\t/**\n\t * A helper to create a new `Promise<T>` with a body that is a promise\n\t * itself. By default, an error that raises from the async body will\n\t * end up as a unhandled rejection, so this utility properly awaits the\n\t * body and rejects the promise as a normal promise does without async\n\t * body.\n\t *\n\t * This method should only be used in rare cases where otherwise `async`\n\t * cannot be used (e.g. when callbacks are involved that require this).\n\t */\n\texport function withAsyncBody<T, E = Error>(bodyFn: (resolve: (value: T) => unknown, reject: (error: E) => unknown) => Promise<unknown>): Promise<T> {\n\t\t// eslint-disable-next-line no-async-promise-executor\n\t\treturn new Promise<T>(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tawait bodyFn(resolve, reject);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class StatefulPromise<T> {\n\tprivate _value: T | undefined = undefined;\n\tget value(): T | undefined { return this._value; }\n\n\tprivate _error: unknown = undefined;\n\tget error(): unknown { return this._error; }\n\n\tprivate _isResolved = false;\n\tget isResolved() { return this._isResolved; }\n\n\tpublic readonly promise: Promise<T>;\n\n\tconstructor(promise: Promise<T>) {\n\t\tthis.promise = promise.then(\n\t\t\tvalue => {\n\t\t\t\tthis._value = value;\n\t\t\t\tthis._isResolved = true;\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tthis._error = error;\n\t\t\t\tthis._isResolved = true;\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * Returns the resolved value.\n\t * Throws if the promise is not resolved yet.\n\t */\n\tpublic requireValue(): T {\n\t\tif (!this._isResolved) {\n\t\t\tthrow new BugIndicatingError('Promise is not resolved yet');\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n}\n\nexport class LazyStatefulPromise<T> {\n\tprivate readonly _promise = new Lazy(() => new StatefulPromise(this._compute()));\n\n\tconstructor(\n\t\tprivate readonly _compute: () => Promise<T>,\n\t) { }\n\n\t/**\n\t * Returns the resolved value.\n\t * Throws if the promise is not resolved yet.\n\t */\n\tpublic requireValue(): T {\n\t\treturn this._promise.value.requireValue();\n\t}\n\n\t/**\n\t * Returns the promise (and triggers a computation of the promise if not yet done so).\n\t */\n\tpublic getPromise(): Promise<T> {\n\t\treturn this._promise.value.promise;\n\t}\n\n\t/**\n\t * Reads the current value without triggering a computation of the promise.\n\t */\n\tpublic get currentValue(): T | undefined {\n\t\treturn this._promise.rawValue?.value;\n\t}\n}\n\n//#endregion\n\n//#region\n\nconst enum AsyncIterableSourceState {\n\tInitial,\n\tDoneOK,\n\tDoneError,\n}\n\n/**\n * An object that allows to emit async values asynchronously or bring the iterable to an error state using `reject()`.\n * This emitter is valid only for the duration of the executor (until the promise returned by the executor settles).\n */\nexport interface AsyncIterableEmitter<T> {\n\t/**\n\t * The value will be appended at the end.\n\t *\n\t * **NOTE** If `reject()` has already been called, this method has no effect.\n\t */\n\temitOne(value: T): void;\n\t/**\n\t * The values will be appended at the end.\n\t *\n\t * **NOTE** If `reject()` has already been called, this method has no effect.\n\t */\n\temitMany(values: T[]): void;\n\t/**\n\t * Writing an error will permanently invalidate this iterable.\n\t * The current users will receive an error thrown, as will all future users.\n\t *\n\t * **NOTE** If `reject()` have already been called, this method has no effect.\n\t */\n\treject(error: Error): void;\n}\n\n/**\n * An executor for the `AsyncIterableObject` that has access to an emitter.\n */\nexport interface AsyncIterableExecutor<T> {\n\t/**\n\t * @param emitter An object that allows to emit async values valid only for the duration of the executor.\n\t */\n\t(emitter: AsyncIterableEmitter<T>): void | Promise<void>;\n}\n\n/**\n * A rich implementation for an `AsyncIterable<T>`.\n */\nexport class AsyncIterableObject<T> implements AsyncIterable<T> {\n\n\tpublic static fromArray<T>(items: T[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>((writer) => {\n\t\t\twriter.emitMany(items);\n\t\t});\n\t}\n\n\tpublic static fromPromise<T>(promise: Promise<T[]>): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\temitter.emitMany(await promise);\n\t\t});\n\t}\n\n\tpublic static fromPromises<T>(promises: Promise<T>[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\tawait Promise.all(promises.map(async (p) => emitter.emitOne(await p)));\n\t\t});\n\t}\n\n\tpublic static merge<T>(iterables: AsyncIterable<T>[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject(async (emitter) => {\n\t\t\tawait Promise.all(iterables.map(async (iterable) => {\n\t\t\t\tfor await (const item of iterable) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\t}\n\n\tpublic static EMPTY = AsyncIterableObject.fromArray<any>([]);\n\n\tprivate _state: AsyncIterableSourceState;\n\tprivate _results: T[];\n\tprivate _error: Error | null;\n\tprivate readonly _onReturn?: () => void | Promise<void>;\n\tprivate readonly _onStateChanged: Emitter<void>;\n\n\tconstructor(executor: AsyncIterableExecutor<T>, onReturn?: () => void | Promise<void>) {\n\t\tthis._state = AsyncIterableSourceState.Initial;\n\t\tthis._results = [];\n\t\tthis._error = null;\n\t\tthis._onReturn = onReturn;\n\t\tthis._onStateChanged = new Emitter<void>();\n\n\t\tqueueMicrotask(async () => {\n\t\t\tconst writer: AsyncIterableEmitter<T> = {\n\t\t\t\temitOne: (item) => this.emitOne(item),\n\t\t\t\temitMany: (items) => this.emitMany(items),\n\t\t\t\treject: (error) => this.reject(error)\n\t\t\t};\n\t\t\ttry {\n\t\t\t\tawait Promise.resolve(executor(writer));\n\t\t\t\tthis.resolve();\n\t\t\t} catch (err) {\n\t\t\t\tthis.reject(err);\n\t\t\t} finally {\n\t\t\t\twriter.emitOne = undefined!;\n\t\t\t\twriter.emitMany = undefined!;\n\t\t\t\twriter.reject = undefined!;\n\t\t\t}\n\t\t});\n\t}\n\n\t[Symbol.asyncIterator](): AsyncIterator<T, undefined, undefined> {\n\t\tlet i = 0;\n\t\treturn {\n\t\t\tnext: async () => {\n\t\t\t\tdo {\n\t\t\t\t\tif (this._state === AsyncIterableSourceState.DoneError) {\n\t\t\t\t\t\tthrow this._error;\n\t\t\t\t\t}\n\t\t\t\t\tif (i < this._results.length) {\n\t\t\t\t\t\treturn { done: false, value: this._results[i++] };\n\t\t\t\t\t}\n\t\t\t\t\tif (this._state === AsyncIterableSourceState.DoneOK) {\n\t\t\t\t\t\treturn { done: true, value: undefined };\n\t\t\t\t\t}\n\t\t\t\t\tawait Event.toPromise(this._onStateChanged.event);\n\t\t\t\t} while (true);\n\t\t\t},\n\t\t\treturn: async () => {\n\t\t\t\tthis._onReturn?.();\n\t\t\t\treturn { done: true, value: undefined };\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic static map<T, R>(iterable: AsyncIterable<T>, mapFn: (item: T) => R): AsyncIterableObject<R> {\n\t\treturn new AsyncIterableObject<R>(async (emitter) => {\n\t\t\tfor await (const item of iterable) {\n\t\t\t\temitter.emitOne(mapFn(item));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic map<R>(mapFn: (item: T) => R): AsyncIterableObject<R> {\n\t\treturn AsyncIterableObject.map(this, mapFn);\n\t}\n\n\tpublic static filter<T>(iterable: AsyncIterable<T>, filterFn: (item: T) => boolean): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\tfor await (const item of iterable) {\n\t\t\t\tif (filterFn(item)) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic filter(filterFn: (item: T) => boolean): AsyncIterableObject<T> {\n\t\treturn AsyncIterableObject.filter(this, filterFn);\n\t}\n\n\tpublic static coalesce<T>(iterable: AsyncIterable<T | undefined | null>): AsyncIterableObject<T> {\n\t\treturn <AsyncIterableObject<T>>AsyncIterableObject.filter(iterable, item => !!item);\n\t}\n\n\tpublic coalesce(): AsyncIterableObject<NonNullable<T>> {\n\t\treturn AsyncIterableObject.coalesce(this) as AsyncIterableObject<NonNullable<T>>;\n\t}\n\n\tpublic static async toPromise<T>(iterable: AsyncIterable<T>): Promise<T[]> {\n\t\tconst result: T[] = [];\n\t\tfor await (const item of iterable) {\n\t\t\tresult.push(item);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic toPromise(): Promise<T[]> {\n\t\treturn AsyncIterableObject.toPromise(this);\n\t}\n\n\t/**\n\t * The value will be appended at the end.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate emitOne(value: T): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\t// it is important to add new values at the end,\n\t\t// as we may have iterators already running on the array\n\t\tthis._results.push(value);\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * The values will be appended at the end.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate emitMany(values: T[]): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\t// it is important to add new values at the end,\n\t\t// as we may have iterators already running on the array\n\t\tthis._results = this._results.concat(values);\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * Calling `resolve()` will mark the result array as complete.\n\t *\n\t * **NOTE** `resolve()` must be called, otherwise all consumers of this iterable will hang indefinitely, similar to a non-resolved promise.\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate resolve(): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = AsyncIterableSourceState.DoneOK;\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * Writing an error will permanently invalidate this iterable.\n\t * The current users will receive an error thrown, as will all future users.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate reject(error: Error) {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = AsyncIterableSourceState.DoneError;\n\t\tthis._error = error;\n\t\tthis._onStateChanged.fire();\n\t}\n}\n\nexport class CancelableAsyncIterableObject<T> extends AsyncIterableObject<T> {\n\tconstructor(\n\t\tprivate readonly _source: CancellationTokenSource,\n\t\texecutor: AsyncIterableExecutor<T>\n\t) {\n\t\tsuper(executor);\n\t}\n\n\tcancel(): void {\n\t\tthis._source.cancel();\n\t}\n}\n\nexport function createCancelableAsyncIterable<T>(callback: (token: CancellationToken) => AsyncIterable<T>): CancelableAsyncIterableObject<T> {\n\tconst source = new CancellationTokenSource();\n\tconst innerIterable = callback(source.token);\n\n\treturn new CancelableAsyncIterableObject<T>(source, async (emitter) => {\n\t\tconst subscription = source.token.onCancellationRequested(() => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\temitter.reject(new CancellationError());\n\t\t});\n\t\ttry {\n\t\t\tfor await (const item of innerIterable) {\n\t\t\t\tif (source.token.isCancellationRequested) {\n\t\t\t\t\t// canceled in the meantime\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\temitter.emitOne(item);\n\t\t\t}\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t} catch (err) {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\temitter.reject(err);\n\t\t}\n\t});\n}\n\nexport class AsyncIterableSource<T> {\n\n\tprivate readonly _deferred = new DeferredPromise<void>();\n\tprivate readonly _asyncIterable: AsyncIterableObject<T>;\n\n\tprivate _errorFn: (error: Error) => void;\n\tprivate _emitFn: (item: T) => void;\n\n\t/**\n\t *\n\t * @param onReturn A function that will be called when consuming the async iterable\n\t * has finished by the consumer, e.g the for-await-loop has be existed (break, return) early.\n\t * This is NOT called when resolving this source by its owner.\n\t */\n\tconstructor(onReturn?: () => Promise<void> | void) {\n\t\tthis._asyncIterable = new AsyncIterableObject(emitter => {\n\n\t\t\tif (earlyError) {\n\t\t\t\temitter.reject(earlyError);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (earlyItems) {\n\t\t\t\temitter.emitMany(earlyItems);\n\t\t\t}\n\t\t\tthis._errorFn = (error: Error) => emitter.reject(error);\n\t\t\tthis._emitFn = (item: T) => emitter.emitOne(item);\n\t\t\treturn this._deferred.p;\n\t\t}, onReturn);\n\n\t\tlet earlyError: Error | undefined;\n\t\tlet earlyItems: T[] | undefined;\n\n\t\tthis._emitFn = (item: T) => {\n\t\t\tif (!earlyItems) {\n\t\t\t\tearlyItems = [];\n\t\t\t}\n\t\t\tearlyItems.push(item);\n\t\t};\n\t\tthis._errorFn = (error: Error) => {\n\t\t\tif (!earlyError) {\n\t\t\t\tearlyError = error;\n\t\t\t}\n\t\t};\n\t}\n\n\tget asyncIterable(): AsyncIterableObject<T> {\n\t\treturn this._asyncIterable;\n\t}\n\n\tresolve(): void {\n\t\tthis._deferred.complete();\n\t}\n\n\treject(error: Error): void {\n\t\tthis._errorFn(error);\n\t\tthis._deferred.complete();\n\t}\n\n\temitOne(item: T): void {\n\t\tthis._emitFn(item);\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equals } from 'vs/base/common/arrays';\nimport { isThenable } from 'vs/base/common/async';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isEqualOrParent } from 'vs/base/common/extpath';\nimport { LRUCache } from 'vs/base/common/map';\nimport { basename, extname, posix, sep } from 'vs/base/common/path';\nimport { isLinux } from 'vs/base/common/platform';\nimport { escapeRegExpCharacters, ltrim } from 'vs/base/common/strings';\n\nexport interface IRelativePattern {\n\n\t/**\n\t * A base file path to which this pattern will be matched against relatively.\n\t */\n\treadonly base: string;\n\n\t/**\n\t * A file glob pattern like `*.{ts,js}` that will be matched on file paths\n\t * relative to the base path.\n\t *\n\t * Example: Given a base of `/home/work/folder` and a file path of `/home/work/folder/index.js`,\n\t * the file glob pattern will match on `index.js`.\n\t */\n\treadonly pattern: string;\n}\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\ninterface SiblingClause {\n\twhen: string;\n}\n\nexport const GLOBSTAR = '**';\nexport const GLOB_SPLIT = '/';\n\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number, isLastPattern?: boolean): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep) 0-many times except when it's the last pattern\n\t\t\t//           in which case also matches (Path Sep followed by Path Val)\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}${isLastPattern ? `|${PATH_REGEX}${NO_PATH_REGEX}+` : ''})*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(segment => segment === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Treat globstar specially\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (previousSegmentWasGlobStar) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tregEx += starsToRegExp(2, index === segments.length - 1);\n\t\t\t}\n\n\t\t\t// Anything else, not globstar\n\t\t\telse {\n\n\t\t\t\t// States\n\t\t\t\tlet inBraces = false;\n\t\t\t\tlet braceVal = '';\n\n\t\t\t\tlet inBrackets = false;\n\t\t\t\tlet bracketVal = '';\n\n\t\t\t\tfor (const char of segment) {\n\n\t\t\t\t\t// Support brace expansion\n\t\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\t\tbraceVal += char;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support brackets\n\t\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t\t// range operator\n\t\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\t\tres = char;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\t\tres = '^';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tres = escapeRegExpCharacters(char);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbracketVal += res;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (char) {\n\t\t\t\t\t\tcase '{':\n\t\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tcase '[':\n\t\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tcase '}': {\n\t\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(choice => parseRegExp(choice)).join('|')})`;\n\n\t\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase ']': {\n\t\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase '?':\n\t\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tcase '*':\n\t\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tregEx += escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Tail: Add the slash we had split on if there is more to\n\t\t\t\t// come and the remaining pattern is not a globstar\n\t\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after\n\t\t\t\t// some to be included in the RegEx to prevent a folder called\n\t\t\t\t// \"something\" to match as well.\n\t\t\t\tif (\n\t\t\t\t\tindex < segments.length - 1 &&\t\t\t// more segments to come after this\n\t\t\t\t\t(\n\t\t\t\t\t\tsegments[index + 1] !== GLOBSTAR ||\t// next segment is not **, or...\n\t\t\t\t\t\tindex + 2 < segments.length\t\t\t// ...next segment is ** but there is more segments after that\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tregEx += PATH_REGEX;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// update globstar state\n\t\t\tpreviousSegmentWasGlobStar = (segment === GLOBSTAR);\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trivial glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t\t\t\t\t\t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t\t\t\t\t\t// **/something\nconst T3 = /^{\\*\\*\\/\\*?[\\w\\.-]+\\/?(,\\*\\*\\/\\*?[\\w\\.-]+\\/?)*}$/; \t\t\t\t\t\t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t\t\t\t\t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t\t\t\t\t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The `ParsedExpression` returns a `Promise`\n// iff `hasSibling` returns a `Promise`.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\ninterface IGlobOptions {\n\n\t/**\n\t * Simplify patterns for use as exclusion filters during\n\t * tree traversal to skip entire subtrees. Cannot be used\n\t * outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename?: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\ninterface ParsedExpressionPattern {\n\t(path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle relative patterns\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivials\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) {\n\t\tparsedPattern = trivia1(pattern.substr(4), pattern); \t\t\t// common pattern: **/*.txt just need endsWith check\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { \t// common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { \t// common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { \t// common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\tconst wrappedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (!isEqualOrParent(path, arg2.base, !isLinux)) {\n\t\t\t// skip glob matching if `base` is not a parent of `path`\n\t\t\treturn null;\n\t\t}\n\n\t\t// Given we have checked `base` being a parent of `path`,\n\t\t// we can now remove the `base` portion of the `path`\n\t\t// and only match on the remaining path components\n\t\t// For that we try to extract the portion of the `path`\n\t\t// that comes after the `base` portion. We have to account\n\t\t// for the fact that `base` might end in a path separator\n\t\t// (https://github.com/microsoft/vscode/issues/162498)\n\n\t\treturn parsedPattern(ltrim(path.substr(arg2.base.length), sep), basename);\n\t};\n\n\t// Make sure to preserve associated metadata\n\twrappedPattern.allBasenames = parsedPattern.allBasenames;\n\twrappedPattern.allPaths = parsedPattern.allPaths;\n\twrappedPattern.basenames = parsedPattern.basenames;\n\twrappedPattern.patterns = parsedPattern.patterns;\n\n\treturn wrappedPattern;\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/*.txt just need endsWith check\nfunction trivia1(base: string, pattern: string): ParsedStringPattern {\n\treturn function (path: string, basename?: string) {\n\t\treturn typeof path === 'string' && path.endsWith(base) ? pattern : null;\n\t};\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, pattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (basename) {\n\t\t\treturn basename === base ? pattern : null;\n\t\t}\n\n\t\treturn path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? pattern : null;\n\t};\n\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [pattern];\n\tparsedPattern.allBasenames = basenames;\n\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1)\n\t\t.split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\n\tconst patternsLength = parsedPatterns.length;\n\tif (!patternsLength) {\n\t\treturn NULL;\n\t}\n\n\tif (patternsLength === 1) {\n\t\treturn parsedPatterns[0];\n\t}\n\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif (parsedPatterns[i](path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = withBasenames.allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, [] as string[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(targetPath: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst usingPosixSep = sep === posix.sep;\n\tconst nativePath = usingPosixSep ? targetPath : targetPath.replace(ALL_FORWARD_SLASHES, sep);\n\tconst nativePathEnd = sep + nativePath;\n\tconst targetPathEnd = posix.sep + targetPath;\n\n\tlet parsedPattern: ParsedStringPattern;\n\tif (matchPathEnds) {\n\t\tparsedPattern = function (path: string, basename?: string) {\n\t\t\treturn typeof path === 'string' && ((path === nativePath || path.endsWith(nativePathEnd)) || !usingPosixSep && (path === targetPath || path.endsWith(targetPathEnd))) ? pattern : null;\n\t\t};\n\t} else {\n\t\tparsedPattern = function (path: string, basename?: string) {\n\t\t\treturn typeof path === 'string' && (path === nativePath || (!usingPosixSep && path === targetPath)) ? pattern : null;\n\t\t};\n\t}\n\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + targetPath];\n\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * * `*` to match zero or more characters in a path segment\n * * `?` to match on one character in a path segment\n * * `**` to match any number of path segments, including none\n * * `{}` to group conditions (e.g. *.{ts,js} matches all TypeScript and JavaScript files)\n * * `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to match on `example.0`, `example.1`, …)\n * * `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]` to match on `example.a`, `example.b`, but not `example.0`)\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): boolean | string | null | Promise<string | null> {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * * `*` to match zero or more characters in a path segment\n * * `?` to match on one character in a path segment\n * * `**` to match any number of path segments, including none\n * * `{}` to group conditions (e.g. *.{ts,js} matches all TypeScript and JavaScript files)\n * * `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to match on `example.0`, `example.1`, …)\n * * `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]` to match on `example.a`, `example.b`, but not `example.0`)\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options?: IGlobOptions): ParsedPattern | ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): ParsedPattern | ParsedExpression {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\n\t\tconst resultPattern: ParsedPattern & { allBasenames?: string[]; allPaths?: string[] } = function (path: string, basename?: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\n\t\tif (parsedPattern.allBasenames) {\n\t\t\tresultPattern.allBasenames = parsedPattern.allBasenames;\n\t\t}\n\n\t\tif (parsedPattern.allPaths) {\n\t\t\tresultPattern.allPaths = parsedPattern.allPaths;\n\t\t}\n\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern | undefined | null;\n\tif (!rp) {\n\t\treturn false;\n\t}\n\n\treturn typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst patternsLength = parsedPatterns.length;\n\tif (!patternsLength) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (patternsLength === 1) {\n\t\t\treturn parsedPatterns[0] as ParsedStringPattern;\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string) {\n\t\t\tlet resultPromises: Promise<string | null>[] | undefined = undefined;\n\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\tconst result = parsedPatterns[i](path, basename);\n\t\t\t\tif (typeof result === 'string') {\n\t\t\t\t\treturn result; // immediately return as soon as the first expression matches\n\t\t\t\t}\n\n\t\t\t\t// If the result is a promise, we have to keep it for\n\t\t\t\t// later processing and await the result properly.\n\t\t\t\tif (isThenable(result)) {\n\t\t\t\t\tif (!resultPromises) {\n\t\t\t\t\t\tresultPromises = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tresultPromises.push(result);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// With result promises, we have to loop over each and\n\t\t\t// await the result before we can return any result.\n\t\t\tif (resultPromises) {\n\t\t\t\treturn (async () => {\n\t\t\t\t\tfor (const resultPromise of resultPromises) {\n\t\t\t\t\t\tconst result = await resultPromise;\n\t\t\t\t\t\tif (typeof result === 'string') {\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\t\t\t\t})();\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = withBasenames.allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, [] as string[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, base?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\t\tlet resultPromises: Promise<string | null>[] | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!base) {\n\t\t\t\t\tbase = basename(path);\n\t\t\t\t}\n\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = base.substr(0, base.length - extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst result = parsedPattern(path, base, name, hasSibling);\n\t\t\tif (typeof result === 'string') {\n\t\t\t\treturn result; // immediately return as soon as the first expression matches\n\t\t\t}\n\n\t\t\t// If the result is a promise, we have to keep it for\n\t\t\t// later processing and await the result properly.\n\t\t\tif (isThenable(result)) {\n\t\t\t\tif (!resultPromises) {\n\t\t\t\t\tresultPromises = [];\n\t\t\t\t}\n\n\t\t\t\tresultPromises.push(result);\n\t\t\t}\n\t\t}\n\n\t\t// With result promises, we have to loop over each and\n\t\t// await the result before we can return any result.\n\t\tif (resultPromises) {\n\t\t\treturn (async () => {\n\t\t\t\tfor (const resultPromise of resultPromises) {\n\t\t\t\t\tconst result = await resultPromise;\n\t\t\t\t\tif (typeof result === 'string') {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t})();\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = withBasenames.allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, [] as string[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: boolean | SiblingClause, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = value.when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', () => name!);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(match => match ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\n\t\t\tresult.requiresSiblings = true;\n\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, [] as string[]);\n\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, [] as string[]);\n\t}\n\n\tconst aggregate: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbasename = path.substr(i);\n\t\t}\n\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\n\treturn aggregatedPatterns;\n}\n\nexport function patternsEquals(patternsA: Array<string | IRelativePattern> | undefined, patternsB: Array<string | IRelativePattern> | undefined): boolean {\n\treturn equals(patternsA, patternsB, (a, b) => {\n\t\tif (typeof a === 'string' && typeof b === 'string') {\n\t\t\treturn a === b;\n\t\t}\n\n\t\tif (typeof a !== 'string' && typeof b !== 'string') {\n\t\t\treturn a.base === b.base && a.pattern === b.pattern;\n\t\t}\n\n\t\treturn false;\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\n\nexport const enum StringEOL {\n\tUnknown = 0,\n\tInvalid = 3,\n\tLF = 1,\n\tCRLF = 2\n}\n\nexport function countEOL(text: string): [number, number, number, StringEOL] {\n\tlet eolCount = 0;\n\tlet firstLineLength = 0;\n\tlet lastLineStart = 0;\n\tlet eol: StringEOL = StringEOL.Unknown;\n\tfor (let i = 0, len = text.length; i < len; i++) {\n\t\tconst chr = text.charCodeAt(i);\n\n\t\tif (chr === CharCode.CarriageReturn) {\n\t\t\tif (eolCount === 0) {\n\t\t\t\tfirstLineLength = i;\n\t\t\t}\n\t\t\teolCount++;\n\t\t\tif (i + 1 < len && text.charCodeAt(i + 1) === CharCode.LineFeed) {\n\t\t\t\t// \\r\\n... case\n\t\t\t\teol |= StringEOL.CRLF;\n\t\t\t\ti++; // skip \\n\n\t\t\t} else {\n\t\t\t\t// \\r... case\n\t\t\t\teol |= StringEOL.Invalid;\n\t\t\t}\n\t\t\tlastLineStart = i + 1;\n\t\t} else if (chr === CharCode.LineFeed) {\n\t\t\t// \\n... case\n\t\t\teol |= StringEOL.LF;\n\t\t\tif (eolCount === 0) {\n\t\t\t\tfirstLineLength = i;\n\t\t\t}\n\t\t\teolCount++;\n\t\t\tlastLineStart = i + 1;\n\t\t}\n\t}\n\tif (eolCount === 0) {\n\t\tfirstLineLength = text.length;\n\t}\n\treturn [eolCount, firstLineLength, text.length - lastLineStart, eol];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as platform from 'vs/base/common/platform';\nimport * as buffer from 'vs/base/common/buffer';\n\nlet _utf16LE_TextDecoder: TextDecoder | null;\nfunction getUTF16LE_TextDecoder(): TextDecoder {\n\tif (!_utf16LE_TextDecoder) {\n\t\t_utf16LE_TextDecoder = new TextDecoder('UTF-16LE');\n\t}\n\treturn _utf16LE_TextDecoder;\n}\n\nlet _utf16BE_TextDecoder: TextDecoder | null;\nfunction getUTF16BE_TextDecoder(): TextDecoder {\n\tif (!_utf16BE_TextDecoder) {\n\t\t_utf16BE_TextDecoder = new TextDecoder('UTF-16BE');\n\t}\n\treturn _utf16BE_TextDecoder;\n}\n\nlet _platformTextDecoder: TextDecoder | null;\nexport function getPlatformTextDecoder(): TextDecoder {\n\tif (!_platformTextDecoder) {\n\t\t_platformTextDecoder = platform.isLittleEndian() ? getUTF16LE_TextDecoder() : getUTF16BE_TextDecoder();\n\t}\n\treturn _platformTextDecoder;\n}\n\nexport function decodeUTF16LE(source: Uint8Array, offset: number, len: number): string {\n\tconst view = new Uint16Array(source.buffer, offset, len);\n\tif (len > 0 && (view[0] === 0xFEFF || view[0] === 0xFFFE)) {\n\t\t// UTF16 sometimes starts with a BOM https://de.wikipedia.org/wiki/Byte_Order_Mark\n\t\t// It looks like TextDecoder.decode will eat up a leading BOM (0xFEFF or 0xFFFE)\n\t\t// We don't want that behavior because we know the string is UTF16LE and the BOM should be maintained\n\t\t// So we use the manual decoder\n\t\treturn compatDecodeUTF16LE(source, offset, len);\n\t}\n\treturn getUTF16LE_TextDecoder().decode(view);\n}\n\nfunction compatDecodeUTF16LE(source: Uint8Array, offset: number, len: number): string {\n\tconst result: string[] = [];\n\tlet resultLen = 0;\n\tfor (let i = 0; i < len; i++) {\n\t\tconst charCode = buffer.readUInt16LE(source, offset); offset += 2;\n\t\tresult[resultLen++] = String.fromCharCode(charCode);\n\t}\n\treturn result.join('');\n}\n\nexport class StringBuilder {\n\n\tprivate readonly _capacity: number;\n\tprivate readonly _buffer: Uint16Array;\n\n\tprivate _completedStrings: string[] | null;\n\tprivate _bufferLength: number;\n\n\tconstructor(capacity: number) {\n\t\tthis._capacity = capacity | 0;\n\t\tthis._buffer = new Uint16Array(this._capacity);\n\n\t\tthis._completedStrings = null;\n\t\tthis._bufferLength = 0;\n\t}\n\n\tpublic reset(): void {\n\t\tthis._completedStrings = null;\n\t\tthis._bufferLength = 0;\n\t}\n\n\tpublic build(): string {\n\t\tif (this._completedStrings !== null) {\n\t\t\tthis._flushBuffer();\n\t\t\treturn this._completedStrings.join('');\n\t\t}\n\t\treturn this._buildBuffer();\n\t}\n\n\tprivate _buildBuffer(): string {\n\t\tif (this._bufferLength === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst view = new Uint16Array(this._buffer.buffer, 0, this._bufferLength);\n\t\treturn getPlatformTextDecoder().decode(view);\n\t}\n\n\tprivate _flushBuffer(): void {\n\t\tconst bufferString = this._buildBuffer();\n\t\tthis._bufferLength = 0;\n\n\t\tif (this._completedStrings === null) {\n\t\t\tthis._completedStrings = [bufferString];\n\t\t} else {\n\t\t\tthis._completedStrings[this._completedStrings.length] = bufferString;\n\t\t}\n\t}\n\n\t/**\n\t * Append a char code (<2^16)\n\t */\n\tpublic appendCharCode(charCode: number): void {\n\t\tconst remainingSpace = this._capacity - this._bufferLength;\n\n\t\tif (remainingSpace <= 1) {\n\t\t\tif (remainingSpace === 0 || strings.isHighSurrogate(charCode)) {\n\t\t\t\tthis._flushBuffer();\n\t\t\t}\n\t\t}\n\n\t\tthis._buffer[this._bufferLength++] = charCode;\n\t}\n\n\t/**\n\t * Append an ASCII char code (<2^8)\n\t */\n\tpublic appendASCIICharCode(charCode: number): void {\n\t\tif (this._bufferLength === this._capacity) {\n\t\t\t// buffer is full\n\t\t\tthis._flushBuffer();\n\t\t}\n\t\tthis._buffer[this._bufferLength++] = charCode;\n\t}\n\n\tpublic appendString(str: string): void {\n\t\tconst strLen = str.length;\n\n\t\tif (this._bufferLength + strLen >= this._capacity) {\n\t\t\t// This string does not fit in the remaining buffer space\n\n\t\t\tthis._flushBuffer();\n\t\t\tthis._completedStrings![this._completedStrings!.length] = str;\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let i = 0; i < strLen; i++) {\n\t\t\tthis._buffer[this._bufferLength++] = str.charCodeAt(i);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as buffer from 'vs/base/common/buffer';\nimport { decodeUTF16LE } from 'vs/editor/common/core/stringBuilder';\n\nfunction escapeNewLine(str: string): string {\n\treturn (\n\t\tstr\n\t\t\t.replace(/\\n/g, '\\\\n')\n\t\t\t.replace(/\\r/g, '\\\\r')\n\t);\n}\n\nexport class TextChange {\n\n\tpublic get oldLength(): number {\n\t\treturn this.oldText.length;\n\t}\n\n\tpublic get oldEnd(): number {\n\t\treturn this.oldPosition + this.oldText.length;\n\t}\n\n\tpublic get newLength(): number {\n\t\treturn this.newText.length;\n\t}\n\n\tpublic get newEnd(): number {\n\t\treturn this.newPosition + this.newText.length;\n\t}\n\n\tconstructor(\n\t\tpublic readonly oldPosition: number,\n\t\tpublic readonly oldText: string,\n\t\tpublic readonly newPosition: number,\n\t\tpublic readonly newText: string\n\t) { }\n\n\tpublic toString(): string {\n\t\tif (this.oldText.length === 0) {\n\t\t\treturn `(insert@${this.oldPosition} \"${escapeNewLine(this.newText)}\")`;\n\t\t}\n\t\tif (this.newText.length === 0) {\n\t\t\treturn `(delete@${this.oldPosition} \"${escapeNewLine(this.oldText)}\")`;\n\t\t}\n\t\treturn `(replace@${this.oldPosition} \"${escapeNewLine(this.oldText)}\" with \"${escapeNewLine(this.newText)}\")`;\n\t}\n\n\tprivate static _writeStringSize(str: string): number {\n\t\treturn (\n\t\t\t4 + 2 * str.length\n\t\t);\n\t}\n\n\tprivate static _writeString(b: Uint8Array, str: string, offset: number): number {\n\t\tconst len = str.length;\n\t\tbuffer.writeUInt32BE(b, len, offset); offset += 4;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tbuffer.writeUInt16LE(b, str.charCodeAt(i), offset); offset += 2;\n\t\t}\n\t\treturn offset;\n\t}\n\n\tprivate static _readString(b: Uint8Array, offset: number): string {\n\t\tconst len = buffer.readUInt32BE(b, offset); offset += 4;\n\t\treturn decodeUTF16LE(b, offset, len);\n\t}\n\n\tpublic writeSize(): number {\n\t\treturn (\n\t\t\t+ 4 // oldPosition\n\t\t\t+ 4 // newPosition\n\t\t\t+ TextChange._writeStringSize(this.oldText)\n\t\t\t+ TextChange._writeStringSize(this.newText)\n\t\t);\n\t}\n\n\tpublic write(b: Uint8Array, offset: number): number {\n\t\tbuffer.writeUInt32BE(b, this.oldPosition, offset); offset += 4;\n\t\tbuffer.writeUInt32BE(b, this.newPosition, offset); offset += 4;\n\t\toffset = TextChange._writeString(b, this.oldText, offset);\n\t\toffset = TextChange._writeString(b, this.newText, offset);\n\t\treturn offset;\n\t}\n\n\tpublic static read(b: Uint8Array, offset: number, dest: TextChange[]): number {\n\t\tconst oldPosition = buffer.readUInt32BE(b, offset); offset += 4;\n\t\tconst newPosition = buffer.readUInt32BE(b, offset); offset += 4;\n\t\tconst oldText = TextChange._readString(b, offset); offset += TextChange._writeStringSize(oldText);\n\t\tconst newText = TextChange._readString(b, offset); offset += TextChange._writeStringSize(newText);\n\t\tdest.push(new TextChange(oldPosition, oldText, newPosition, newText));\n\t\treturn offset;\n\t}\n}\n\nexport function compressConsecutiveTextChanges(prevEdits: TextChange[] | null, currEdits: TextChange[]): TextChange[] {\n\tif (prevEdits === null || prevEdits.length === 0) {\n\t\treturn currEdits;\n\t}\n\tconst compressor = new TextChangeCompressor(prevEdits, currEdits);\n\treturn compressor.compress();\n}\n\nclass TextChangeCompressor {\n\n\tprivate _prevEdits: TextChange[];\n\tprivate _currEdits: TextChange[];\n\n\tprivate _result: TextChange[];\n\tprivate _resultLen: number;\n\n\tprivate _prevLen: number;\n\tprivate _prevDeltaOffset: number;\n\n\tprivate _currLen: number;\n\tprivate _currDeltaOffset: number;\n\n\tconstructor(prevEdits: TextChange[], currEdits: TextChange[]) {\n\t\tthis._prevEdits = prevEdits;\n\t\tthis._currEdits = currEdits;\n\n\t\tthis._result = [];\n\t\tthis._resultLen = 0;\n\n\t\tthis._prevLen = this._prevEdits.length;\n\t\tthis._prevDeltaOffset = 0;\n\n\t\tthis._currLen = this._currEdits.length;\n\t\tthis._currDeltaOffset = 0;\n\t}\n\n\tpublic compress(): TextChange[] {\n\t\tlet prevIndex = 0;\n\t\tlet currIndex = 0;\n\n\t\tlet prevEdit = this._getPrev(prevIndex);\n\t\tlet currEdit = this._getCurr(currIndex);\n\n\t\twhile (prevIndex < this._prevLen || currIndex < this._currLen) {\n\n\t\t\tif (prevEdit === null) {\n\t\t\t\tthis._acceptCurr(currEdit!);\n\t\t\t\tcurrEdit = this._getCurr(++currIndex);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (currEdit === null) {\n\t\t\t\tthis._acceptPrev(prevEdit);\n\t\t\t\tprevEdit = this._getPrev(++prevIndex);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (currEdit.oldEnd <= prevEdit.newPosition) {\n\t\t\t\tthis._acceptCurr(currEdit);\n\t\t\t\tcurrEdit = this._getCurr(++currIndex);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (prevEdit.newEnd <= currEdit.oldPosition) {\n\t\t\t\tthis._acceptPrev(prevEdit);\n\t\t\t\tprevEdit = this._getPrev(++prevIndex);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (currEdit.oldPosition < prevEdit.newPosition) {\n\t\t\t\tconst [e1, e2] = TextChangeCompressor._splitCurr(currEdit, prevEdit.newPosition - currEdit.oldPosition);\n\t\t\t\tthis._acceptCurr(e1);\n\t\t\t\tcurrEdit = e2;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (prevEdit.newPosition < currEdit.oldPosition) {\n\t\t\t\tconst [e1, e2] = TextChangeCompressor._splitPrev(prevEdit, currEdit.oldPosition - prevEdit.newPosition);\n\t\t\t\tthis._acceptPrev(e1);\n\t\t\t\tprevEdit = e2;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// At this point, currEdit.oldPosition === prevEdit.newPosition\n\n\t\t\tlet mergePrev: TextChange;\n\t\t\tlet mergeCurr: TextChange;\n\n\t\t\tif (currEdit.oldEnd === prevEdit.newEnd) {\n\t\t\t\tmergePrev = prevEdit;\n\t\t\t\tmergeCurr = currEdit;\n\t\t\t\tprevEdit = this._getPrev(++prevIndex);\n\t\t\t\tcurrEdit = this._getCurr(++currIndex);\n\t\t\t} else if (currEdit.oldEnd < prevEdit.newEnd) {\n\t\t\t\tconst [e1, e2] = TextChangeCompressor._splitPrev(prevEdit, currEdit.oldLength);\n\t\t\t\tmergePrev = e1;\n\t\t\t\tmergeCurr = currEdit;\n\t\t\t\tprevEdit = e2;\n\t\t\t\tcurrEdit = this._getCurr(++currIndex);\n\t\t\t} else {\n\t\t\t\tconst [e1, e2] = TextChangeCompressor._splitCurr(currEdit, prevEdit.newLength);\n\t\t\t\tmergePrev = prevEdit;\n\t\t\t\tmergeCurr = e1;\n\t\t\t\tprevEdit = this._getPrev(++prevIndex);\n\t\t\t\tcurrEdit = e2;\n\t\t\t}\n\n\t\t\tthis._result[this._resultLen++] = new TextChange(\n\t\t\t\tmergePrev.oldPosition,\n\t\t\t\tmergePrev.oldText,\n\t\t\t\tmergeCurr.newPosition,\n\t\t\t\tmergeCurr.newText\n\t\t\t);\n\t\t\tthis._prevDeltaOffset += mergePrev.newLength - mergePrev.oldLength;\n\t\t\tthis._currDeltaOffset += mergeCurr.newLength - mergeCurr.oldLength;\n\t\t}\n\n\t\tconst merged = TextChangeCompressor._merge(this._result);\n\t\tconst cleaned = TextChangeCompressor._removeNoOps(merged);\n\t\treturn cleaned;\n\t}\n\n\tprivate _acceptCurr(currEdit: TextChange): void {\n\t\tthis._result[this._resultLen++] = TextChangeCompressor._rebaseCurr(this._prevDeltaOffset, currEdit);\n\t\tthis._currDeltaOffset += currEdit.newLength - currEdit.oldLength;\n\t}\n\n\tprivate _getCurr(currIndex: number): TextChange | null {\n\t\treturn (currIndex < this._currLen ? this._currEdits[currIndex] : null);\n\t}\n\n\tprivate _acceptPrev(prevEdit: TextChange): void {\n\t\tthis._result[this._resultLen++] = TextChangeCompressor._rebasePrev(this._currDeltaOffset, prevEdit);\n\t\tthis._prevDeltaOffset += prevEdit.newLength - prevEdit.oldLength;\n\t}\n\n\tprivate _getPrev(prevIndex: number): TextChange | null {\n\t\treturn (prevIndex < this._prevLen ? this._prevEdits[prevIndex] : null);\n\t}\n\n\tprivate static _rebaseCurr(prevDeltaOffset: number, currEdit: TextChange): TextChange {\n\t\treturn new TextChange(\n\t\t\tcurrEdit.oldPosition - prevDeltaOffset,\n\t\t\tcurrEdit.oldText,\n\t\t\tcurrEdit.newPosition,\n\t\t\tcurrEdit.newText\n\t\t);\n\t}\n\n\tprivate static _rebasePrev(currDeltaOffset: number, prevEdit: TextChange): TextChange {\n\t\treturn new TextChange(\n\t\t\tprevEdit.oldPosition,\n\t\t\tprevEdit.oldText,\n\t\t\tprevEdit.newPosition + currDeltaOffset,\n\t\t\tprevEdit.newText\n\t\t);\n\t}\n\n\tprivate static _splitPrev(edit: TextChange, offset: number): [TextChange, TextChange] {\n\t\tconst preText = edit.newText.substr(0, offset);\n\t\tconst postText = edit.newText.substr(offset);\n\n\t\treturn [\n\t\t\tnew TextChange(\n\t\t\t\tedit.oldPosition,\n\t\t\t\tedit.oldText,\n\t\t\t\tedit.newPosition,\n\t\t\t\tpreText\n\t\t\t),\n\t\t\tnew TextChange(\n\t\t\t\tedit.oldEnd,\n\t\t\t\t'',\n\t\t\t\tedit.newPosition + offset,\n\t\t\t\tpostText\n\t\t\t)\n\t\t];\n\t}\n\n\tprivate static _splitCurr(edit: TextChange, offset: number): [TextChange, TextChange] {\n\t\tconst preText = edit.oldText.substr(0, offset);\n\t\tconst postText = edit.oldText.substr(offset);\n\n\t\treturn [\n\t\t\tnew TextChange(\n\t\t\t\tedit.oldPosition,\n\t\t\t\tpreText,\n\t\t\t\tedit.newPosition,\n\t\t\t\tedit.newText\n\t\t\t),\n\t\t\tnew TextChange(\n\t\t\t\tedit.oldPosition + offset,\n\t\t\t\tpostText,\n\t\t\t\tedit.newEnd,\n\t\t\t\t''\n\t\t\t)\n\t\t];\n\t}\n\n\tprivate static _merge(edits: TextChange[]): TextChange[] {\n\t\tif (edits.length === 0) {\n\t\t\treturn edits;\n\t\t}\n\n\t\tconst result: TextChange[] = [];\n\t\tlet resultLen = 0;\n\n\t\tlet prev = edits[0];\n\t\tfor (let i = 1; i < edits.length; i++) {\n\t\t\tconst curr = edits[i];\n\n\t\t\tif (prev.oldEnd === curr.oldPosition) {\n\t\t\t\t// Merge into `prev`\n\t\t\t\tprev = new TextChange(\n\t\t\t\t\tprev.oldPosition,\n\t\t\t\t\tprev.oldText + curr.oldText,\n\t\t\t\t\tprev.newPosition,\n\t\t\t\t\tprev.newText + curr.newText\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresult[resultLen++] = prev;\n\t\t\t\tprev = curr;\n\t\t\t}\n\t\t}\n\t\tresult[resultLen++] = prev;\n\n\t\treturn result;\n\t}\n\n\tprivate static _removeNoOps(edits: TextChange[]): TextChange[] {\n\t\tif (edits.length === 0) {\n\t\t\treturn edits;\n\t\t}\n\n\t\tconst result: TextChange[] = [];\n\t\tlet resultLen = 0;\n\n\t\tfor (let i = 0; i < edits.length; i++) {\n\t\t\tconst edit = edits[i];\n\n\t\t\tif (edit.oldText === edit.newText) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tresult[resultLen++] = edit;\n\t\t}\n\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Piece, PieceTreeBase } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeBase';\n\nexport class TreeNode {\n\tparent: TreeNode;\n\tleft: TreeNode;\n\tright: TreeNode;\n\tcolor: NodeColor;\n\n\t// Piece\n\tpiece: Piece;\n\tsize_left: number; // size of the left subtree (not inorder)\n\tlf_left: number; // line feeds cnt in the left subtree (not in order)\n\n\tconstructor(piece: Piece, color: NodeColor) {\n\t\tthis.piece = piece;\n\t\tthis.color = color;\n\t\tthis.size_left = 0;\n\t\tthis.lf_left = 0;\n\t\tthis.parent = this;\n\t\tthis.left = this;\n\t\tthis.right = this;\n\t}\n\n\tpublic next(): TreeNode {\n\t\tif (this.right !== SENTINEL) {\n\t\t\treturn leftest(this.right);\n\t\t}\n\n\t\tlet node: TreeNode = this;\n\n\t\twhile (node.parent !== SENTINEL) {\n\t\t\tif (node.parent.left === node) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\tif (node.parent === SENTINEL) {\n\t\t\treturn SENTINEL;\n\t\t} else {\n\t\t\treturn node.parent;\n\t\t}\n\t}\n\n\tpublic prev(): TreeNode {\n\t\tif (this.left !== SENTINEL) {\n\t\t\treturn righttest(this.left);\n\t\t}\n\n\t\tlet node: TreeNode = this;\n\n\t\twhile (node.parent !== SENTINEL) {\n\t\t\tif (node.parent.right === node) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\tif (node.parent === SENTINEL) {\n\t\t\treturn SENTINEL;\n\t\t} else {\n\t\t\treturn node.parent;\n\t\t}\n\t}\n\n\tpublic detach(): void {\n\t\tthis.parent = null!;\n\t\tthis.left = null!;\n\t\tthis.right = null!;\n\t}\n}\n\nexport const enum NodeColor {\n\tBlack = 0,\n\tRed = 1,\n}\n\nexport const SENTINEL: TreeNode = new TreeNode(null!, NodeColor.Black);\nSENTINEL.parent = SENTINEL;\nSENTINEL.left = SENTINEL;\nSENTINEL.right = SENTINEL;\nSENTINEL.color = NodeColor.Black;\n\nexport function leftest(node: TreeNode): TreeNode {\n\twhile (node.left !== SENTINEL) {\n\t\tnode = node.left;\n\t}\n\treturn node;\n}\n\nexport function righttest(node: TreeNode): TreeNode {\n\twhile (node.right !== SENTINEL) {\n\t\tnode = node.right;\n\t}\n\treturn node;\n}\n\nfunction calculateSize(node: TreeNode): number {\n\tif (node === SENTINEL) {\n\t\treturn 0;\n\t}\n\n\treturn node.size_left + node.piece.length + calculateSize(node.right);\n}\n\nfunction calculateLF(node: TreeNode): number {\n\tif (node === SENTINEL) {\n\t\treturn 0;\n\t}\n\n\treturn node.lf_left + node.piece.lineFeedCnt + calculateLF(node.right);\n}\n\nfunction resetSentinel(): void {\n\tSENTINEL.parent = SENTINEL;\n}\n\nexport function leftRotate(tree: PieceTreeBase, x: TreeNode) {\n\tconst y = x.right;\n\n\t// fix size_left\n\ty.size_left += x.size_left + (x.piece ? x.piece.length : 0);\n\ty.lf_left += x.lf_left + (x.piece ? x.piece.lineFeedCnt : 0);\n\tx.right = y.left;\n\n\tif (y.left !== SENTINEL) {\n\t\ty.left.parent = x;\n\t}\n\ty.parent = x.parent;\n\tif (x.parent === SENTINEL) {\n\t\ttree.root = y;\n\t} else if (x.parent.left === x) {\n\t\tx.parent.left = y;\n\t} else {\n\t\tx.parent.right = y;\n\t}\n\ty.left = x;\n\tx.parent = y;\n}\n\nexport function rightRotate(tree: PieceTreeBase, y: TreeNode) {\n\tconst x = y.left;\n\ty.left = x.right;\n\tif (x.right !== SENTINEL) {\n\t\tx.right.parent = y;\n\t}\n\tx.parent = y.parent;\n\n\t// fix size_left\n\ty.size_left -= x.size_left + (x.piece ? x.piece.length : 0);\n\ty.lf_left -= x.lf_left + (x.piece ? x.piece.lineFeedCnt : 0);\n\n\tif (y.parent === SENTINEL) {\n\t\ttree.root = x;\n\t} else if (y === y.parent.right) {\n\t\ty.parent.right = x;\n\t} else {\n\t\ty.parent.left = x;\n\t}\n\n\tx.right = y;\n\ty.parent = x;\n}\n\nexport function rbDelete(tree: PieceTreeBase, z: TreeNode) {\n\tlet x: TreeNode;\n\tlet y: TreeNode;\n\n\tif (z.left === SENTINEL) {\n\t\ty = z;\n\t\tx = y.right;\n\t} else if (z.right === SENTINEL) {\n\t\ty = z;\n\t\tx = y.left;\n\t} else {\n\t\ty = leftest(z.right);\n\t\tx = y.right;\n\t}\n\n\tif (y === tree.root) {\n\t\ttree.root = x;\n\n\t\t// if x is null, we are removing the only node\n\t\tx.color = NodeColor.Black;\n\t\tz.detach();\n\t\tresetSentinel();\n\t\ttree.root.parent = SENTINEL;\n\n\t\treturn;\n\t}\n\n\tconst yWasRed = (y.color === NodeColor.Red);\n\n\tif (y === y.parent.left) {\n\t\ty.parent.left = x;\n\t} else {\n\t\ty.parent.right = x;\n\t}\n\n\tif (y === z) {\n\t\tx.parent = y.parent;\n\t\trecomputeTreeMetadata(tree, x);\n\t} else {\n\t\tif (y.parent === z) {\n\t\t\tx.parent = y;\n\t\t} else {\n\t\t\tx.parent = y.parent;\n\t\t}\n\n\t\t// as we make changes to x's hierarchy, update size_left of subtree first\n\t\trecomputeTreeMetadata(tree, x);\n\n\t\ty.left = z.left;\n\t\ty.right = z.right;\n\t\ty.parent = z.parent;\n\t\ty.color = z.color;\n\n\t\tif (z === tree.root) {\n\t\t\ttree.root = y;\n\t\t} else {\n\t\t\tif (z === z.parent.left) {\n\t\t\t\tz.parent.left = y;\n\t\t\t} else {\n\t\t\t\tz.parent.right = y;\n\t\t\t}\n\t\t}\n\n\t\tif (y.left !== SENTINEL) {\n\t\t\ty.left.parent = y;\n\t\t}\n\t\tif (y.right !== SENTINEL) {\n\t\t\ty.right.parent = y;\n\t\t}\n\t\t// update metadata\n\t\t// we replace z with y, so in this sub tree, the length change is z.item.length\n\t\ty.size_left = z.size_left;\n\t\ty.lf_left = z.lf_left;\n\t\trecomputeTreeMetadata(tree, y);\n\t}\n\n\tz.detach();\n\n\tif (x.parent.left === x) {\n\t\tconst newSizeLeft = calculateSize(x);\n\t\tconst newLFLeft = calculateLF(x);\n\t\tif (newSizeLeft !== x.parent.size_left || newLFLeft !== x.parent.lf_left) {\n\t\t\tconst delta = newSizeLeft - x.parent.size_left;\n\t\t\tconst lf_delta = newLFLeft - x.parent.lf_left;\n\t\t\tx.parent.size_left = newSizeLeft;\n\t\t\tx.parent.lf_left = newLFLeft;\n\t\t\tupdateTreeMetadata(tree, x.parent, delta, lf_delta);\n\t\t}\n\t}\n\n\trecomputeTreeMetadata(tree, x.parent);\n\n\tif (yWasRed) {\n\t\tresetSentinel();\n\t\treturn;\n\t}\n\n\t// RB-DELETE-FIXUP\n\tlet w: TreeNode;\n\twhile (x !== tree.root && x.color === NodeColor.Black) {\n\t\tif (x === x.parent.left) {\n\t\t\tw = x.parent.right;\n\n\t\t\tif (w.color === NodeColor.Red) {\n\t\t\t\tw.color = NodeColor.Black;\n\t\t\t\tx.parent.color = NodeColor.Red;\n\t\t\t\tleftRotate(tree, x.parent);\n\t\t\t\tw = x.parent.right;\n\t\t\t}\n\n\t\t\tif (w.left.color === NodeColor.Black && w.right.color === NodeColor.Black) {\n\t\t\t\tw.color = NodeColor.Red;\n\t\t\t\tx = x.parent;\n\t\t\t} else {\n\t\t\t\tif (w.right.color === NodeColor.Black) {\n\t\t\t\t\tw.left.color = NodeColor.Black;\n\t\t\t\t\tw.color = NodeColor.Red;\n\t\t\t\t\trightRotate(tree, w);\n\t\t\t\t\tw = x.parent.right;\n\t\t\t\t}\n\n\t\t\t\tw.color = x.parent.color;\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\tw.right.color = NodeColor.Black;\n\t\t\t\tleftRotate(tree, x.parent);\n\t\t\t\tx = tree.root;\n\t\t\t}\n\t\t} else {\n\t\t\tw = x.parent.left;\n\n\t\t\tif (w.color === NodeColor.Red) {\n\t\t\t\tw.color = NodeColor.Black;\n\t\t\t\tx.parent.color = NodeColor.Red;\n\t\t\t\trightRotate(tree, x.parent);\n\t\t\t\tw = x.parent.left;\n\t\t\t}\n\n\t\t\tif (w.left.color === NodeColor.Black && w.right.color === NodeColor.Black) {\n\t\t\t\tw.color = NodeColor.Red;\n\t\t\t\tx = x.parent;\n\n\t\t\t} else {\n\t\t\t\tif (w.left.color === NodeColor.Black) {\n\t\t\t\t\tw.right.color = NodeColor.Black;\n\t\t\t\t\tw.color = NodeColor.Red;\n\t\t\t\t\tleftRotate(tree, w);\n\t\t\t\t\tw = x.parent.left;\n\t\t\t\t}\n\n\t\t\t\tw.color = x.parent.color;\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\tw.left.color = NodeColor.Black;\n\t\t\t\trightRotate(tree, x.parent);\n\t\t\t\tx = tree.root;\n\t\t\t}\n\t\t}\n\t}\n\tx.color = NodeColor.Black;\n\tresetSentinel();\n}\n\nexport function fixInsert(tree: PieceTreeBase, x: TreeNode) {\n\trecomputeTreeMetadata(tree, x);\n\n\twhile (x !== tree.root && x.parent.color === NodeColor.Red) {\n\t\tif (x.parent === x.parent.parent.left) {\n\t\t\tconst y = x.parent.parent.right;\n\n\t\t\tif (y.color === NodeColor.Red) {\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\ty.color = NodeColor.Black;\n\t\t\t\tx.parent.parent.color = NodeColor.Red;\n\t\t\t\tx = x.parent.parent;\n\t\t\t} else {\n\t\t\t\tif (x === x.parent.right) {\n\t\t\t\t\tx = x.parent;\n\t\t\t\t\tleftRotate(tree, x);\n\t\t\t\t}\n\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\tx.parent.parent.color = NodeColor.Red;\n\t\t\t\trightRotate(tree, x.parent.parent);\n\t\t\t}\n\t\t} else {\n\t\t\tconst y = x.parent.parent.left;\n\n\t\t\tif (y.color === NodeColor.Red) {\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\ty.color = NodeColor.Black;\n\t\t\t\tx.parent.parent.color = NodeColor.Red;\n\t\t\t\tx = x.parent.parent;\n\t\t\t} else {\n\t\t\t\tif (x === x.parent.left) {\n\t\t\t\t\tx = x.parent;\n\t\t\t\t\trightRotate(tree, x);\n\t\t\t\t}\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\tx.parent.parent.color = NodeColor.Red;\n\t\t\t\tleftRotate(tree, x.parent.parent);\n\t\t\t}\n\t\t}\n\t}\n\n\ttree.root.color = NodeColor.Black;\n}\n\nexport function updateTreeMetadata(tree: PieceTreeBase, x: TreeNode, delta: number, lineFeedCntDelta: number): void {\n\t// node length change or line feed count change\n\twhile (x !== tree.root && x !== SENTINEL) {\n\t\tif (x.parent.left === x) {\n\t\t\tx.parent.size_left += delta;\n\t\t\tx.parent.lf_left += lineFeedCntDelta;\n\t\t}\n\n\t\tx = x.parent;\n\t}\n}\n\nexport function recomputeTreeMetadata(tree: PieceTreeBase, x: TreeNode) {\n\tlet delta = 0;\n\tlet lf_delta = 0;\n\tif (x === tree.root) {\n\t\treturn;\n\t}\n\n\t// go upwards till the node whose left subtree is changed.\n\twhile (x !== tree.root && x === x.parent.right) {\n\t\tx = x.parent;\n\t}\n\n\tif (x === tree.root) {\n\t\t// well, it means we add a node to the end (inorder)\n\t\treturn;\n\t}\n\n\t// x is the node whose right subtree is changed.\n\tx = x.parent;\n\n\tdelta = calculateSize(x.left) - x.size_left;\n\tlf_delta = calculateLF(x.left) - x.lf_left;\n\tx.size_left += delta;\n\tx.lf_left += lf_delta;\n\n\n\t// go upwards till root. O(logN)\n\twhile (x !== tree.root && (delta !== 0 || lf_delta !== 0)) {\n\t\tif (x.parent.left === x) {\n\t\t\tx.parent.size_left += delta;\n\t\t\tx.parent.lf_left += lf_delta;\n\t\t}\n\n\t\tx = x.parent;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { FindMatch, ITextSnapshot, SearchData } from 'vs/editor/common/model';\nimport { NodeColor, SENTINEL, TreeNode, fixInsert, leftest, rbDelete, righttest, updateTreeMetadata } from 'vs/editor/common/model/pieceTreeTextBuffer/rbTreeBase';\nimport { Searcher, createFindMatch, isValidMatch } from 'vs/editor/common/model/textModelSearch';\n\n// const lfRegex = new RegExp(/\\r\\n|\\r|\\n/g);\nconst AverageBufferSize = 65535;\n\nfunction createUintArray(arr: number[]): Uint32Array | Uint16Array {\n\tlet r;\n\tif (arr[arr.length - 1] < 65536) {\n\t\tr = new Uint16Array(arr.length);\n\t} else {\n\t\tr = new Uint32Array(arr.length);\n\t}\n\tr.set(arr, 0);\n\treturn r;\n}\n\nclass LineStarts {\n\tconstructor(\n\t\tpublic readonly lineStarts: Uint32Array | Uint16Array | number[],\n\t\tpublic readonly cr: number,\n\t\tpublic readonly lf: number,\n\t\tpublic readonly crlf: number,\n\t\tpublic readonly isBasicASCII: boolean\n\t) { }\n}\n\nexport function createLineStartsFast(str: string, readonly: boolean = true): Uint32Array | Uint16Array | number[] {\n\tconst r: number[] = [0];\n\tlet rLength = 1;\n\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chr = str.charCodeAt(i);\n\n\t\tif (chr === CharCode.CarriageReturn) {\n\t\t\tif (i + 1 < len && str.charCodeAt(i + 1) === CharCode.LineFeed) {\n\t\t\t\t// \\r\\n... case\n\t\t\t\tr[rLength++] = i + 2;\n\t\t\t\ti++; // skip \\n\n\t\t\t} else {\n\t\t\t\t// \\r... case\n\t\t\t\tr[rLength++] = i + 1;\n\t\t\t}\n\t\t} else if (chr === CharCode.LineFeed) {\n\t\t\tr[rLength++] = i + 1;\n\t\t}\n\t}\n\tif (readonly) {\n\t\treturn createUintArray(r);\n\t} else {\n\t\treturn r;\n\t}\n}\n\nexport function createLineStarts(r: number[], str: string): LineStarts {\n\tr.length = 0;\n\tr[0] = 0;\n\tlet rLength = 1;\n\tlet cr = 0, lf = 0, crlf = 0;\n\tlet isBasicASCII = true;\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chr = str.charCodeAt(i);\n\n\t\tif (chr === CharCode.CarriageReturn) {\n\t\t\tif (i + 1 < len && str.charCodeAt(i + 1) === CharCode.LineFeed) {\n\t\t\t\t// \\r\\n... case\n\t\t\t\tcrlf++;\n\t\t\t\tr[rLength++] = i + 2;\n\t\t\t\ti++; // skip \\n\n\t\t\t} else {\n\t\t\t\tcr++;\n\t\t\t\t// \\r... case\n\t\t\t\tr[rLength++] = i + 1;\n\t\t\t}\n\t\t} else if (chr === CharCode.LineFeed) {\n\t\t\tlf++;\n\t\t\tr[rLength++] = i + 1;\n\t\t} else {\n\t\t\tif (isBasicASCII) {\n\t\t\t\tif (chr !== CharCode.Tab && (chr < 32 || chr > 126)) {\n\t\t\t\t\tisBasicASCII = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tconst result = new LineStarts(createUintArray(r), cr, lf, crlf, isBasicASCII);\n\tr.length = 0;\n\n\treturn result;\n}\n\ninterface NodePosition {\n\t/**\n\t * Piece Index\n\t */\n\tnode: TreeNode;\n\t/**\n\t * remainder in current piece.\n\t*/\n\tremainder: number;\n\t/**\n\t * node start offset in document.\n\t */\n\tnodeStartOffset: number;\n}\n\ninterface BufferCursor {\n\t/**\n\t * Line number in current buffer\n\t */\n\tline: number;\n\t/**\n\t * Column number in current buffer\n\t */\n\tcolumn: number;\n}\n\nexport class Piece {\n\treadonly bufferIndex: number;\n\treadonly start: BufferCursor;\n\treadonly end: BufferCursor;\n\treadonly length: number;\n\treadonly lineFeedCnt: number;\n\n\tconstructor(bufferIndex: number, start: BufferCursor, end: BufferCursor, lineFeedCnt: number, length: number) {\n\t\tthis.bufferIndex = bufferIndex;\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.lineFeedCnt = lineFeedCnt;\n\t\tthis.length = length;\n\t}\n}\n\nexport class StringBuffer {\n\tbuffer: string;\n\tlineStarts: Uint32Array | Uint16Array | number[];\n\n\tconstructor(buffer: string, lineStarts: Uint32Array | Uint16Array | number[]) {\n\t\tthis.buffer = buffer;\n\t\tthis.lineStarts = lineStarts;\n\t}\n}\n\n/**\n * Readonly snapshot for piece tree.\n * In a real multiple thread environment, to make snapshot reading always work correctly, we need to\n * 1. Make TreeNode.piece immutable, then reading and writing can run in parallel.\n * 2. TreeNode/Buffers normalization should not happen during snapshot reading.\n */\nclass PieceTreeSnapshot implements ITextSnapshot {\n\tprivate readonly _pieces: Piece[];\n\tprivate _index: number;\n\tprivate readonly _tree: PieceTreeBase;\n\tprivate readonly _BOM: string;\n\n\tconstructor(tree: PieceTreeBase, BOM: string) {\n\t\tthis._pieces = [];\n\t\tthis._tree = tree;\n\t\tthis._BOM = BOM;\n\t\tthis._index = 0;\n\t\tif (tree.root !== SENTINEL) {\n\t\t\ttree.iterate(tree.root, node => {\n\t\t\t\tif (node !== SENTINEL) {\n\t\t\t\t\tthis._pieces.push(node.piece);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\t}\n\n\tread(): string | null {\n\t\tif (this._pieces.length === 0) {\n\t\t\tif (this._index === 0) {\n\t\t\t\tthis._index++;\n\t\t\t\treturn this._BOM;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tif (this._index > this._pieces.length - 1) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this._index === 0) {\n\t\t\treturn this._BOM + this._tree.getPieceContent(this._pieces[this._index++]);\n\t\t}\n\t\treturn this._tree.getPieceContent(this._pieces[this._index++]);\n\t}\n}\n\ninterface CacheEntry {\n\tnode: TreeNode;\n\tnodeStartOffset: number;\n\tnodeStartLineNumber?: number;\n}\n\nclass PieceTreeSearchCache {\n\tprivate readonly _limit: number;\n\tprivate _cache: CacheEntry[];\n\n\tconstructor(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis._cache = [];\n\t}\n\n\tpublic get(offset: number): CacheEntry | null {\n\t\tfor (let i = this._cache.length - 1; i >= 0; i--) {\n\t\t\tconst nodePos = this._cache[i];\n\t\t\tif (nodePos.nodeStartOffset <= offset && nodePos.nodeStartOffset + nodePos.node.piece.length >= offset) {\n\t\t\t\treturn nodePos;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic get2(lineNumber: number): { node: TreeNode; nodeStartOffset: number; nodeStartLineNumber: number } | null {\n\t\tfor (let i = this._cache.length - 1; i >= 0; i--) {\n\t\t\tconst nodePos = this._cache[i];\n\t\t\tif (nodePos.nodeStartLineNumber && nodePos.nodeStartLineNumber < lineNumber && nodePos.nodeStartLineNumber + nodePos.node.piece.lineFeedCnt >= lineNumber) {\n\t\t\t\treturn <{ node: TreeNode; nodeStartOffset: number; nodeStartLineNumber: number }>nodePos;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic set(nodePosition: CacheEntry) {\n\t\tif (this._cache.length >= this._limit) {\n\t\t\tthis._cache.shift();\n\t\t}\n\t\tthis._cache.push(nodePosition);\n\t}\n\n\tpublic validate(offset: number) {\n\t\tlet hasInvalidVal = false;\n\t\tconst tmp: Array<CacheEntry | null> = this._cache;\n\t\tfor (let i = 0; i < tmp.length; i++) {\n\t\t\tconst nodePos = tmp[i]!;\n\t\t\tif (nodePos.node.parent === null || nodePos.nodeStartOffset >= offset) {\n\t\t\t\ttmp[i] = null;\n\t\t\t\thasInvalidVal = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tif (hasInvalidVal) {\n\t\t\tconst newArr: CacheEntry[] = [];\n\t\t\tfor (const entry of tmp) {\n\t\t\t\tif (entry !== null) {\n\t\t\t\t\tnewArr.push(entry);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._cache = newArr;\n\t\t}\n\t}\n}\n\nexport class PieceTreeBase {\n\troot!: TreeNode;\n\tprotected _buffers!: StringBuffer[]; // 0 is change buffer, others are readonly original buffer.\n\tprotected _lineCnt!: number;\n\tprotected _length!: number;\n\tprotected _EOL!: '\\r\\n' | '\\n';\n\tprotected _EOLLength!: number;\n\tprotected _EOLNormalized!: boolean;\n\tprivate _lastChangeBufferPos!: BufferCursor;\n\tprivate _searchCache!: PieceTreeSearchCache;\n\tprivate _lastVisitedLine!: { lineNumber: number; value: string };\n\n\tconstructor(chunks: StringBuffer[], eol: '\\r\\n' | '\\n', eolNormalized: boolean) {\n\t\tthis.create(chunks, eol, eolNormalized);\n\t}\n\n\tcreate(chunks: StringBuffer[], eol: '\\r\\n' | '\\n', eolNormalized: boolean) {\n\t\tthis._buffers = [\n\t\t\tnew StringBuffer('', [0])\n\t\t];\n\t\tthis._lastChangeBufferPos = { line: 0, column: 0 };\n\t\tthis.root = SENTINEL;\n\t\tthis._lineCnt = 1;\n\t\tthis._length = 0;\n\t\tthis._EOL = eol;\n\t\tthis._EOLLength = eol.length;\n\t\tthis._EOLNormalized = eolNormalized;\n\n\t\tlet lastNode: TreeNode | null = null;\n\t\tfor (let i = 0, len = chunks.length; i < len; i++) {\n\t\t\tif (chunks[i].buffer.length > 0) {\n\t\t\t\tif (!chunks[i].lineStarts) {\n\t\t\t\t\tchunks[i].lineStarts = createLineStartsFast(chunks[i].buffer);\n\t\t\t\t}\n\n\t\t\t\tconst piece = new Piece(\n\t\t\t\t\ti + 1,\n\t\t\t\t\t{ line: 0, column: 0 },\n\t\t\t\t\t{ line: chunks[i].lineStarts.length - 1, column: chunks[i].buffer.length - chunks[i].lineStarts[chunks[i].lineStarts.length - 1] },\n\t\t\t\t\tchunks[i].lineStarts.length - 1,\n\t\t\t\t\tchunks[i].buffer.length\n\t\t\t\t);\n\t\t\t\tthis._buffers.push(chunks[i]);\n\t\t\t\tlastNode = this.rbInsertRight(lastNode, piece);\n\t\t\t}\n\t\t}\n\n\t\tthis._searchCache = new PieceTreeSearchCache(1);\n\t\tthis._lastVisitedLine = { lineNumber: 0, value: '' };\n\t\tthis.computeBufferMetadata();\n\t}\n\n\tnormalizeEOL(eol: '\\r\\n' | '\\n') {\n\t\tconst averageBufferSize = AverageBufferSize;\n\t\tconst min = averageBufferSize - Math.floor(averageBufferSize / 3);\n\t\tconst max = min * 2;\n\n\t\tlet tempChunk = '';\n\t\tlet tempChunkLen = 0;\n\t\tconst chunks: StringBuffer[] = [];\n\n\t\tthis.iterate(this.root, node => {\n\t\t\tconst str = this.getNodeContent(node);\n\t\t\tconst len = str.length;\n\t\t\tif (tempChunkLen <= min || tempChunkLen + len < max) {\n\t\t\t\ttempChunk += str;\n\t\t\t\ttempChunkLen += len;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// flush anyways\n\t\t\tconst text = tempChunk.replace(/\\r\\n|\\r|\\n/g, eol);\n\t\t\tchunks.push(new StringBuffer(text, createLineStartsFast(text)));\n\t\t\ttempChunk = str;\n\t\t\ttempChunkLen = len;\n\t\t\treturn true;\n\t\t});\n\n\t\tif (tempChunkLen > 0) {\n\t\t\tconst text = tempChunk.replace(/\\r\\n|\\r|\\n/g, eol);\n\t\t\tchunks.push(new StringBuffer(text, createLineStartsFast(text)));\n\t\t}\n\n\t\tthis.create(chunks, eol, true);\n\t}\n\n\t// #region Buffer API\n\tpublic getEOL(): '\\r\\n' | '\\n' {\n\t\treturn this._EOL;\n\t}\n\n\tpublic setEOL(newEOL: '\\r\\n' | '\\n'): void {\n\t\tthis._EOL = newEOL;\n\t\tthis._EOLLength = this._EOL.length;\n\t\tthis.normalizeEOL(newEOL);\n\t}\n\n\tpublic createSnapshot(BOM: string): ITextSnapshot {\n\t\treturn new PieceTreeSnapshot(this, BOM);\n\t}\n\n\tpublic equal(other: PieceTreeBase): boolean {\n\t\tif (this.getLength() !== other.getLength()) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.getLineCount() !== other.getLineCount()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet offset = 0;\n\t\tconst ret = this.iterate(this.root, node => {\n\t\t\tif (node === SENTINEL) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst str = this.getNodeContent(node);\n\t\t\tconst len = str.length;\n\t\t\tconst startPosition = other.nodeAt(offset);\n\t\t\tconst endPosition = other.nodeAt(offset + len);\n\t\t\tconst val = other.getValueInRange2(startPosition, endPosition);\n\n\t\t\toffset += len;\n\t\t\treturn str === val;\n\t\t});\n\n\t\treturn ret;\n\t}\n\n\tpublic getOffsetAt(lineNumber: number, column: number): number {\n\t\tlet leftLen = 0; // inorder\n\n\t\tlet x = this.root;\n\n\t\twhile (x !== SENTINEL) {\n\t\t\tif (x.left !== SENTINEL && x.lf_left + 1 >= lineNumber) {\n\t\t\t\tx = x.left;\n\t\t\t} else if (x.lf_left + x.piece.lineFeedCnt + 1 >= lineNumber) {\n\t\t\t\tleftLen += x.size_left;\n\t\t\t\t// lineNumber >= 2\n\t\t\t\tconst accumualtedValInCurrentIndex = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n\t\t\t\treturn leftLen += accumualtedValInCurrentIndex + column - 1;\n\t\t\t} else {\n\t\t\t\tlineNumber -= x.lf_left + x.piece.lineFeedCnt;\n\t\t\t\tleftLen += x.size_left + x.piece.length;\n\t\t\t\tx = x.right;\n\t\t\t}\n\t\t}\n\n\t\treturn leftLen;\n\t}\n\n\tpublic getPositionAt(offset: number): Position {\n\t\toffset = Math.floor(offset);\n\t\toffset = Math.max(0, offset);\n\n\t\tlet x = this.root;\n\t\tlet lfCnt = 0;\n\t\tconst originalOffset = offset;\n\n\t\twhile (x !== SENTINEL) {\n\t\t\tif (x.size_left !== 0 && x.size_left >= offset) {\n\t\t\t\tx = x.left;\n\t\t\t} else if (x.size_left + x.piece.length >= offset) {\n\t\t\t\tconst out = this.getIndexOf(x, offset - x.size_left);\n\n\t\t\t\tlfCnt += x.lf_left + out.index;\n\n\t\t\t\tif (out.index === 0) {\n\t\t\t\t\tconst lineStartOffset = this.getOffsetAt(lfCnt + 1, 1);\n\t\t\t\t\tconst column = originalOffset - lineStartOffset;\n\t\t\t\t\treturn new Position(lfCnt + 1, column + 1);\n\t\t\t\t}\n\n\t\t\t\treturn new Position(lfCnt + 1, out.remainder + 1);\n\t\t\t} else {\n\t\t\t\toffset -= x.size_left + x.piece.length;\n\t\t\t\tlfCnt += x.lf_left + x.piece.lineFeedCnt;\n\n\t\t\t\tif (x.right === SENTINEL) {\n\t\t\t\t\t// last node\n\t\t\t\t\tconst lineStartOffset = this.getOffsetAt(lfCnt + 1, 1);\n\t\t\t\t\tconst column = originalOffset - offset - lineStartOffset;\n\t\t\t\t\treturn new Position(lfCnt + 1, column + 1);\n\t\t\t\t} else {\n\t\t\t\t\tx = x.right;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn new Position(1, 1);\n\t}\n\n\tpublic getValueInRange(range: Range, eol?: string): string {\n\t\tif (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst startPosition = this.nodeAt2(range.startLineNumber, range.startColumn);\n\t\tconst endPosition = this.nodeAt2(range.endLineNumber, range.endColumn);\n\n\t\tconst value = this.getValueInRange2(startPosition, endPosition);\n\t\tif (eol) {\n\t\t\tif (eol !== this._EOL || !this._EOLNormalized) {\n\t\t\t\treturn value.replace(/\\r\\n|\\r|\\n/g, eol);\n\t\t\t}\n\n\t\t\tif (eol === this.getEOL() && this._EOLNormalized) {\n\t\t\t\tif (eol === '\\r\\n') {\n\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\treturn value.replace(/\\r\\n|\\r|\\n/g, eol);\n\t\t}\n\t\treturn value;\n\t}\n\n\tpublic getValueInRange2(startPosition: NodePosition, endPosition: NodePosition): string {\n\t\tif (startPosition.node === endPosition.node) {\n\t\t\tconst node = startPosition.node;\n\t\t\tconst buffer = this._buffers[node.piece.bufferIndex].buffer;\n\t\t\tconst startOffset = this.offsetInBuffer(node.piece.bufferIndex, node.piece.start);\n\t\t\treturn buffer.substring(startOffset + startPosition.remainder, startOffset + endPosition.remainder);\n\t\t}\n\n\t\tlet x = startPosition.node;\n\t\tconst buffer = this._buffers[x.piece.bufferIndex].buffer;\n\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\t\tlet ret = buffer.substring(startOffset + startPosition.remainder, startOffset + x.piece.length);\n\n\t\tx = x.next();\n\t\twhile (x !== SENTINEL) {\n\t\t\tconst buffer = this._buffers[x.piece.bufferIndex].buffer;\n\t\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\n\t\t\tif (x === endPosition.node) {\n\t\t\t\tret += buffer.substring(startOffset, startOffset + endPosition.remainder);\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tret += buffer.substr(startOffset, x.piece.length);\n\t\t\t}\n\n\t\t\tx = x.next();\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\tconst lines: string[] = [];\n\t\tlet linesLength = 0;\n\t\tlet currentLine = '';\n\t\tlet danglingCR = false;\n\n\t\tthis.iterate(this.root, node => {\n\t\t\tif (node === SENTINEL) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst piece = node.piece;\n\t\t\tlet pieceLength = piece.length;\n\t\t\tif (pieceLength === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst buffer = this._buffers[piece.bufferIndex].buffer;\n\t\t\tconst lineStarts = this._buffers[piece.bufferIndex].lineStarts;\n\n\t\t\tconst pieceStartLine = piece.start.line;\n\t\t\tconst pieceEndLine = piece.end.line;\n\t\t\tlet pieceStartOffset = lineStarts[pieceStartLine] + piece.start.column;\n\n\t\t\tif (danglingCR) {\n\t\t\t\tif (buffer.charCodeAt(pieceStartOffset) === CharCode.LineFeed) {\n\t\t\t\t\t// pretend the \\n was in the previous piece..\n\t\t\t\t\tpieceStartOffset++;\n\t\t\t\t\tpieceLength--;\n\t\t\t\t}\n\t\t\t\tlines[linesLength++] = currentLine;\n\t\t\t\tcurrentLine = '';\n\t\t\t\tdanglingCR = false;\n\t\t\t\tif (pieceLength === 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (pieceStartLine === pieceEndLine) {\n\t\t\t\t// this piece has no new lines\n\t\t\t\tif (!this._EOLNormalized && buffer.charCodeAt(pieceStartOffset + pieceLength - 1) === CharCode.CarriageReturn) {\n\t\t\t\t\tdanglingCR = true;\n\t\t\t\t\tcurrentLine += buffer.substr(pieceStartOffset, pieceLength - 1);\n\t\t\t\t} else {\n\t\t\t\t\tcurrentLine += buffer.substr(pieceStartOffset, pieceLength);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// add the text before the first line start in this piece\n\t\t\tcurrentLine += (\n\t\t\t\tthis._EOLNormalized\n\t\t\t\t\t? buffer.substring(pieceStartOffset, Math.max(pieceStartOffset, lineStarts[pieceStartLine + 1] - this._EOLLength))\n\t\t\t\t\t: buffer.substring(pieceStartOffset, lineStarts[pieceStartLine + 1]).replace(/(\\r\\n|\\r|\\n)$/, '')\n\t\t\t);\n\t\t\tlines[linesLength++] = currentLine;\n\n\t\t\tfor (let line = pieceStartLine + 1; line < pieceEndLine; line++) {\n\t\t\t\tcurrentLine = (\n\t\t\t\t\tthis._EOLNormalized\n\t\t\t\t\t\t? buffer.substring(lineStarts[line], lineStarts[line + 1] - this._EOLLength)\n\t\t\t\t\t\t: buffer.substring(lineStarts[line], lineStarts[line + 1]).replace(/(\\r\\n|\\r|\\n)$/, '')\n\t\t\t\t);\n\t\t\t\tlines[linesLength++] = currentLine;\n\t\t\t}\n\n\t\t\tif (!this._EOLNormalized && buffer.charCodeAt(lineStarts[pieceEndLine] + piece.end.column - 1) === CharCode.CarriageReturn) {\n\t\t\t\tdanglingCR = true;\n\t\t\t\tif (piece.end.column === 0) {\n\t\t\t\t\t// The last line ended with a \\r, let's undo the push, it will be pushed by next iteration\n\t\t\t\t\tlinesLength--;\n\t\t\t\t} else {\n\t\t\t\t\tcurrentLine = buffer.substr(lineStarts[pieceEndLine], piece.end.column - 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcurrentLine = buffer.substr(lineStarts[pieceEndLine], piece.end.column);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\tif (danglingCR) {\n\t\t\tlines[linesLength++] = currentLine;\n\t\t\tcurrentLine = '';\n\t\t}\n\n\t\tlines[linesLength++] = currentLine;\n\t\treturn lines;\n\t}\n\n\tpublic getLength(): number {\n\t\treturn this._length;\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._lineCnt;\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\tif (this._lastVisitedLine.lineNumber === lineNumber) {\n\t\t\treturn this._lastVisitedLine.value;\n\t\t}\n\n\t\tthis._lastVisitedLine.lineNumber = lineNumber;\n\n\t\tif (lineNumber === this._lineCnt) {\n\t\t\tthis._lastVisitedLine.value = this.getLineRawContent(lineNumber);\n\t\t} else if (this._EOLNormalized) {\n\t\t\tthis._lastVisitedLine.value = this.getLineRawContent(lineNumber, this._EOLLength);\n\t\t} else {\n\t\t\tthis._lastVisitedLine.value = this.getLineRawContent(lineNumber).replace(/(\\r\\n|\\r|\\n)$/, '');\n\t\t}\n\n\t\treturn this._lastVisitedLine.value;\n\t}\n\n\tprivate _getCharCode(nodePos: NodePosition): number {\n\t\tif (nodePos.remainder === nodePos.node.piece.length) {\n\t\t\t// the char we want to fetch is at the head of next node.\n\t\t\tconst matchingNode = nodePos.node.next();\n\t\t\tif (!matchingNode) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tconst buffer = this._buffers[matchingNode.piece.bufferIndex];\n\t\t\tconst startOffset = this.offsetInBuffer(matchingNode.piece.bufferIndex, matchingNode.piece.start);\n\t\t\treturn buffer.buffer.charCodeAt(startOffset);\n\t\t} else {\n\t\t\tconst buffer = this._buffers[nodePos.node.piece.bufferIndex];\n\t\t\tconst startOffset = this.offsetInBuffer(nodePos.node.piece.bufferIndex, nodePos.node.piece.start);\n\t\t\tconst targetOffset = startOffset + nodePos.remainder;\n\n\t\t\treturn buffer.buffer.charCodeAt(targetOffset);\n\t\t}\n\t}\n\n\tpublic getLineCharCode(lineNumber: number, index: number): number {\n\t\tconst nodePos = this.nodeAt2(lineNumber, index + 1);\n\t\treturn this._getCharCode(nodePos);\n\t}\n\n\tpublic getLineLength(lineNumber: number): number {\n\t\tif (lineNumber === this.getLineCount()) {\n\t\t\tconst startOffset = this.getOffsetAt(lineNumber, 1);\n\t\t\treturn this.getLength() - startOffset;\n\t\t}\n\t\treturn this.getOffsetAt(lineNumber + 1, 1) - this.getOffsetAt(lineNumber, 1) - this._EOLLength;\n\t}\n\n\tpublic getCharCode(offset: number): number {\n\t\tconst nodePos = this.nodeAt(offset);\n\t\treturn this._getCharCode(nodePos);\n\t}\n\n\tpublic findMatchesInNode(node: TreeNode, searcher: Searcher, startLineNumber: number, startColumn: number, startCursor: BufferCursor, endCursor: BufferCursor, searchData: SearchData, captureMatches: boolean, limitResultCount: number, resultLen: number, result: FindMatch[]) {\n\t\tconst buffer = this._buffers[node.piece.bufferIndex];\n\t\tconst startOffsetInBuffer = this.offsetInBuffer(node.piece.bufferIndex, node.piece.start);\n\t\tconst start = this.offsetInBuffer(node.piece.bufferIndex, startCursor);\n\t\tconst end = this.offsetInBuffer(node.piece.bufferIndex, endCursor);\n\n\t\tlet m: RegExpExecArray | null;\n\t\t// Reset regex to search from the beginning\n\t\tconst ret: BufferCursor = { line: 0, column: 0 };\n\t\tlet searchText: string;\n\t\tlet offsetInBuffer: (offset: number) => number;\n\n\t\tif (searcher._wordSeparators) {\n\t\t\tsearchText = buffer.buffer.substring(start, end);\n\t\t\toffsetInBuffer = (offset: number) => offset + start;\n\t\t\tsearcher.reset(0);\n\t\t} else {\n\t\t\tsearchText = buffer.buffer;\n\t\t\toffsetInBuffer = (offset: number) => offset;\n\t\t\tsearcher.reset(start);\n\t\t}\n\n\t\tdo {\n\t\t\tm = searcher.next(searchText);\n\n\t\t\tif (m) {\n\t\t\t\tif (offsetInBuffer(m.index) >= end) {\n\t\t\t\t\treturn resultLen;\n\t\t\t\t}\n\t\t\t\tthis.positionInBuffer(node, offsetInBuffer(m.index) - startOffsetInBuffer, ret);\n\t\t\t\tconst lineFeedCnt = this.getLineFeedCnt(node.piece.bufferIndex, startCursor, ret);\n\t\t\t\tconst retStartColumn = ret.line === startCursor.line ? ret.column - startCursor.column + startColumn : ret.column + 1;\n\t\t\t\tconst retEndColumn = retStartColumn + m[0].length;\n\t\t\t\tresult[resultLen++] = createFindMatch(new Range(startLineNumber + lineFeedCnt, retStartColumn, startLineNumber + lineFeedCnt, retEndColumn), m, captureMatches);\n\n\t\t\t\tif (offsetInBuffer(m.index) + m[0].length >= end) {\n\t\t\t\t\treturn resultLen;\n\t\t\t\t}\n\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\treturn resultLen;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} while (m);\n\n\t\treturn resultLen;\n\t}\n\n\tpublic findMatchesLineByLine(searchRange: Range, searchData: SearchData, captureMatches: boolean, limitResultCount: number): FindMatch[] {\n\t\tconst result: FindMatch[] = [];\n\t\tlet resultLen = 0;\n\t\tconst searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n\n\t\tlet startPosition = this.nodeAt2(searchRange.startLineNumber, searchRange.startColumn);\n\t\tif (startPosition === null) {\n\t\t\treturn [];\n\t\t}\n\t\tconst endPosition = this.nodeAt2(searchRange.endLineNumber, searchRange.endColumn);\n\t\tif (endPosition === null) {\n\t\t\treturn [];\n\t\t}\n\t\tlet start = this.positionInBuffer(startPosition.node, startPosition.remainder);\n\t\tconst end = this.positionInBuffer(endPosition.node, endPosition.remainder);\n\n\t\tif (startPosition.node === endPosition.node) {\n\t\t\tthis.findMatchesInNode(startPosition.node, searcher, searchRange.startLineNumber, searchRange.startColumn, start, end, searchData, captureMatches, limitResultCount, resultLen, result);\n\t\t\treturn result;\n\t\t}\n\n\t\tlet startLineNumber = searchRange.startLineNumber;\n\n\t\tlet currentNode = startPosition.node;\n\t\twhile (currentNode !== endPosition.node) {\n\t\t\tconst lineBreakCnt = this.getLineFeedCnt(currentNode.piece.bufferIndex, start, currentNode.piece.end);\n\n\t\t\tif (lineBreakCnt >= 1) {\n\t\t\t\t// last line break position\n\t\t\t\tconst lineStarts = this._buffers[currentNode.piece.bufferIndex].lineStarts;\n\t\t\t\tconst startOffsetInBuffer = this.offsetInBuffer(currentNode.piece.bufferIndex, currentNode.piece.start);\n\t\t\t\tconst nextLineStartOffset = lineStarts[start.line + lineBreakCnt];\n\t\t\t\tconst startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn : 1;\n\t\t\t\tresultLen = this.findMatchesInNode(currentNode, searcher, startLineNumber, startColumn, start, this.positionInBuffer(currentNode, nextLineStartOffset - startOffsetInBuffer), searchData, captureMatches, limitResultCount, resultLen, result);\n\n\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tstartLineNumber += lineBreakCnt;\n\t\t\t}\n\n\t\t\tconst startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn - 1 : 0;\n\t\t\t// search for the remaining content\n\t\t\tif (startLineNumber === searchRange.endLineNumber) {\n\t\t\t\tconst text = this.getLineContent(startLineNumber).substring(startColumn, searchRange.endColumn - 1);\n\t\t\t\tresultLen = this._findMatchesInLine(searchData, searcher, text, searchRange.endLineNumber, startColumn, resultLen, result, captureMatches, limitResultCount);\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tresultLen = this._findMatchesInLine(searchData, searcher, this.getLineContent(startLineNumber).substr(startColumn), startLineNumber, startColumn, resultLen, result, captureMatches, limitResultCount);\n\n\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tstartLineNumber++;\n\t\t\tstartPosition = this.nodeAt2(startLineNumber, 1);\n\t\t\tcurrentNode = startPosition.node;\n\t\t\tstart = this.positionInBuffer(startPosition.node, startPosition.remainder);\n\t\t}\n\n\t\tif (startLineNumber === searchRange.endLineNumber) {\n\t\t\tconst startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn - 1 : 0;\n\t\t\tconst text = this.getLineContent(startLineNumber).substring(startColumn, searchRange.endColumn - 1);\n\t\t\tresultLen = this._findMatchesInLine(searchData, searcher, text, searchRange.endLineNumber, startColumn, resultLen, result, captureMatches, limitResultCount);\n\t\t\treturn result;\n\t\t}\n\n\t\tconst startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn : 1;\n\t\tresultLen = this.findMatchesInNode(endPosition.node, searcher, startLineNumber, startColumn, start, end, searchData, captureMatches, limitResultCount, resultLen, result);\n\t\treturn result;\n\t}\n\n\tprivate _findMatchesInLine(searchData: SearchData, searcher: Searcher, text: string, lineNumber: number, deltaOffset: number, resultLen: number, result: FindMatch[], captureMatches: boolean, limitResultCount: number): number {\n\t\tconst wordSeparators = searchData.wordSeparators;\n\t\tif (!captureMatches && searchData.simpleSearch) {\n\t\t\tconst searchString = searchData.simpleSearch;\n\t\t\tconst searchStringLen = searchString.length;\n\t\t\tconst textLength = text.length;\n\n\t\t\tlet lastMatchIndex = -searchStringLen;\n\t\t\twhile ((lastMatchIndex = text.indexOf(searchString, lastMatchIndex + searchStringLen)) !== -1) {\n\t\t\t\tif (!wordSeparators || isValidMatch(wordSeparators, text, textLength, lastMatchIndex, searchStringLen)) {\n\t\t\t\t\tresult[resultLen++] = new FindMatch(new Range(lineNumber, lastMatchIndex + 1 + deltaOffset, lineNumber, lastMatchIndex + 1 + searchStringLen + deltaOffset), null);\n\t\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\t\treturn resultLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn resultLen;\n\t\t}\n\n\t\tlet m: RegExpExecArray | null;\n\t\t// Reset regex to search from the beginning\n\t\tsearcher.reset(0);\n\t\tdo {\n\t\t\tm = searcher.next(text);\n\t\t\tif (m) {\n\t\t\t\tresult[resultLen++] = createFindMatch(new Range(lineNumber, m.index + 1 + deltaOffset, lineNumber, m.index + 1 + m[0].length + deltaOffset), m, captureMatches);\n\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\treturn resultLen;\n\t\t\t\t}\n\t\t\t}\n\t\t} while (m);\n\t\treturn resultLen;\n\t}\n\n\t// #endregion\n\n\t// #region Piece Table\n\tpublic insert(offset: number, value: string, eolNormalized: boolean = false): void {\n\t\tthis._EOLNormalized = this._EOLNormalized && eolNormalized;\n\t\tthis._lastVisitedLine.lineNumber = 0;\n\t\tthis._lastVisitedLine.value = '';\n\n\t\tif (this.root !== SENTINEL) {\n\t\t\tconst { node, remainder, nodeStartOffset } = this.nodeAt(offset);\n\t\t\tconst piece = node.piece;\n\t\t\tconst bufferIndex = piece.bufferIndex;\n\t\t\tconst insertPosInBuffer = this.positionInBuffer(node, remainder);\n\t\t\tif (node.piece.bufferIndex === 0 &&\n\t\t\t\tpiece.end.line === this._lastChangeBufferPos.line &&\n\t\t\t\tpiece.end.column === this._lastChangeBufferPos.column &&\n\t\t\t\t(nodeStartOffset + piece.length === offset) &&\n\t\t\t\tvalue.length < AverageBufferSize\n\t\t\t) {\n\t\t\t\t// changed buffer\n\t\t\t\tthis.appendToNode(node, value);\n\t\t\t\tthis.computeBufferMetadata();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (nodeStartOffset === offset) {\n\t\t\t\tthis.insertContentToNodeLeft(value, node);\n\t\t\t\tthis._searchCache.validate(offset);\n\t\t\t} else if (nodeStartOffset + node.piece.length > offset) {\n\t\t\t\t// we are inserting into the middle of a node.\n\t\t\t\tconst nodesToDel: TreeNode[] = [];\n\t\t\t\tlet newRightPiece = new Piece(\n\t\t\t\t\tpiece.bufferIndex,\n\t\t\t\t\tinsertPosInBuffer,\n\t\t\t\t\tpiece.end,\n\t\t\t\t\tthis.getLineFeedCnt(piece.bufferIndex, insertPosInBuffer, piece.end),\n\t\t\t\t\tthis.offsetInBuffer(bufferIndex, piece.end) - this.offsetInBuffer(bufferIndex, insertPosInBuffer)\n\t\t\t\t);\n\n\t\t\t\tif (this.shouldCheckCRLF() && this.endWithCR(value)) {\n\t\t\t\t\tconst headOfRight = this.nodeCharCodeAt(node, remainder);\n\n\t\t\t\t\tif (headOfRight === 10 /** \\n */) {\n\t\t\t\t\t\tconst newStart: BufferCursor = { line: newRightPiece.start.line + 1, column: 0 };\n\t\t\t\t\t\tnewRightPiece = new Piece(\n\t\t\t\t\t\t\tnewRightPiece.bufferIndex,\n\t\t\t\t\t\t\tnewStart,\n\t\t\t\t\t\t\tnewRightPiece.end,\n\t\t\t\t\t\t\tthis.getLineFeedCnt(newRightPiece.bufferIndex, newStart, newRightPiece.end),\n\t\t\t\t\t\t\tnewRightPiece.length - 1\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tvalue += '\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// reuse node for content before insertion point.\n\t\t\t\tif (this.shouldCheckCRLF() && this.startWithLF(value)) {\n\t\t\t\t\tconst tailOfLeft = this.nodeCharCodeAt(node, remainder - 1);\n\t\t\t\t\tif (tailOfLeft === 13 /** \\r */) {\n\t\t\t\t\t\tconst previousPos = this.positionInBuffer(node, remainder - 1);\n\t\t\t\t\t\tthis.deleteNodeTail(node, previousPos);\n\t\t\t\t\t\tvalue = '\\r' + value;\n\n\t\t\t\t\t\tif (node.piece.length === 0) {\n\t\t\t\t\t\t\tnodesToDel.push(node);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.deleteNodeTail(node, insertPosInBuffer);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.deleteNodeTail(node, insertPosInBuffer);\n\t\t\t\t}\n\n\t\t\t\tconst newPieces = this.createNewPieces(value);\n\t\t\t\tif (newRightPiece.length > 0) {\n\t\t\t\t\tthis.rbInsertRight(node, newRightPiece);\n\t\t\t\t}\n\n\t\t\t\tlet tmpNode = node;\n\t\t\t\tfor (let k = 0; k < newPieces.length; k++) {\n\t\t\t\t\ttmpNode = this.rbInsertRight(tmpNode, newPieces[k]);\n\t\t\t\t}\n\t\t\t\tthis.deleteNodes(nodesToDel);\n\t\t\t} else {\n\t\t\t\tthis.insertContentToNodeRight(value, node);\n\t\t\t}\n\t\t} else {\n\t\t\t// insert new node\n\t\t\tconst pieces = this.createNewPieces(value);\n\t\t\tlet node = this.rbInsertLeft(null, pieces[0]);\n\n\t\t\tfor (let k = 1; k < pieces.length; k++) {\n\t\t\t\tnode = this.rbInsertRight(node, pieces[k]);\n\t\t\t}\n\t\t}\n\n\t\t// todo, this is too brutal. Total line feed count should be updated the same way as lf_left.\n\t\tthis.computeBufferMetadata();\n\t}\n\n\tpublic delete(offset: number, cnt: number): void {\n\t\tthis._lastVisitedLine.lineNumber = 0;\n\t\tthis._lastVisitedLine.value = '';\n\n\t\tif (cnt <= 0 || this.root === SENTINEL) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst startPosition = this.nodeAt(offset);\n\t\tconst endPosition = this.nodeAt(offset + cnt);\n\t\tconst startNode = startPosition.node;\n\t\tconst endNode = endPosition.node;\n\n\t\tif (startNode === endNode) {\n\t\t\tconst startSplitPosInBuffer = this.positionInBuffer(startNode, startPosition.remainder);\n\t\t\tconst endSplitPosInBuffer = this.positionInBuffer(startNode, endPosition.remainder);\n\n\t\t\tif (startPosition.nodeStartOffset === offset) {\n\t\t\t\tif (cnt === startNode.piece.length) { // delete node\n\t\t\t\t\tconst next = startNode.next();\n\t\t\t\t\trbDelete(this, startNode);\n\t\t\t\t\tthis.validateCRLFWithPrevNode(next);\n\t\t\t\t\tthis.computeBufferMetadata();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.deleteNodeHead(startNode, endSplitPosInBuffer);\n\t\t\t\tthis._searchCache.validate(offset);\n\t\t\t\tthis.validateCRLFWithPrevNode(startNode);\n\t\t\t\tthis.computeBufferMetadata();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (startPosition.nodeStartOffset + startNode.piece.length === offset + cnt) {\n\t\t\t\tthis.deleteNodeTail(startNode, startSplitPosInBuffer);\n\t\t\t\tthis.validateCRLFWithNextNode(startNode);\n\t\t\t\tthis.computeBufferMetadata();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// delete content in the middle, this node will be splitted to nodes\n\t\t\tthis.shrinkNode(startNode, startSplitPosInBuffer, endSplitPosInBuffer);\n\t\t\tthis.computeBufferMetadata();\n\t\t\treturn;\n\t\t}\n\n\t\tconst nodesToDel: TreeNode[] = [];\n\n\t\tconst startSplitPosInBuffer = this.positionInBuffer(startNode, startPosition.remainder);\n\t\tthis.deleteNodeTail(startNode, startSplitPosInBuffer);\n\t\tthis._searchCache.validate(offset);\n\t\tif (startNode.piece.length === 0) {\n\t\t\tnodesToDel.push(startNode);\n\t\t}\n\n\t\t// update last touched node\n\t\tconst endSplitPosInBuffer = this.positionInBuffer(endNode, endPosition.remainder);\n\t\tthis.deleteNodeHead(endNode, endSplitPosInBuffer);\n\t\tif (endNode.piece.length === 0) {\n\t\t\tnodesToDel.push(endNode);\n\t\t}\n\n\t\t// delete nodes in between\n\t\tconst secondNode = startNode.next();\n\t\tfor (let node = secondNode; node !== SENTINEL && node !== endNode; node = node.next()) {\n\t\t\tnodesToDel.push(node);\n\t\t}\n\n\t\tconst prev = startNode.piece.length === 0 ? startNode.prev() : startNode;\n\t\tthis.deleteNodes(nodesToDel);\n\t\tthis.validateCRLFWithNextNode(prev);\n\t\tthis.computeBufferMetadata();\n\t}\n\n\tprivate insertContentToNodeLeft(value: string, node: TreeNode) {\n\t\t// we are inserting content to the beginning of node\n\t\tconst nodesToDel: TreeNode[] = [];\n\t\tif (this.shouldCheckCRLF() && this.endWithCR(value) && this.startWithLF(node)) {\n\t\t\t// move `\\n` to new node.\n\n\t\t\tconst piece = node.piece;\n\t\t\tconst newStart: BufferCursor = { line: piece.start.line + 1, column: 0 };\n\t\t\tconst nPiece = new Piece(\n\t\t\t\tpiece.bufferIndex,\n\t\t\t\tnewStart,\n\t\t\t\tpiece.end,\n\t\t\t\tthis.getLineFeedCnt(piece.bufferIndex, newStart, piece.end),\n\t\t\t\tpiece.length - 1\n\t\t\t);\n\n\t\t\tnode.piece = nPiece;\n\n\t\t\tvalue += '\\n';\n\t\t\tupdateTreeMetadata(this, node, -1, -1);\n\n\t\t\tif (node.piece.length === 0) {\n\t\t\t\tnodesToDel.push(node);\n\t\t\t}\n\t\t}\n\n\t\tconst newPieces = this.createNewPieces(value);\n\t\tlet newNode = this.rbInsertLeft(node, newPieces[newPieces.length - 1]);\n\t\tfor (let k = newPieces.length - 2; k >= 0; k--) {\n\t\t\tnewNode = this.rbInsertLeft(newNode, newPieces[k]);\n\t\t}\n\t\tthis.validateCRLFWithPrevNode(newNode);\n\t\tthis.deleteNodes(nodesToDel);\n\t}\n\n\tprivate insertContentToNodeRight(value: string, node: TreeNode) {\n\t\t// we are inserting to the right of this node.\n\t\tif (this.adjustCarriageReturnFromNext(value, node)) {\n\t\t\t// move \\n to the new node.\n\t\t\tvalue += '\\n';\n\t\t}\n\n\t\tconst newPieces = this.createNewPieces(value);\n\t\tconst newNode = this.rbInsertRight(node, newPieces[0]);\n\t\tlet tmpNode = newNode;\n\n\t\tfor (let k = 1; k < newPieces.length; k++) {\n\t\t\ttmpNode = this.rbInsertRight(tmpNode, newPieces[k]);\n\t\t}\n\n\t\tthis.validateCRLFWithPrevNode(newNode);\n\t}\n\n\tprivate positionInBuffer(node: TreeNode, remainder: number): BufferCursor;\n\tprivate positionInBuffer(node: TreeNode, remainder: number, ret: BufferCursor): null;\n\tprivate positionInBuffer(node: TreeNode, remainder: number, ret?: BufferCursor): BufferCursor | null {\n\t\tconst piece = node.piece;\n\t\tconst bufferIndex = node.piece.bufferIndex;\n\t\tconst lineStarts = this._buffers[bufferIndex].lineStarts;\n\n\t\tconst startOffset = lineStarts[piece.start.line] + piece.start.column;\n\n\t\tconst offset = startOffset + remainder;\n\n\t\t// binary search offset between startOffset and endOffset\n\t\tlet low = piece.start.line;\n\t\tlet high = piece.end.line;\n\n\t\tlet mid: number = 0;\n\t\tlet midStop: number = 0;\n\t\tlet midStart: number = 0;\n\n\t\twhile (low <= high) {\n\t\t\tmid = low + ((high - low) / 2) | 0;\n\t\t\tmidStart = lineStarts[mid];\n\n\t\t\tif (mid === high) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tmidStop = lineStarts[mid + 1];\n\n\t\t\tif (offset < midStart) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else if (offset >= midStop) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (ret) {\n\t\t\tret.line = mid;\n\t\t\tret.column = offset - midStart;\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tline: mid,\n\t\t\tcolumn: offset - midStart\n\t\t};\n\t}\n\n\tprivate getLineFeedCnt(bufferIndex: number, start: BufferCursor, end: BufferCursor): number {\n\t\t// we don't need to worry about start: abc\\r|\\n, or abc|\\r, or abc|\\n, or abc|\\r\\n doesn't change the fact that, there is one line break after start.\n\t\t// now let's take care of end: abc\\r|\\n, if end is in between \\r and \\n, we need to add line feed count by 1\n\t\tif (end.column === 0) {\n\t\t\treturn end.line - start.line;\n\t\t}\n\n\t\tconst lineStarts = this._buffers[bufferIndex].lineStarts;\n\t\tif (end.line === lineStarts.length - 1) { // it means, there is no \\n after end, otherwise, there will be one more lineStart.\n\t\t\treturn end.line - start.line;\n\t\t}\n\n\t\tconst nextLineStartOffset = lineStarts[end.line + 1];\n\t\tconst endOffset = lineStarts[end.line] + end.column;\n\t\tif (nextLineStartOffset > endOffset + 1) { // there are more than 1 character after end, which means it can't be \\n\n\t\t\treturn end.line - start.line;\n\t\t}\n\t\t// endOffset + 1 === nextLineStartOffset\n\t\t// character at endOffset is \\n, so we check the character before first\n\t\t// if character at endOffset is \\r, end.column is 0 and we can't get here.\n\t\tconst previousCharOffset = endOffset - 1; // end.column > 0 so it's okay.\n\t\tconst buffer = this._buffers[bufferIndex].buffer;\n\n\t\tif (buffer.charCodeAt(previousCharOffset) === 13) {\n\t\t\treturn end.line - start.line + 1;\n\t\t} else {\n\t\t\treturn end.line - start.line;\n\t\t}\n\t}\n\n\tprivate offsetInBuffer(bufferIndex: number, cursor: BufferCursor): number {\n\t\tconst lineStarts = this._buffers[bufferIndex].lineStarts;\n\t\treturn lineStarts[cursor.line] + cursor.column;\n\t}\n\n\tprivate deleteNodes(nodes: TreeNode[]): void {\n\t\tfor (let i = 0; i < nodes.length; i++) {\n\t\t\trbDelete(this, nodes[i]);\n\t\t}\n\t}\n\n\tprivate createNewPieces(text: string): Piece[] {\n\t\tif (text.length > AverageBufferSize) {\n\t\t\t// the content is large, operations like substring, charCode becomes slow\n\t\t\t// so here we split it into smaller chunks, just like what we did for CR/LF normalization\n\t\t\tconst newPieces: Piece[] = [];\n\t\t\twhile (text.length > AverageBufferSize) {\n\t\t\t\tconst lastChar = text.charCodeAt(AverageBufferSize - 1);\n\t\t\t\tlet splitText;\n\t\t\t\tif (lastChar === CharCode.CarriageReturn || (lastChar >= 0xD800 && lastChar <= 0xDBFF)) {\n\t\t\t\t\t// last character is \\r or a high surrogate => keep it back\n\t\t\t\t\tsplitText = text.substring(0, AverageBufferSize - 1);\n\t\t\t\t\ttext = text.substring(AverageBufferSize - 1);\n\t\t\t\t} else {\n\t\t\t\t\tsplitText = text.substring(0, AverageBufferSize);\n\t\t\t\t\ttext = text.substring(AverageBufferSize);\n\t\t\t\t}\n\n\t\t\t\tconst lineStarts = createLineStartsFast(splitText);\n\t\t\t\tnewPieces.push(new Piece(\n\t\t\t\t\tthis._buffers.length, /* buffer index */\n\t\t\t\t\t{ line: 0, column: 0 },\n\t\t\t\t\t{ line: lineStarts.length - 1, column: splitText.length - lineStarts[lineStarts.length - 1] },\n\t\t\t\t\tlineStarts.length - 1,\n\t\t\t\t\tsplitText.length\n\t\t\t\t));\n\t\t\t\tthis._buffers.push(new StringBuffer(splitText, lineStarts));\n\t\t\t}\n\n\t\t\tconst lineStarts = createLineStartsFast(text);\n\t\t\tnewPieces.push(new Piece(\n\t\t\t\tthis._buffers.length, /* buffer index */\n\t\t\t\t{ line: 0, column: 0 },\n\t\t\t\t{ line: lineStarts.length - 1, column: text.length - lineStarts[lineStarts.length - 1] },\n\t\t\t\tlineStarts.length - 1,\n\t\t\t\ttext.length\n\t\t\t));\n\t\t\tthis._buffers.push(new StringBuffer(text, lineStarts));\n\n\t\t\treturn newPieces;\n\t\t}\n\n\t\tlet startOffset = this._buffers[0].buffer.length;\n\t\tconst lineStarts = createLineStartsFast(text, false);\n\n\t\tlet start = this._lastChangeBufferPos;\n\t\tif (this._buffers[0].lineStarts[this._buffers[0].lineStarts.length - 1] === startOffset\n\t\t\t&& startOffset !== 0\n\t\t\t&& this.startWithLF(text)\n\t\t\t&& this.endWithCR(this._buffers[0].buffer) // todo, we can check this._lastChangeBufferPos's column as it's the last one\n\t\t) {\n\t\t\tthis._lastChangeBufferPos = { line: this._lastChangeBufferPos.line, column: this._lastChangeBufferPos.column + 1 };\n\t\t\tstart = this._lastChangeBufferPos;\n\n\t\t\tfor (let i = 0; i < lineStarts.length; i++) {\n\t\t\t\tlineStarts[i] += startOffset + 1;\n\t\t\t}\n\n\t\t\tthis._buffers[0].lineStarts = (<number[]>this._buffers[0].lineStarts).concat(<number[]>lineStarts.slice(1));\n\t\t\tthis._buffers[0].buffer += '_' + text;\n\t\t\tstartOffset += 1;\n\t\t} else {\n\t\t\tif (startOffset !== 0) {\n\t\t\t\tfor (let i = 0; i < lineStarts.length; i++) {\n\t\t\t\t\tlineStarts[i] += startOffset;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._buffers[0].lineStarts = (<number[]>this._buffers[0].lineStarts).concat(<number[]>lineStarts.slice(1));\n\t\t\tthis._buffers[0].buffer += text;\n\t\t}\n\n\t\tconst endOffset = this._buffers[0].buffer.length;\n\t\tconst endIndex = this._buffers[0].lineStarts.length - 1;\n\t\tconst endColumn = endOffset - this._buffers[0].lineStarts[endIndex];\n\t\tconst endPos = { line: endIndex, column: endColumn };\n\t\tconst newPiece = new Piece(\n\t\t\t0, /** todo@peng */\n\t\t\tstart,\n\t\t\tendPos,\n\t\t\tthis.getLineFeedCnt(0, start, endPos),\n\t\t\tendOffset - startOffset\n\t\t);\n\t\tthis._lastChangeBufferPos = endPos;\n\t\treturn [newPiece];\n\t}\n\n\tpublic getLinesRawContent(): string {\n\t\treturn this.getContentOfSubTree(this.root);\n\t}\n\n\tpublic getLineRawContent(lineNumber: number, endOffset: number = 0): string {\n\t\tlet x = this.root;\n\n\t\tlet ret = '';\n\t\tconst cache = this._searchCache.get2(lineNumber);\n\t\tif (cache) {\n\t\t\tx = cache.node;\n\t\t\tconst prevAccumulatedValue = this.getAccumulatedValue(x, lineNumber - cache.nodeStartLineNumber - 1);\n\t\t\tconst buffer = this._buffers[x.piece.bufferIndex].buffer;\n\t\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\t\t\tif (cache.nodeStartLineNumber + x.piece.lineFeedCnt === lineNumber) {\n\t\t\t\tret = buffer.substring(startOffset + prevAccumulatedValue, startOffset + x.piece.length);\n\t\t\t} else {\n\t\t\t\tconst accumulatedValue = this.getAccumulatedValue(x, lineNumber - cache.nodeStartLineNumber);\n\t\t\t\treturn buffer.substring(startOffset + prevAccumulatedValue, startOffset + accumulatedValue - endOffset);\n\t\t\t}\n\t\t} else {\n\t\t\tlet nodeStartOffset = 0;\n\t\t\tconst originalLineNumber = lineNumber;\n\t\t\twhile (x !== SENTINEL) {\n\t\t\t\tif (x.left !== SENTINEL && x.lf_left >= lineNumber - 1) {\n\t\t\t\t\tx = x.left;\n\t\t\t\t} else if (x.lf_left + x.piece.lineFeedCnt > lineNumber - 1) {\n\t\t\t\t\tconst prevAccumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n\t\t\t\t\tconst accumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 1);\n\t\t\t\t\tconst buffer = this._buffers[x.piece.bufferIndex].buffer;\n\t\t\t\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\t\t\t\t\tnodeStartOffset += x.size_left;\n\t\t\t\t\tthis._searchCache.set({\n\t\t\t\t\t\tnode: x,\n\t\t\t\t\t\tnodeStartOffset,\n\t\t\t\t\t\tnodeStartLineNumber: originalLineNumber - (lineNumber - 1 - x.lf_left)\n\t\t\t\t\t});\n\n\t\t\t\t\treturn buffer.substring(startOffset + prevAccumulatedValue, startOffset + accumulatedValue - endOffset);\n\t\t\t\t} else if (x.lf_left + x.piece.lineFeedCnt === lineNumber - 1) {\n\t\t\t\t\tconst prevAccumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n\t\t\t\t\tconst buffer = this._buffers[x.piece.bufferIndex].buffer;\n\t\t\t\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\n\t\t\t\t\tret = buffer.substring(startOffset + prevAccumulatedValue, startOffset + x.piece.length);\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tlineNumber -= x.lf_left + x.piece.lineFeedCnt;\n\t\t\t\t\tnodeStartOffset += x.size_left + x.piece.length;\n\t\t\t\t\tx = x.right;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// search in order, to find the node contains end column\n\t\tx = x.next();\n\t\twhile (x !== SENTINEL) {\n\t\t\tconst buffer = this._buffers[x.piece.bufferIndex].buffer;\n\n\t\t\tif (x.piece.lineFeedCnt > 0) {\n\t\t\t\tconst accumulatedValue = this.getAccumulatedValue(x, 0);\n\t\t\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\n\t\t\t\tret += buffer.substring(startOffset, startOffset + accumulatedValue - endOffset);\n\t\t\t\treturn ret;\n\t\t\t} else {\n\t\t\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\t\t\t\tret += buffer.substr(startOffset, x.piece.length);\n\t\t\t}\n\n\t\t\tx = x.next();\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tprivate computeBufferMetadata() {\n\t\tlet x = this.root;\n\n\t\tlet lfCnt = 1;\n\t\tlet len = 0;\n\n\t\twhile (x !== SENTINEL) {\n\t\t\tlfCnt += x.lf_left + x.piece.lineFeedCnt;\n\t\t\tlen += x.size_left + x.piece.length;\n\t\t\tx = x.right;\n\t\t}\n\n\t\tthis._lineCnt = lfCnt;\n\t\tthis._length = len;\n\t\tthis._searchCache.validate(this._length);\n\t}\n\n\t// #region node operations\n\tprivate getIndexOf(node: TreeNode, accumulatedValue: number): { index: number; remainder: number } {\n\t\tconst piece = node.piece;\n\t\tconst pos = this.positionInBuffer(node, accumulatedValue);\n\t\tconst lineCnt = pos.line - piece.start.line;\n\n\t\tif (this.offsetInBuffer(piece.bufferIndex, piece.end) - this.offsetInBuffer(piece.bufferIndex, piece.start) === accumulatedValue) {\n\t\t\t// we are checking the end of this node, so a CRLF check is necessary.\n\t\t\tconst realLineCnt = this.getLineFeedCnt(node.piece.bufferIndex, piece.start, pos);\n\t\t\tif (realLineCnt !== lineCnt) {\n\t\t\t\t// aha yes, CRLF\n\t\t\t\treturn { index: realLineCnt, remainder: 0 };\n\t\t\t}\n\t\t}\n\n\t\treturn { index: lineCnt, remainder: pos.column };\n\t}\n\n\tprivate getAccumulatedValue(node: TreeNode, index: number) {\n\t\tif (index < 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst piece = node.piece;\n\t\tconst lineStarts = this._buffers[piece.bufferIndex].lineStarts;\n\t\tconst expectedLineStartIndex = piece.start.line + index + 1;\n\t\tif (expectedLineStartIndex > piece.end.line) {\n\t\t\treturn lineStarts[piece.end.line] + piece.end.column - lineStarts[piece.start.line] - piece.start.column;\n\t\t} else {\n\t\t\treturn lineStarts[expectedLineStartIndex] - lineStarts[piece.start.line] - piece.start.column;\n\t\t}\n\t}\n\n\tprivate deleteNodeTail(node: TreeNode, pos: BufferCursor) {\n\t\tconst piece = node.piece;\n\t\tconst originalLFCnt = piece.lineFeedCnt;\n\t\tconst originalEndOffset = this.offsetInBuffer(piece.bufferIndex, piece.end);\n\n\t\tconst newEnd = pos;\n\t\tconst newEndOffset = this.offsetInBuffer(piece.bufferIndex, newEnd);\n\t\tconst newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, piece.start, newEnd);\n\n\t\tconst lf_delta = newLineFeedCnt - originalLFCnt;\n\t\tconst size_delta = newEndOffset - originalEndOffset;\n\t\tconst newLength = piece.length + size_delta;\n\n\t\tnode.piece = new Piece(\n\t\t\tpiece.bufferIndex,\n\t\t\tpiece.start,\n\t\t\tnewEnd,\n\t\t\tnewLineFeedCnt,\n\t\t\tnewLength\n\t\t);\n\n\t\tupdateTreeMetadata(this, node, size_delta, lf_delta);\n\t}\n\n\tprivate deleteNodeHead(node: TreeNode, pos: BufferCursor) {\n\t\tconst piece = node.piece;\n\t\tconst originalLFCnt = piece.lineFeedCnt;\n\t\tconst originalStartOffset = this.offsetInBuffer(piece.bufferIndex, piece.start);\n\n\t\tconst newStart = pos;\n\t\tconst newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, newStart, piece.end);\n\t\tconst newStartOffset = this.offsetInBuffer(piece.bufferIndex, newStart);\n\t\tconst lf_delta = newLineFeedCnt - originalLFCnt;\n\t\tconst size_delta = originalStartOffset - newStartOffset;\n\t\tconst newLength = piece.length + size_delta;\n\t\tnode.piece = new Piece(\n\t\t\tpiece.bufferIndex,\n\t\t\tnewStart,\n\t\t\tpiece.end,\n\t\t\tnewLineFeedCnt,\n\t\t\tnewLength\n\t\t);\n\n\t\tupdateTreeMetadata(this, node, size_delta, lf_delta);\n\t}\n\n\tprivate shrinkNode(node: TreeNode, start: BufferCursor, end: BufferCursor) {\n\t\tconst piece = node.piece;\n\t\tconst originalStartPos = piece.start;\n\t\tconst originalEndPos = piece.end;\n\n\t\t// old piece, originalStartPos, start\n\t\tconst oldLength = piece.length;\n\t\tconst oldLFCnt = piece.lineFeedCnt;\n\t\tconst newEnd = start;\n\t\tconst newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, piece.start, newEnd);\n\t\tconst newLength = this.offsetInBuffer(piece.bufferIndex, start) - this.offsetInBuffer(piece.bufferIndex, originalStartPos);\n\n\t\tnode.piece = new Piece(\n\t\t\tpiece.bufferIndex,\n\t\t\tpiece.start,\n\t\t\tnewEnd,\n\t\t\tnewLineFeedCnt,\n\t\t\tnewLength\n\t\t);\n\n\t\tupdateTreeMetadata(this, node, newLength - oldLength, newLineFeedCnt - oldLFCnt);\n\n\t\t// new right piece, end, originalEndPos\n\t\tconst newPiece = new Piece(\n\t\t\tpiece.bufferIndex,\n\t\t\tend,\n\t\t\toriginalEndPos,\n\t\t\tthis.getLineFeedCnt(piece.bufferIndex, end, originalEndPos),\n\t\t\tthis.offsetInBuffer(piece.bufferIndex, originalEndPos) - this.offsetInBuffer(piece.bufferIndex, end)\n\t\t);\n\n\t\tconst newNode = this.rbInsertRight(node, newPiece);\n\t\tthis.validateCRLFWithPrevNode(newNode);\n\t}\n\n\tprivate appendToNode(node: TreeNode, value: string): void {\n\t\tif (this.adjustCarriageReturnFromNext(value, node)) {\n\t\t\tvalue += '\\n';\n\t\t}\n\n\t\tconst hitCRLF = this.shouldCheckCRLF() && this.startWithLF(value) && this.endWithCR(node);\n\t\tconst startOffset = this._buffers[0].buffer.length;\n\t\tthis._buffers[0].buffer += value;\n\t\tconst lineStarts = createLineStartsFast(value, false);\n\t\tfor (let i = 0; i < lineStarts.length; i++) {\n\t\t\tlineStarts[i] += startOffset;\n\t\t}\n\t\tif (hitCRLF) {\n\t\t\tconst prevStartOffset = this._buffers[0].lineStarts[this._buffers[0].lineStarts.length - 2];\n\t\t\t(<number[]>this._buffers[0].lineStarts).pop();\n\t\t\t// _lastChangeBufferPos is already wrong\n\t\t\tthis._lastChangeBufferPos = { line: this._lastChangeBufferPos.line - 1, column: startOffset - prevStartOffset };\n\t\t}\n\n\t\tthis._buffers[0].lineStarts = (<number[]>this._buffers[0].lineStarts).concat(<number[]>lineStarts.slice(1));\n\t\tconst endIndex = this._buffers[0].lineStarts.length - 1;\n\t\tconst endColumn = this._buffers[0].buffer.length - this._buffers[0].lineStarts[endIndex];\n\t\tconst newEnd = { line: endIndex, column: endColumn };\n\t\tconst newLength = node.piece.length + value.length;\n\t\tconst oldLineFeedCnt = node.piece.lineFeedCnt;\n\t\tconst newLineFeedCnt = this.getLineFeedCnt(0, node.piece.start, newEnd);\n\t\tconst lf_delta = newLineFeedCnt - oldLineFeedCnt;\n\n\t\tnode.piece = new Piece(\n\t\t\tnode.piece.bufferIndex,\n\t\t\tnode.piece.start,\n\t\t\tnewEnd,\n\t\t\tnewLineFeedCnt,\n\t\t\tnewLength\n\t\t);\n\n\t\tthis._lastChangeBufferPos = newEnd;\n\t\tupdateTreeMetadata(this, node, value.length, lf_delta);\n\t}\n\n\tprivate nodeAt(offset: number): NodePosition {\n\t\tlet x = this.root;\n\t\tconst cache = this._searchCache.get(offset);\n\t\tif (cache) {\n\t\t\treturn {\n\t\t\t\tnode: cache.node,\n\t\t\t\tnodeStartOffset: cache.nodeStartOffset,\n\t\t\t\tremainder: offset - cache.nodeStartOffset\n\t\t\t};\n\t\t}\n\n\t\tlet nodeStartOffset = 0;\n\n\t\twhile (x !== SENTINEL) {\n\t\t\tif (x.size_left > offset) {\n\t\t\t\tx = x.left;\n\t\t\t} else if (x.size_left + x.piece.length >= offset) {\n\t\t\t\tnodeStartOffset += x.size_left;\n\t\t\t\tconst ret = {\n\t\t\t\t\tnode: x,\n\t\t\t\t\tremainder: offset - x.size_left,\n\t\t\t\t\tnodeStartOffset\n\t\t\t\t};\n\t\t\t\tthis._searchCache.set(ret);\n\t\t\t\treturn ret;\n\t\t\t} else {\n\t\t\t\toffset -= x.size_left + x.piece.length;\n\t\t\t\tnodeStartOffset += x.size_left + x.piece.length;\n\t\t\t\tx = x.right;\n\t\t\t}\n\t\t}\n\n\t\treturn null!;\n\t}\n\n\tprivate nodeAt2(lineNumber: number, column: number): NodePosition {\n\t\tlet x = this.root;\n\t\tlet nodeStartOffset = 0;\n\n\t\twhile (x !== SENTINEL) {\n\t\t\tif (x.left !== SENTINEL && x.lf_left >= lineNumber - 1) {\n\t\t\t\tx = x.left;\n\t\t\t} else if (x.lf_left + x.piece.lineFeedCnt > lineNumber - 1) {\n\t\t\t\tconst prevAccumualtedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n\t\t\t\tconst accumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 1);\n\t\t\t\tnodeStartOffset += x.size_left;\n\n\t\t\t\treturn {\n\t\t\t\t\tnode: x,\n\t\t\t\t\tremainder: Math.min(prevAccumualtedValue + column - 1, accumulatedValue),\n\t\t\t\t\tnodeStartOffset\n\t\t\t\t};\n\t\t\t} else if (x.lf_left + x.piece.lineFeedCnt === lineNumber - 1) {\n\t\t\t\tconst prevAccumualtedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n\t\t\t\tif (prevAccumualtedValue + column - 1 <= x.piece.length) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tnode: x,\n\t\t\t\t\t\tremainder: prevAccumualtedValue + column - 1,\n\t\t\t\t\t\tnodeStartOffset\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tcolumn -= x.piece.length - prevAccumualtedValue;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlineNumber -= x.lf_left + x.piece.lineFeedCnt;\n\t\t\t\tnodeStartOffset += x.size_left + x.piece.length;\n\t\t\t\tx = x.right;\n\t\t\t}\n\t\t}\n\n\t\t// search in order, to find the node contains position.column\n\t\tx = x.next();\n\t\twhile (x !== SENTINEL) {\n\n\t\t\tif (x.piece.lineFeedCnt > 0) {\n\t\t\t\tconst accumulatedValue = this.getAccumulatedValue(x, 0);\n\t\t\t\tconst nodeStartOffset = this.offsetOfNode(x);\n\t\t\t\treturn {\n\t\t\t\t\tnode: x,\n\t\t\t\t\tremainder: Math.min(column - 1, accumulatedValue),\n\t\t\t\t\tnodeStartOffset\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tif (x.piece.length >= column - 1) {\n\t\t\t\t\tconst nodeStartOffset = this.offsetOfNode(x);\n\t\t\t\t\treturn {\n\t\t\t\t\t\tnode: x,\n\t\t\t\t\t\tremainder: column - 1,\n\t\t\t\t\t\tnodeStartOffset\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tcolumn -= x.piece.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tx = x.next();\n\t\t}\n\n\t\treturn null!;\n\t}\n\n\tprivate nodeCharCodeAt(node: TreeNode, offset: number): number {\n\t\tif (node.piece.lineFeedCnt < 1) {\n\t\t\treturn -1;\n\t\t}\n\t\tconst buffer = this._buffers[node.piece.bufferIndex];\n\t\tconst newOffset = this.offsetInBuffer(node.piece.bufferIndex, node.piece.start) + offset;\n\t\treturn buffer.buffer.charCodeAt(newOffset);\n\t}\n\n\tprivate offsetOfNode(node: TreeNode): number {\n\t\tif (!node) {\n\t\t\treturn 0;\n\t\t}\n\t\tlet pos = node.size_left;\n\t\twhile (node !== this.root) {\n\t\t\tif (node.parent.right === node) {\n\t\t\t\tpos += node.parent.size_left + node.parent.piece.length;\n\t\t\t}\n\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\t// #endregion\n\n\t// #region CRLF\n\tprivate shouldCheckCRLF() {\n\t\treturn !(this._EOLNormalized && this._EOL === '\\n');\n\t}\n\n\tprivate startWithLF(val: string | TreeNode): boolean {\n\t\tif (typeof val === 'string') {\n\t\t\treturn val.charCodeAt(0) === 10;\n\t\t}\n\n\t\tif (val === SENTINEL || val.piece.lineFeedCnt === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst piece = val.piece;\n\t\tconst lineStarts = this._buffers[piece.bufferIndex].lineStarts;\n\t\tconst line = piece.start.line;\n\t\tconst startOffset = lineStarts[line] + piece.start.column;\n\t\tif (line === lineStarts.length - 1) {\n\t\t\t// last line, so there is no line feed at the end of this line\n\t\t\treturn false;\n\t\t}\n\t\tconst nextLineOffset = lineStarts[line + 1];\n\t\tif (nextLineOffset > startOffset + 1) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._buffers[piece.bufferIndex].buffer.charCodeAt(startOffset) === 10;\n\t}\n\n\tprivate endWithCR(val: string | TreeNode): boolean {\n\t\tif (typeof val === 'string') {\n\t\t\treturn val.charCodeAt(val.length - 1) === 13;\n\t\t}\n\n\t\tif (val === SENTINEL || val.piece.lineFeedCnt === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.nodeCharCodeAt(val, val.piece.length - 1) === 13;\n\t}\n\n\tprivate validateCRLFWithPrevNode(nextNode: TreeNode) {\n\t\tif (this.shouldCheckCRLF() && this.startWithLF(nextNode)) {\n\t\t\tconst node = nextNode.prev();\n\t\t\tif (this.endWithCR(node)) {\n\t\t\t\tthis.fixCRLF(node, nextNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate validateCRLFWithNextNode(node: TreeNode) {\n\t\tif (this.shouldCheckCRLF() && this.endWithCR(node)) {\n\t\t\tconst nextNode = node.next();\n\t\t\tif (this.startWithLF(nextNode)) {\n\t\t\t\tthis.fixCRLF(node, nextNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate fixCRLF(prev: TreeNode, next: TreeNode) {\n\t\tconst nodesToDel: TreeNode[] = [];\n\t\t// update node\n\t\tconst lineStarts = this._buffers[prev.piece.bufferIndex].lineStarts;\n\t\tlet newEnd: BufferCursor;\n\t\tif (prev.piece.end.column === 0) {\n\t\t\t// it means, last line ends with \\r, not \\r\\n\n\t\t\tnewEnd = { line: prev.piece.end.line - 1, column: lineStarts[prev.piece.end.line] - lineStarts[prev.piece.end.line - 1] - 1 };\n\t\t} else {\n\t\t\t// \\r\\n\n\t\t\tnewEnd = { line: prev.piece.end.line, column: prev.piece.end.column - 1 };\n\t\t}\n\n\t\tconst prevNewLength = prev.piece.length - 1;\n\t\tconst prevNewLFCnt = prev.piece.lineFeedCnt - 1;\n\t\tprev.piece = new Piece(\n\t\t\tprev.piece.bufferIndex,\n\t\t\tprev.piece.start,\n\t\t\tnewEnd,\n\t\t\tprevNewLFCnt,\n\t\t\tprevNewLength\n\t\t);\n\n\t\tupdateTreeMetadata(this, prev, - 1, -1);\n\t\tif (prev.piece.length === 0) {\n\t\t\tnodesToDel.push(prev);\n\t\t}\n\n\t\t// update nextNode\n\t\tconst newStart: BufferCursor = { line: next.piece.start.line + 1, column: 0 };\n\t\tconst newLength = next.piece.length - 1;\n\t\tconst newLineFeedCnt = this.getLineFeedCnt(next.piece.bufferIndex, newStart, next.piece.end);\n\t\tnext.piece = new Piece(\n\t\t\tnext.piece.bufferIndex,\n\t\t\tnewStart,\n\t\t\tnext.piece.end,\n\t\t\tnewLineFeedCnt,\n\t\t\tnewLength\n\t\t);\n\n\t\tupdateTreeMetadata(this, next, - 1, -1);\n\t\tif (next.piece.length === 0) {\n\t\t\tnodesToDel.push(next);\n\t\t}\n\n\t\t// create new piece which contains \\r\\n\n\t\tconst pieces = this.createNewPieces('\\r\\n');\n\t\tthis.rbInsertRight(prev, pieces[0]);\n\t\t// delete empty nodes\n\n\t\tfor (let i = 0; i < nodesToDel.length; i++) {\n\t\t\trbDelete(this, nodesToDel[i]);\n\t\t}\n\t}\n\n\tprivate adjustCarriageReturnFromNext(value: string, node: TreeNode): boolean {\n\t\tif (this.shouldCheckCRLF() && this.endWithCR(value)) {\n\t\t\tconst nextNode = node.next();\n\t\t\tif (this.startWithLF(nextNode)) {\n\t\t\t\t// move `\\n` forward\n\t\t\t\tvalue += '\\n';\n\n\t\t\t\tif (nextNode.piece.length === 1) {\n\t\t\t\t\trbDelete(this, nextNode);\n\t\t\t\t} else {\n\n\t\t\t\t\tconst piece = nextNode.piece;\n\t\t\t\t\tconst newStart: BufferCursor = { line: piece.start.line + 1, column: 0 };\n\t\t\t\t\tconst newLength = piece.length - 1;\n\t\t\t\t\tconst newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, newStart, piece.end);\n\t\t\t\t\tnextNode.piece = new Piece(\n\t\t\t\t\t\tpiece.bufferIndex,\n\t\t\t\t\t\tnewStart,\n\t\t\t\t\t\tpiece.end,\n\t\t\t\t\t\tnewLineFeedCnt,\n\t\t\t\t\t\tnewLength\n\t\t\t\t\t);\n\n\t\t\t\t\tupdateTreeMetadata(this, nextNode, -1, -1);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// #endregion\n\n\t// #endregion\n\n\t// #region Tree operations\n\titerate(node: TreeNode, callback: (node: TreeNode) => boolean): boolean {\n\t\tif (node === SENTINEL) {\n\t\t\treturn callback(SENTINEL);\n\t\t}\n\n\t\tconst leftRet = this.iterate(node.left, callback);\n\t\tif (!leftRet) {\n\t\t\treturn leftRet;\n\t\t}\n\n\t\treturn callback(node) && this.iterate(node.right, callback);\n\t}\n\n\tprivate getNodeContent(node: TreeNode) {\n\t\tif (node === SENTINEL) {\n\t\t\treturn '';\n\t\t}\n\t\tconst buffer = this._buffers[node.piece.bufferIndex];\n\t\tconst piece = node.piece;\n\t\tconst startOffset = this.offsetInBuffer(piece.bufferIndex, piece.start);\n\t\tconst endOffset = this.offsetInBuffer(piece.bufferIndex, piece.end);\n\t\tconst currentContent = buffer.buffer.substring(startOffset, endOffset);\n\t\treturn currentContent;\n\t}\n\n\tgetPieceContent(piece: Piece) {\n\t\tconst buffer = this._buffers[piece.bufferIndex];\n\t\tconst startOffset = this.offsetInBuffer(piece.bufferIndex, piece.start);\n\t\tconst endOffset = this.offsetInBuffer(piece.bufferIndex, piece.end);\n\t\tconst currentContent = buffer.buffer.substring(startOffset, endOffset);\n\t\treturn currentContent;\n\t}\n\n\t/**\n\t *      node              node\n\t *     /  \\              /  \\\n\t *    a   b    <----   a    b\n\t *                         /\n\t *                        z\n\t */\n\tprivate rbInsertRight(node: TreeNode | null, p: Piece): TreeNode {\n\t\tconst z = new TreeNode(p, NodeColor.Red);\n\t\tz.left = SENTINEL;\n\t\tz.right = SENTINEL;\n\t\tz.parent = SENTINEL;\n\t\tz.size_left = 0;\n\t\tz.lf_left = 0;\n\n\t\tconst x = this.root;\n\t\tif (x === SENTINEL) {\n\t\t\tthis.root = z;\n\t\t\tz.color = NodeColor.Black;\n\t\t} else if (node!.right === SENTINEL) {\n\t\t\tnode!.right = z;\n\t\t\tz.parent = node!;\n\t\t} else {\n\t\t\tconst nextNode = leftest(node!.right);\n\t\t\tnextNode.left = z;\n\t\t\tz.parent = nextNode;\n\t\t}\n\n\t\tfixInsert(this, z);\n\t\treturn z;\n\t}\n\n\t/**\n\t *      node              node\n\t *     /  \\              /  \\\n\t *    a   b     ---->   a    b\n\t *                       \\\n\t *                        z\n\t */\n\tprivate rbInsertLeft(node: TreeNode | null, p: Piece): TreeNode {\n\t\tconst z = new TreeNode(p, NodeColor.Red);\n\t\tz.left = SENTINEL;\n\t\tz.right = SENTINEL;\n\t\tz.parent = SENTINEL;\n\t\tz.size_left = 0;\n\t\tz.lf_left = 0;\n\n\t\tif (this.root === SENTINEL) {\n\t\t\tthis.root = z;\n\t\t\tz.color = NodeColor.Black;\n\t\t} else if (node!.left === SENTINEL) {\n\t\t\tnode!.left = z;\n\t\t\tz.parent = node!;\n\t\t} else {\n\t\t\tconst prevNode = righttest(node!.left); // a\n\t\t\tprevNode.right = z;\n\t\t\tz.parent = prevNode;\n\t\t}\n\n\t\tfixInsert(this, z);\n\t\treturn z;\n\t}\n\n\tprivate getContentOfSubTree(node: TreeNode): string {\n\t\tlet str = '';\n\n\t\tthis.iterate(node, node => {\n\t\t\tstr += this.getNodeContent(node);\n\t\t\treturn true;\n\t\t});\n\n\t\treturn str;\n\t}\n\t// #endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport * as strings from 'vs/base/common/strings';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { ApplyEditsResult, EndOfLinePreference, FindMatch, IInternalModelContentChange, ISingleEditOperationIdentifier, ITextBuffer, ITextSnapshot, ValidAnnotatedEditOperation, IValidEditOperation, SearchData } from 'vs/editor/common/model';\nimport { PieceTreeBase, StringBuffer } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeBase';\nimport { countEOL, StringEOL } from 'vs/editor/common/core/eolCounter';\nimport { TextChange } from 'vs/editor/common/core/textChange';\nimport { Disposable } from 'vs/base/common/lifecycle';\n\nexport interface IValidatedEditOperation {\n\tsortIndex: number;\n\tidentifier: ISingleEditOperationIdentifier | null;\n\trange: Range;\n\trangeOffset: number;\n\trangeLength: number;\n\ttext: string;\n\teolCount: number;\n\tfirstLineLength: number;\n\tlastLineLength: number;\n\tforceMoveMarkers: boolean;\n\tisAutoWhitespaceEdit: boolean;\n}\n\ninterface IReverseSingleEditOperation extends IValidEditOperation {\n\tsortIndex: number;\n}\n\nexport class PieceTreeTextBuffer extends Disposable implements ITextBuffer {\n\tprivate _pieceTree: PieceTreeBase;\n\tprivate readonly _BOM: string;\n\tprivate _mightContainRTL: boolean;\n\tprivate _mightContainUnusualLineTerminators: boolean;\n\tprivate _mightContainNonBasicASCII: boolean;\n\n\tprivate readonly _onDidChangeContent: Emitter<void> = this._register(new Emitter<void>());\n\tpublic readonly onDidChangeContent: Event<void> = this._onDidChangeContent.event;\n\n\tconstructor(chunks: StringBuffer[], BOM: string, eol: '\\r\\n' | '\\n', containsRTL: boolean, containsUnusualLineTerminators: boolean, isBasicASCII: boolean, eolNormalized: boolean) {\n\t\tsuper();\n\t\tthis._BOM = BOM;\n\t\tthis._mightContainNonBasicASCII = !isBasicASCII;\n\t\tthis._mightContainRTL = containsRTL;\n\t\tthis._mightContainUnusualLineTerminators = containsUnusualLineTerminators;\n\t\tthis._pieceTree = new PieceTreeBase(chunks, eol, eolNormalized);\n\t}\n\n\t// #region TextBuffer\n\tpublic equals(other: ITextBuffer): boolean {\n\t\tif (!(other instanceof PieceTreeTextBuffer)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._BOM !== other._BOM) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.getEOL() !== other.getEOL()) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._pieceTree.equal(other._pieceTree);\n\t}\n\tpublic mightContainRTL(): boolean {\n\t\treturn this._mightContainRTL;\n\t}\n\tpublic mightContainUnusualLineTerminators(): boolean {\n\t\treturn this._mightContainUnusualLineTerminators;\n\t}\n\tpublic resetMightContainUnusualLineTerminators(): void {\n\t\tthis._mightContainUnusualLineTerminators = false;\n\t}\n\tpublic mightContainNonBasicASCII(): boolean {\n\t\treturn this._mightContainNonBasicASCII;\n\t}\n\tpublic getBOM(): string {\n\t\treturn this._BOM;\n\t}\n\tpublic getEOL(): '\\r\\n' | '\\n' {\n\t\treturn this._pieceTree.getEOL();\n\t}\n\n\tpublic createSnapshot(preserveBOM: boolean): ITextSnapshot {\n\t\treturn this._pieceTree.createSnapshot(preserveBOM ? this._BOM : '');\n\t}\n\n\tpublic getOffsetAt(lineNumber: number, column: number): number {\n\t\treturn this._pieceTree.getOffsetAt(lineNumber, column);\n\t}\n\n\tpublic getPositionAt(offset: number): Position {\n\t\treturn this._pieceTree.getPositionAt(offset);\n\t}\n\n\tpublic getRangeAt(start: number, length: number): Range {\n\t\tconst end = start + length;\n\t\tconst startPosition = this.getPositionAt(start);\n\t\tconst endPosition = this.getPositionAt(end);\n\t\treturn new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column);\n\t}\n\n\tpublic getValueInRange(range: Range, eol: EndOfLinePreference = EndOfLinePreference.TextDefined): string {\n\t\tif (range.isEmpty()) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst lineEnding = this._getEndOfLine(eol);\n\t\treturn this._pieceTree.getValueInRange(range, lineEnding);\n\t}\n\n\tpublic getValueLengthInRange(range: Range, eol: EndOfLinePreference = EndOfLinePreference.TextDefined): number {\n\t\tif (range.isEmpty()) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\treturn (range.endColumn - range.startColumn);\n\t\t}\n\n\t\tconst startOffset = this.getOffsetAt(range.startLineNumber, range.startColumn);\n\t\tconst endOffset = this.getOffsetAt(range.endLineNumber, range.endColumn);\n\n\t\t// offsets use the text EOL, so we need to compensate for length differences\n\t\t// if the requested EOL doesn't match the text EOL\n\t\tlet eolOffsetCompensation = 0;\n\t\tconst desiredEOL = this._getEndOfLine(eol);\n\t\tconst actualEOL = this.getEOL();\n\t\tif (desiredEOL.length !== actualEOL.length) {\n\t\t\tconst delta = desiredEOL.length - actualEOL.length;\n\t\t\tconst eolCount = range.endLineNumber - range.startLineNumber;\n\t\t\teolOffsetCompensation = delta * eolCount;\n\t\t}\n\n\t\treturn endOffset - startOffset + eolOffsetCompensation;\n\t}\n\n\tpublic getCharacterCountInRange(range: Range, eol: EndOfLinePreference = EndOfLinePreference.TextDefined): number {\n\t\tif (this._mightContainNonBasicASCII) {\n\t\t\t// we must count by iterating\n\n\t\t\tlet result = 0;\n\n\t\t\tconst fromLineNumber = range.startLineNumber;\n\t\t\tconst toLineNumber = range.endLineNumber;\n\t\t\tfor (let lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n\t\t\t\tconst lineContent = this.getLineContent(lineNumber);\n\t\t\t\tconst fromOffset = (lineNumber === fromLineNumber ? range.startColumn - 1 : 0);\n\t\t\t\tconst toOffset = (lineNumber === toLineNumber ? range.endColumn - 1 : lineContent.length);\n\n\t\t\t\tfor (let offset = fromOffset; offset < toOffset; offset++) {\n\t\t\t\t\tif (strings.isHighSurrogate(lineContent.charCodeAt(offset))) {\n\t\t\t\t\t\tresult = result + 1;\n\t\t\t\t\t\toffset = offset + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = result + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult += this._getEndOfLine(eol).length * (toLineNumber - fromLineNumber);\n\n\t\t\treturn result;\n\t\t}\n\n\t\treturn this.getValueLengthInRange(range, eol);\n\t}\n\n\tpublic getLength(): number {\n\t\treturn this._pieceTree.getLength();\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._pieceTree.getLineCount();\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\treturn this._pieceTree.getLinesContent();\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\treturn this._pieceTree.getLineContent(lineNumber);\n\t}\n\n\tpublic getLineCharCode(lineNumber: number, index: number): number {\n\t\treturn this._pieceTree.getLineCharCode(lineNumber, index);\n\t}\n\n\tpublic getCharCode(offset: number): number {\n\t\treturn this._pieceTree.getCharCode(offset);\n\t}\n\n\tpublic getLineLength(lineNumber: number): number {\n\t\treturn this._pieceTree.getLineLength(lineNumber);\n\t}\n\n\tpublic getLineMinColumn(lineNumber: number): number {\n\t\treturn 1;\n\t}\n\n\tpublic getLineMaxColumn(lineNumber: number): number {\n\t\treturn this.getLineLength(lineNumber) + 1;\n\t}\n\n\tpublic getLineFirstNonWhitespaceColumn(lineNumber: number): number {\n\t\tconst result = strings.firstNonWhitespaceIndex(this.getLineContent(lineNumber));\n\t\tif (result === -1) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn result + 1;\n\t}\n\n\tpublic getLineLastNonWhitespaceColumn(lineNumber: number): number {\n\t\tconst result = strings.lastNonWhitespaceIndex(this.getLineContent(lineNumber));\n\t\tif (result === -1) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn result + 2;\n\t}\n\n\tprivate _getEndOfLine(eol: EndOfLinePreference): string {\n\t\tswitch (eol) {\n\t\t\tcase EndOfLinePreference.LF:\n\t\t\t\treturn '\\n';\n\t\t\tcase EndOfLinePreference.CRLF:\n\t\t\t\treturn '\\r\\n';\n\t\t\tcase EndOfLinePreference.TextDefined:\n\t\t\t\treturn this.getEOL();\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unknown EOL preference');\n\t\t}\n\t}\n\n\tpublic setEOL(newEOL: '\\r\\n' | '\\n'): void {\n\t\tthis._pieceTree.setEOL(newEOL);\n\t}\n\n\tpublic applyEdits(rawOperations: ValidAnnotatedEditOperation[], recordTrimAutoWhitespace: boolean, computeUndoEdits: boolean): ApplyEditsResult {\n\t\tlet mightContainRTL = this._mightContainRTL;\n\t\tlet mightContainUnusualLineTerminators = this._mightContainUnusualLineTerminators;\n\t\tlet mightContainNonBasicASCII = this._mightContainNonBasicASCII;\n\t\tlet canReduceOperations = true;\n\n\t\tlet operations: IValidatedEditOperation[] = [];\n\t\tfor (let i = 0; i < rawOperations.length; i++) {\n\t\t\tconst op = rawOperations[i];\n\t\t\tif (canReduceOperations && op._isTracked) {\n\t\t\t\tcanReduceOperations = false;\n\t\t\t}\n\t\t\tconst validatedRange = op.range;\n\t\t\tif (op.text) {\n\t\t\t\tlet textMightContainNonBasicASCII = true;\n\t\t\t\tif (!mightContainNonBasicASCII) {\n\t\t\t\t\ttextMightContainNonBasicASCII = !strings.isBasicASCII(op.text);\n\t\t\t\t\tmightContainNonBasicASCII = textMightContainNonBasicASCII;\n\t\t\t\t}\n\t\t\t\tif (!mightContainRTL && textMightContainNonBasicASCII) {\n\t\t\t\t\t// check if the new inserted text contains RTL\n\t\t\t\t\tmightContainRTL = strings.containsRTL(op.text);\n\t\t\t\t}\n\t\t\t\tif (!mightContainUnusualLineTerminators && textMightContainNonBasicASCII) {\n\t\t\t\t\t// check if the new inserted text contains unusual line terminators\n\t\t\t\t\tmightContainUnusualLineTerminators = strings.containsUnusualLineTerminators(op.text);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet validText = '';\n\t\t\tlet eolCount = 0;\n\t\t\tlet firstLineLength = 0;\n\t\t\tlet lastLineLength = 0;\n\t\t\tif (op.text) {\n\t\t\t\tlet strEOL: StringEOL;\n\t\t\t\t[eolCount, firstLineLength, lastLineLength, strEOL] = countEOL(op.text);\n\n\t\t\t\tconst bufferEOL = this.getEOL();\n\t\t\t\tconst expectedStrEOL = (bufferEOL === '\\r\\n' ? StringEOL.CRLF : StringEOL.LF);\n\t\t\t\tif (strEOL === StringEOL.Unknown || strEOL === expectedStrEOL) {\n\t\t\t\t\tvalidText = op.text;\n\t\t\t\t} else {\n\t\t\t\t\tvalidText = op.text.replace(/\\r\\n|\\r|\\n/g, bufferEOL);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toperations[i] = {\n\t\t\t\tsortIndex: i,\n\t\t\t\tidentifier: op.identifier || null,\n\t\t\t\trange: validatedRange,\n\t\t\t\trangeOffset: this.getOffsetAt(validatedRange.startLineNumber, validatedRange.startColumn),\n\t\t\t\trangeLength: this.getValueLengthInRange(validatedRange),\n\t\t\t\ttext: validText,\n\t\t\t\teolCount: eolCount,\n\t\t\t\tfirstLineLength: firstLineLength,\n\t\t\t\tlastLineLength: lastLineLength,\n\t\t\t\tforceMoveMarkers: Boolean(op.forceMoveMarkers),\n\t\t\t\tisAutoWhitespaceEdit: op.isAutoWhitespaceEdit || false\n\t\t\t};\n\t\t}\n\n\t\t// Sort operations ascending\n\t\toperations.sort(PieceTreeTextBuffer._sortOpsAscending);\n\n\t\tlet hasTouchingRanges = false;\n\t\tfor (let i = 0, count = operations.length - 1; i < count; i++) {\n\t\t\tconst rangeEnd = operations[i].range.getEndPosition();\n\t\t\tconst nextRangeStart = operations[i + 1].range.getStartPosition();\n\n\t\t\tif (nextRangeStart.isBeforeOrEqual(rangeEnd)) {\n\t\t\t\tif (nextRangeStart.isBefore(rangeEnd)) {\n\t\t\t\t\t// overlapping ranges\n\t\t\t\t\tthrow new Error('Overlapping ranges are not allowed!');\n\t\t\t\t}\n\t\t\t\thasTouchingRanges = true;\n\t\t\t}\n\t\t}\n\n\t\tif (canReduceOperations) {\n\t\t\toperations = this._reduceOperations(operations);\n\t\t}\n\n\t\t// Delta encode operations\n\t\tconst reverseRanges = (computeUndoEdits || recordTrimAutoWhitespace ? PieceTreeTextBuffer._getInverseEditRanges(operations) : []);\n\t\tconst newTrimAutoWhitespaceCandidates: { lineNumber: number; oldContent: string }[] = [];\n\t\tif (recordTrimAutoWhitespace) {\n\t\t\tfor (let i = 0; i < operations.length; i++) {\n\t\t\t\tconst op = operations[i];\n\t\t\t\tconst reverseRange = reverseRanges[i];\n\n\t\t\t\tif (op.isAutoWhitespaceEdit && op.range.isEmpty()) {\n\t\t\t\t\t// Record already the future line numbers that might be auto whitespace removal candidates on next edit\n\t\t\t\t\tfor (let lineNumber = reverseRange.startLineNumber; lineNumber <= reverseRange.endLineNumber; lineNumber++) {\n\t\t\t\t\t\tlet currentLineContent = '';\n\t\t\t\t\t\tif (lineNumber === reverseRange.startLineNumber) {\n\t\t\t\t\t\t\tcurrentLineContent = this.getLineContent(op.range.startLineNumber);\n\t\t\t\t\t\t\tif (strings.firstNonWhitespaceIndex(currentLineContent) !== -1) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewTrimAutoWhitespaceCandidates.push({ lineNumber: lineNumber, oldContent: currentLineContent });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet reverseOperations: IReverseSingleEditOperation[] | null = null;\n\t\tif (computeUndoEdits) {\n\n\t\t\tlet reverseRangeDeltaOffset = 0;\n\t\t\treverseOperations = [];\n\t\t\tfor (let i = 0; i < operations.length; i++) {\n\t\t\t\tconst op = operations[i];\n\t\t\t\tconst reverseRange = reverseRanges[i];\n\t\t\t\tconst bufferText = this.getValueInRange(op.range);\n\t\t\t\tconst reverseRangeOffset = op.rangeOffset + reverseRangeDeltaOffset;\n\t\t\t\treverseRangeDeltaOffset += (op.text.length - bufferText.length);\n\n\t\t\t\treverseOperations[i] = {\n\t\t\t\t\tsortIndex: op.sortIndex,\n\t\t\t\t\tidentifier: op.identifier,\n\t\t\t\t\trange: reverseRange,\n\t\t\t\t\ttext: bufferText,\n\t\t\t\t\ttextChange: new TextChange(op.rangeOffset, bufferText, reverseRangeOffset, op.text)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Can only sort reverse operations when the order is not significant\n\t\t\tif (!hasTouchingRanges) {\n\t\t\t\treverseOperations.sort((a, b) => a.sortIndex - b.sortIndex);\n\t\t\t}\n\t\t}\n\n\n\t\tthis._mightContainRTL = mightContainRTL;\n\t\tthis._mightContainUnusualLineTerminators = mightContainUnusualLineTerminators;\n\t\tthis._mightContainNonBasicASCII = mightContainNonBasicASCII;\n\n\t\tconst contentChanges = this._doApplyEdits(operations);\n\n\t\tlet trimAutoWhitespaceLineNumbers: number[] | null = null;\n\t\tif (recordTrimAutoWhitespace && newTrimAutoWhitespaceCandidates.length > 0) {\n\t\t\t// sort line numbers auto whitespace removal candidates for next edit descending\n\t\t\tnewTrimAutoWhitespaceCandidates.sort((a, b) => b.lineNumber - a.lineNumber);\n\n\t\t\ttrimAutoWhitespaceLineNumbers = [];\n\t\t\tfor (let i = 0, len = newTrimAutoWhitespaceCandidates.length; i < len; i++) {\n\t\t\t\tconst lineNumber = newTrimAutoWhitespaceCandidates[i].lineNumber;\n\t\t\t\tif (i > 0 && newTrimAutoWhitespaceCandidates[i - 1].lineNumber === lineNumber) {\n\t\t\t\t\t// Do not have the same line number twice\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst prevContent = newTrimAutoWhitespaceCandidates[i].oldContent;\n\t\t\t\tconst lineContent = this.getLineContent(lineNumber);\n\n\t\t\t\tif (lineContent.length === 0 || lineContent === prevContent || strings.firstNonWhitespaceIndex(lineContent) !== -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\ttrimAutoWhitespaceLineNumbers.push(lineNumber);\n\t\t\t}\n\t\t}\n\n\t\tthis._onDidChangeContent.fire();\n\n\t\treturn new ApplyEditsResult(\n\t\t\treverseOperations,\n\t\t\tcontentChanges,\n\t\t\ttrimAutoWhitespaceLineNumbers\n\t\t);\n\t}\n\n\t/**\n\t * Transform operations such that they represent the same logic edit,\n\t * but that they also do not cause OOM crashes.\n\t */\n\tprivate _reduceOperations(operations: IValidatedEditOperation[]): IValidatedEditOperation[] {\n\t\tif (operations.length < 1000) {\n\t\t\t// We know from empirical testing that a thousand edits work fine regardless of their shape.\n\t\t\treturn operations;\n\t\t}\n\n\t\t// At one point, due to how events are emitted and how each operation is handled,\n\t\t// some operations can trigger a high amount of temporary string allocations,\n\t\t// that will immediately get edited again.\n\t\t// e.g. a formatter inserting ridiculous ammounts of \\n on a model with a single line\n\t\t// Therefore, the strategy is to collapse all the operations into a huge single edit operation\n\t\treturn [this._toSingleEditOperation(operations)];\n\t}\n\n\t_toSingleEditOperation(operations: IValidatedEditOperation[]): IValidatedEditOperation {\n\t\tlet forceMoveMarkers = false;\n\t\tconst firstEditRange = operations[0].range;\n\t\tconst lastEditRange = operations[operations.length - 1].range;\n\t\tconst entireEditRange = new Range(firstEditRange.startLineNumber, firstEditRange.startColumn, lastEditRange.endLineNumber, lastEditRange.endColumn);\n\t\tlet lastEndLineNumber = firstEditRange.startLineNumber;\n\t\tlet lastEndColumn = firstEditRange.startColumn;\n\t\tconst result: string[] = [];\n\n\t\tfor (let i = 0, len = operations.length; i < len; i++) {\n\t\t\tconst operation = operations[i];\n\t\t\tconst range = operation.range;\n\n\t\t\tforceMoveMarkers = forceMoveMarkers || operation.forceMoveMarkers;\n\n\t\t\t// (1) -- Push old text\n\t\t\tresult.push(this.getValueInRange(new Range(lastEndLineNumber, lastEndColumn, range.startLineNumber, range.startColumn)));\n\n\t\t\t// (2) -- Push new text\n\t\t\tif (operation.text.length > 0) {\n\t\t\t\tresult.push(operation.text);\n\t\t\t}\n\n\t\t\tlastEndLineNumber = range.endLineNumber;\n\t\t\tlastEndColumn = range.endColumn;\n\t\t}\n\n\t\tconst text = result.join('');\n\t\tconst [eolCount, firstLineLength, lastLineLength] = countEOL(text);\n\n\t\treturn {\n\t\t\tsortIndex: 0,\n\t\t\tidentifier: operations[0].identifier,\n\t\t\trange: entireEditRange,\n\t\t\trangeOffset: this.getOffsetAt(entireEditRange.startLineNumber, entireEditRange.startColumn),\n\t\t\trangeLength: this.getValueLengthInRange(entireEditRange, EndOfLinePreference.TextDefined),\n\t\t\ttext: text,\n\t\t\teolCount: eolCount,\n\t\t\tfirstLineLength: firstLineLength,\n\t\t\tlastLineLength: lastLineLength,\n\t\t\tforceMoveMarkers: forceMoveMarkers,\n\t\t\tisAutoWhitespaceEdit: false\n\t\t};\n\t}\n\n\tprivate _doApplyEdits(operations: IValidatedEditOperation[]): IInternalModelContentChange[] {\n\t\toperations.sort(PieceTreeTextBuffer._sortOpsDescending);\n\n\t\tconst contentChanges: IInternalModelContentChange[] = [];\n\n\t\t// operations are from bottom to top\n\t\tfor (let i = 0; i < operations.length; i++) {\n\t\t\tconst op = operations[i];\n\n\t\t\tconst startLineNumber = op.range.startLineNumber;\n\t\t\tconst startColumn = op.range.startColumn;\n\t\t\tconst endLineNumber = op.range.endLineNumber;\n\t\t\tconst endColumn = op.range.endColumn;\n\n\t\t\tif (startLineNumber === endLineNumber && startColumn === endColumn && op.text.length === 0) {\n\t\t\t\t// no-op\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (op.text) {\n\t\t\t\t// replacement\n\t\t\t\tthis._pieceTree.delete(op.rangeOffset, op.rangeLength);\n\t\t\t\tthis._pieceTree.insert(op.rangeOffset, op.text, true);\n\n\t\t\t} else {\n\t\t\t\t// deletion\n\t\t\t\tthis._pieceTree.delete(op.rangeOffset, op.rangeLength);\n\t\t\t}\n\n\t\t\tconst contentChangeRange = new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t\t\tcontentChanges.push({\n\t\t\t\trange: contentChangeRange,\n\t\t\t\trangeLength: op.rangeLength,\n\t\t\t\ttext: op.text,\n\t\t\t\trangeOffset: op.rangeOffset,\n\t\t\t\tforceMoveMarkers: op.forceMoveMarkers\n\t\t\t});\n\t\t}\n\t\treturn contentChanges;\n\t}\n\n\tfindMatchesLineByLine(searchRange: Range, searchData: SearchData, captureMatches: boolean, limitResultCount: number): FindMatch[] {\n\t\treturn this._pieceTree.findMatchesLineByLine(searchRange, searchData, captureMatches, limitResultCount);\n\t}\n\n\t// #endregion\n\n\t// #region helper\n\t// testing purpose.\n\tpublic getPieceTree(): PieceTreeBase {\n\t\treturn this._pieceTree;\n\t}\n\n\tpublic static _getInverseEditRange(range: Range, text: string) {\n\t\tconst startLineNumber = range.startLineNumber;\n\t\tconst startColumn = range.startColumn;\n\t\tconst [eolCount, firstLineLength, lastLineLength] = countEOL(text);\n\t\tlet resultRange: Range;\n\n\t\tif (text.length > 0) {\n\t\t\t// the operation inserts something\n\t\t\tconst lineCount = eolCount + 1;\n\n\t\t\tif (lineCount === 1) {\n\t\t\t\t// single line insert\n\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn + firstLineLength);\n\t\t\t} else {\n\t\t\t\t// multi line insert\n\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber + lineCount - 1, lastLineLength + 1);\n\t\t\t}\n\t\t} else {\n\t\t\t// There is nothing to insert\n\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn);\n\t\t}\n\n\t\treturn resultRange;\n\t}\n\n\t/**\n\t * Assumes `operations` are validated and sorted ascending\n\t */\n\tpublic static _getInverseEditRanges(operations: IValidatedEditOperation[]): Range[] {\n\t\tconst result: Range[] = [];\n\n\t\tlet prevOpEndLineNumber: number = 0;\n\t\tlet prevOpEndColumn: number = 0;\n\t\tlet prevOp: IValidatedEditOperation | null = null;\n\t\tfor (let i = 0, len = operations.length; i < len; i++) {\n\t\t\tconst op = operations[i];\n\n\t\t\tlet startLineNumber: number;\n\t\t\tlet startColumn: number;\n\n\t\t\tif (prevOp) {\n\t\t\t\tif (prevOp.range.endLineNumber === op.range.startLineNumber) {\n\t\t\t\t\tstartLineNumber = prevOpEndLineNumber;\n\t\t\t\t\tstartColumn = prevOpEndColumn + (op.range.startColumn - prevOp.range.endColumn);\n\t\t\t\t} else {\n\t\t\t\t\tstartLineNumber = prevOpEndLineNumber + (op.range.startLineNumber - prevOp.range.endLineNumber);\n\t\t\t\t\tstartColumn = op.range.startColumn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstartLineNumber = op.range.startLineNumber;\n\t\t\t\tstartColumn = op.range.startColumn;\n\t\t\t}\n\n\t\t\tlet resultRange: Range;\n\n\t\t\tif (op.text.length > 0) {\n\t\t\t\t// the operation inserts something\n\t\t\t\tconst lineCount = op.eolCount + 1;\n\n\t\t\t\tif (lineCount === 1) {\n\t\t\t\t\t// single line insert\n\t\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn + op.firstLineLength);\n\t\t\t\t} else {\n\t\t\t\t\t// multi line insert\n\t\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber + lineCount - 1, op.lastLineLength + 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// There is nothing to insert\n\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn);\n\t\t\t}\n\n\t\t\tprevOpEndLineNumber = resultRange.endLineNumber;\n\t\t\tprevOpEndColumn = resultRange.endColumn;\n\n\t\t\tresult.push(resultRange);\n\t\t\tprevOp = op;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate static _sortOpsAscending(a: IValidatedEditOperation, b: IValidatedEditOperation): number {\n\t\tconst r = Range.compareRangesUsingEnds(a.range, b.range);\n\t\tif (r === 0) {\n\t\t\treturn a.sortIndex - b.sortIndex;\n\t\t}\n\t\treturn r;\n\t}\n\n\tprivate static _sortOpsDescending(a: IValidatedEditOperation, b: IValidatedEditOperation): number {\n\t\tconst r = Range.compareRangesUsingEnds(a.range, b.range);\n\t\tif (r === 0) {\n\t\t\treturn b.sortIndex - a.sortIndex;\n\t\t}\n\t\treturn -r;\n\t}\n\t// #endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport * as strings from 'vs/base/common/strings';\nimport { DefaultEndOfLine, ITextBuffer, ITextBufferBuilder, ITextBufferFactory } from 'vs/editor/common/model';\nimport { StringBuffer, createLineStarts, createLineStartsFast } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeBase';\nimport { PieceTreeTextBuffer } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBuffer';\n\nclass PieceTreeTextBufferFactory implements ITextBufferFactory {\n\n\tconstructor(\n\t\tprivate readonly _chunks: StringBuffer[],\n\t\tprivate readonly _bom: string,\n\t\tprivate readonly _cr: number,\n\t\tprivate readonly _lf: number,\n\t\tprivate readonly _crlf: number,\n\t\tprivate readonly _containsRTL: boolean,\n\t\tprivate readonly _containsUnusualLineTerminators: boolean,\n\t\tprivate readonly _isBasicASCII: boolean,\n\t\tprivate readonly _normalizeEOL: boolean\n\t) { }\n\n\tprivate _getEOL(defaultEOL: DefaultEndOfLine): '\\r\\n' | '\\n' {\n\t\tconst totalEOLCount = this._cr + this._lf + this._crlf;\n\t\tconst totalCRCount = this._cr + this._crlf;\n\t\tif (totalEOLCount === 0) {\n\t\t\t// This is an empty file or a file with precisely one line\n\t\t\treturn (defaultEOL === DefaultEndOfLine.LF ? '\\n' : '\\r\\n');\n\t\t}\n\t\tif (totalCRCount > totalEOLCount / 2) {\n\t\t\t// More than half of the file contains \\r\\n ending lines\n\t\t\treturn '\\r\\n';\n\t\t}\n\t\t// At least one line more ends in \\n\n\t\treturn '\\n';\n\t}\n\n\tpublic create(defaultEOL: DefaultEndOfLine): { textBuffer: ITextBuffer; disposable: IDisposable } {\n\t\tconst eol = this._getEOL(defaultEOL);\n\t\tconst chunks = this._chunks;\n\n\t\tif (this._normalizeEOL &&\n\t\t\t((eol === '\\r\\n' && (this._cr > 0 || this._lf > 0))\n\t\t\t\t|| (eol === '\\n' && (this._cr > 0 || this._crlf > 0)))\n\t\t) {\n\t\t\t// Normalize pieces\n\t\t\tfor (let i = 0, len = chunks.length; i < len; i++) {\n\t\t\t\tconst str = chunks[i].buffer.replace(/\\r\\n|\\r|\\n/g, eol);\n\t\t\t\tconst newLineStart = createLineStartsFast(str);\n\t\t\t\tchunks[i] = new StringBuffer(str, newLineStart);\n\t\t\t}\n\t\t}\n\n\t\tconst textBuffer = new PieceTreeTextBuffer(chunks, this._bom, eol, this._containsRTL, this._containsUnusualLineTerminators, this._isBasicASCII, this._normalizeEOL);\n\t\treturn { textBuffer: textBuffer, disposable: textBuffer };\n\t}\n\n\tpublic getFirstLineText(lengthLimit: number): string {\n\t\treturn this._chunks[0].buffer.substr(0, lengthLimit).split(/\\r\\n|\\r|\\n/)[0];\n\t}\n}\n\nexport class PieceTreeTextBufferBuilder implements ITextBufferBuilder {\n\tprivate readonly chunks: StringBuffer[];\n\tprivate BOM: string;\n\n\tprivate _hasPreviousChar: boolean;\n\tprivate _previousChar: number;\n\tprivate readonly _tmpLineStarts: number[];\n\n\tprivate cr: number;\n\tprivate lf: number;\n\tprivate crlf: number;\n\tprivate containsRTL: boolean;\n\tprivate containsUnusualLineTerminators: boolean;\n\tprivate isBasicASCII: boolean;\n\n\tconstructor() {\n\t\tthis.chunks = [];\n\t\tthis.BOM = '';\n\n\t\tthis._hasPreviousChar = false;\n\t\tthis._previousChar = 0;\n\t\tthis._tmpLineStarts = [];\n\n\t\tthis.cr = 0;\n\t\tthis.lf = 0;\n\t\tthis.crlf = 0;\n\t\tthis.containsRTL = false;\n\t\tthis.containsUnusualLineTerminators = false;\n\t\tthis.isBasicASCII = true;\n\t}\n\n\tpublic acceptChunk(chunk: string): void {\n\t\tif (chunk.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.chunks.length === 0) {\n\t\t\tif (strings.startsWithUTF8BOM(chunk)) {\n\t\t\t\tthis.BOM = strings.UTF8_BOM_CHARACTER;\n\t\t\t\tchunk = chunk.substr(1);\n\t\t\t}\n\t\t}\n\n\t\tconst lastChar = chunk.charCodeAt(chunk.length - 1);\n\t\tif (lastChar === CharCode.CarriageReturn || (lastChar >= 0xD800 && lastChar <= 0xDBFF)) {\n\t\t\t// last character is \\r or a high surrogate => keep it back\n\t\t\tthis._acceptChunk1(chunk.substr(0, chunk.length - 1), false);\n\t\t\tthis._hasPreviousChar = true;\n\t\t\tthis._previousChar = lastChar;\n\t\t} else {\n\t\t\tthis._acceptChunk1(chunk, false);\n\t\t\tthis._hasPreviousChar = false;\n\t\t\tthis._previousChar = lastChar;\n\t\t}\n\t}\n\n\tprivate _acceptChunk1(chunk: string, allowEmptyStrings: boolean): void {\n\t\tif (!allowEmptyStrings && chunk.length === 0) {\n\t\t\t// Nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._hasPreviousChar) {\n\t\t\tthis._acceptChunk2(String.fromCharCode(this._previousChar) + chunk);\n\t\t} else {\n\t\t\tthis._acceptChunk2(chunk);\n\t\t}\n\t}\n\n\tprivate _acceptChunk2(chunk: string): void {\n\t\tconst lineStarts = createLineStarts(this._tmpLineStarts, chunk);\n\n\t\tthis.chunks.push(new StringBuffer(chunk, lineStarts.lineStarts));\n\t\tthis.cr += lineStarts.cr;\n\t\tthis.lf += lineStarts.lf;\n\t\tthis.crlf += lineStarts.crlf;\n\n\t\tif (!lineStarts.isBasicASCII) {\n\t\t\t// this chunk contains non basic ASCII characters\n\t\t\tthis.isBasicASCII = false;\n\t\t\tif (!this.containsRTL) {\n\t\t\t\tthis.containsRTL = strings.containsRTL(chunk);\n\t\t\t}\n\t\t\tif (!this.containsUnusualLineTerminators) {\n\t\t\t\tthis.containsUnusualLineTerminators = strings.containsUnusualLineTerminators(chunk);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic finish(normalizeEOL: boolean = true): PieceTreeTextBufferFactory {\n\t\tthis._finish();\n\t\treturn new PieceTreeTextBufferFactory(\n\t\t\tthis.chunks,\n\t\t\tthis.BOM,\n\t\t\tthis.cr,\n\t\t\tthis.lf,\n\t\t\tthis.crlf,\n\t\t\tthis.containsRTL,\n\t\t\tthis.containsUnusualLineTerminators,\n\t\t\tthis.isBasicASCII,\n\t\t\tnormalizeEOL\n\t\t);\n\t}\n\n\tprivate _finish(): void {\n\t\tif (this.chunks.length === 0) {\n\t\t\tthis._acceptChunk1('', true);\n\t\t}\n\n\t\tif (this._hasPreviousChar) {\n\t\t\tthis._hasPreviousChar = false;\n\t\t\t// recreate last chunk\n\t\t\tconst lastChunk = this.chunks[this.chunks.length - 1];\n\t\t\tlastChunk.buffer += String.fromCharCode(this._previousChar);\n\t\t\tconst newLineStarts = createLineStartsFast(lastChunk.buffer);\n\t\t\tlastChunk.lineStarts = newLineStarts;\n\t\t\tif (this._previousChar === CharCode.CarriageReturn) {\n\t\t\t\tthis.cr++;\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { illegalState } from 'vs/base/common/errors';\nimport { localize } from 'vs/nls';\n\nexport const enum TokenType {\n\tLParen,\n\tRParen,\n\tNeg,\n\tEq,\n\tNotEq,\n\tLt,\n\tLtEq,\n\tGt,\n\tGtEq,\n\tRegexOp,\n\tRegexStr,\n\tTrue,\n\tFalse,\n\tIn,\n\tNot,\n\tAnd,\n\tOr,\n\tStr,\n\tQuotedStr,\n\tError,\n\tEOF,\n}\n\nexport type Token =\n\t| { type: TokenType.LParen; offset: number }\n\t| { type: TokenType.RParen; offset: number }\n\t| { type: TokenType.Neg; offset: number }\n\t| { type: TokenType.Eq; offset: number; isTripleEq: boolean }\n\t| { type: TokenType.NotEq; offset: number; isTripleEq: boolean }\n\t| { type: TokenType.Lt; offset: number }\n\t| { type: TokenType.LtEq; offset: number }\n\t| { type: TokenType.Gt; offset: number }\n\t| { type: TokenType.GtEq; offset: number }\n\t| { type: TokenType.RegexOp; offset: number }\n\t| { type: TokenType.RegexStr; offset: number; lexeme: string }\n\t| { type: TokenType.True; offset: number }\n\t| { type: TokenType.False; offset: number }\n\t| { type: TokenType.In; offset: number }\n\t| { type: TokenType.Not; offset: number }\n\t| { type: TokenType.And; offset: number }\n\t| { type: TokenType.Or; offset: number }\n\t| { type: TokenType.Str; offset: number; lexeme: string }\n\t| { type: TokenType.QuotedStr; offset: number; lexeme: string }\n\t| { type: TokenType.Error; offset: number; lexeme: string }\n\t| { type: TokenType.EOF; offset: number };\n\ntype KeywordTokenType = TokenType.Not | TokenType.In | TokenType.False | TokenType.True;\ntype TokenTypeWithoutLexeme =\n\tTokenType.LParen |\n\tTokenType.RParen |\n\tTokenType.Neg |\n\tTokenType.Lt |\n\tTokenType.LtEq |\n\tTokenType.Gt |\n\tTokenType.GtEq |\n\tTokenType.RegexOp |\n\tTokenType.True |\n\tTokenType.False |\n\tTokenType.In |\n\tTokenType.Not |\n\tTokenType.And |\n\tTokenType.Or |\n\tTokenType.EOF;\n\n/**\n * Example:\n * `foo == bar'` - note how single quote doesn't have a corresponding closing quote,\n * so it's reported as unexpected\n */\nexport type LexingError = {\n\toffset: number; /** note that this doesn't take into account escape characters from the original encoding of the string, e.g., within an extension manifest file's JSON encoding  */\n\tlexeme: string;\n\tadditionalInfo?: string;\n};\n\nfunction hintDidYouMean(...meant: string[]) {\n\tswitch (meant.length) {\n\t\tcase 1:\n\t\t\treturn localize('contextkey.scanner.hint.didYouMean1', \"Did you mean {0}?\", meant[0]);\n\t\tcase 2:\n\t\t\treturn localize('contextkey.scanner.hint.didYouMean2', \"Did you mean {0} or {1}?\", meant[0], meant[1]);\n\t\tcase 3:\n\t\t\treturn localize('contextkey.scanner.hint.didYouMean3', \"Did you mean {0}, {1} or {2}?\", meant[0], meant[1], meant[2]);\n\t\tdefault: // we just don't expect that many\n\t\t\treturn undefined;\n\t}\n}\n\nconst hintDidYouForgetToOpenOrCloseQuote = localize('contextkey.scanner.hint.didYouForgetToOpenOrCloseQuote', \"Did you forget to open or close the quote?\");\nconst hintDidYouForgetToEscapeSlash = localize('contextkey.scanner.hint.didYouForgetToEscapeSlash', \"Did you forget to escape the '/' (slash) character? Put two backslashes before it to escape, e.g., '\\\\\\\\/\\'.\");\n\n/**\n * A simple scanner for context keys.\n *\n * Example:\n *\n * ```ts\n * const scanner = new Scanner().reset('resourceFileName =~ /docker/ && !config.docker.enabled');\n * const tokens = [...scanner];\n * if (scanner.errorTokens.length > 0) {\n *     scanner.errorTokens.forEach(err => console.error(`Unexpected token at ${err.offset}: ${err.lexeme}\\nHint: ${err.additional}`));\n * } else {\n *     // process tokens\n * }\n * ```\n */\nexport class Scanner {\n\n\tstatic getLexeme(token: Token): string {\n\t\tswitch (token.type) {\n\t\t\tcase TokenType.LParen:\n\t\t\t\treturn '(';\n\t\t\tcase TokenType.RParen:\n\t\t\t\treturn ')';\n\t\t\tcase TokenType.Neg:\n\t\t\t\treturn '!';\n\t\t\tcase TokenType.Eq:\n\t\t\t\treturn token.isTripleEq ? '===' : '==';\n\t\t\tcase TokenType.NotEq:\n\t\t\t\treturn token.isTripleEq ? '!==' : '!=';\n\t\t\tcase TokenType.Lt:\n\t\t\t\treturn '<';\n\t\t\tcase TokenType.LtEq:\n\t\t\t\treturn '<=';\n\t\t\tcase TokenType.Gt:\n\t\t\t\treturn '>=';\n\t\t\tcase TokenType.GtEq:\n\t\t\t\treturn '>=';\n\t\t\tcase TokenType.RegexOp:\n\t\t\t\treturn '=~';\n\t\t\tcase TokenType.RegexStr:\n\t\t\t\treturn token.lexeme;\n\t\t\tcase TokenType.True:\n\t\t\t\treturn 'true';\n\t\t\tcase TokenType.False:\n\t\t\t\treturn 'false';\n\t\t\tcase TokenType.In:\n\t\t\t\treturn 'in';\n\t\t\tcase TokenType.Not:\n\t\t\t\treturn 'not';\n\t\t\tcase TokenType.And:\n\t\t\t\treturn '&&';\n\t\t\tcase TokenType.Or:\n\t\t\t\treturn '||';\n\t\t\tcase TokenType.Str:\n\t\t\t\treturn token.lexeme;\n\t\t\tcase TokenType.QuotedStr:\n\t\t\t\treturn token.lexeme;\n\t\t\tcase TokenType.Error:\n\t\t\t\treturn token.lexeme;\n\t\t\tcase TokenType.EOF:\n\t\t\t\treturn 'EOF';\n\t\t\tdefault:\n\t\t\t\tthrow illegalState(`unhandled token type: ${JSON.stringify(token)}; have you forgotten to add a case?`);\n\t\t}\n\t}\n\n\tprivate static _regexFlags = new Set(['i', 'g', 's', 'm', 'y', 'u'].map(ch => ch.charCodeAt(0)));\n\n\tprivate static _keywords = new Map<string, KeywordTokenType>([\n\t\t['not', TokenType.Not],\n\t\t['in', TokenType.In],\n\t\t['false', TokenType.False],\n\t\t['true', TokenType.True],\n\t]);\n\n\tprivate _input: string = '';\n\tprivate _start: number = 0;\n\tprivate _current: number = 0;\n\tprivate _tokens: Token[] = [];\n\tprivate _errors: LexingError[] = [];\n\n\tget errors(): Readonly<LexingError[]> {\n\t\treturn this._errors;\n\t}\n\n\treset(value: string) {\n\t\tthis._input = value;\n\n\t\tthis._start = 0;\n\t\tthis._current = 0;\n\t\tthis._tokens = [];\n\t\tthis._errors = [];\n\n\t\treturn this;\n\t}\n\n\tscan() {\n\t\twhile (!this._isAtEnd()) {\n\n\t\t\tthis._start = this._current;\n\n\t\t\tconst ch = this._advance();\n\t\t\tswitch (ch) {\n\t\t\t\tcase CharCode.OpenParen: this._addToken(TokenType.LParen); break;\n\t\t\t\tcase CharCode.CloseParen: this._addToken(TokenType.RParen); break;\n\n\t\t\t\tcase CharCode.ExclamationMark:\n\t\t\t\t\tif (this._match(CharCode.Equals)) {\n\t\t\t\t\t\tconst isTripleEq = this._match(CharCode.Equals); // eat last `=` if `!==`\n\t\t\t\t\t\tthis._tokens.push({ type: TokenType.NotEq, offset: this._start, isTripleEq });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._addToken(TokenType.Neg);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CharCode.SingleQuote: this._quotedString(); break;\n\t\t\t\tcase CharCode.Slash: this._regex(); break;\n\n\t\t\t\tcase CharCode.Equals:\n\t\t\t\t\tif (this._match(CharCode.Equals)) { // support `==`\n\t\t\t\t\t\tconst isTripleEq = this._match(CharCode.Equals); // eat last `=` if `===`\n\t\t\t\t\t\tthis._tokens.push({ type: TokenType.Eq, offset: this._start, isTripleEq });\n\t\t\t\t\t} else if (this._match(CharCode.Tilde)) {\n\t\t\t\t\t\tthis._addToken(TokenType.RegexOp);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._error(hintDidYouMean('==', '=~'));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CharCode.LessThan: this._addToken(this._match(CharCode.Equals) ? TokenType.LtEq : TokenType.Lt); break;\n\n\t\t\t\tcase CharCode.GreaterThan: this._addToken(this._match(CharCode.Equals) ? TokenType.GtEq : TokenType.Gt); break;\n\n\t\t\t\tcase CharCode.Ampersand:\n\t\t\t\t\tif (this._match(CharCode.Ampersand)) {\n\t\t\t\t\t\tthis._addToken(TokenType.And);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._error(hintDidYouMean('&&'));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CharCode.Pipe:\n\t\t\t\t\tif (this._match(CharCode.Pipe)) {\n\t\t\t\t\t\tthis._addToken(TokenType.Or);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._error(hintDidYouMean('||'));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO@ulugbekna: 1) rewrite using a regex 2) reconsider what characters are considered whitespace, including unicode, nbsp, etc.\n\t\t\t\tcase CharCode.Space:\n\t\t\t\tcase CharCode.CarriageReturn:\n\t\t\t\tcase CharCode.Tab:\n\t\t\t\tcase CharCode.LineFeed:\n\t\t\t\tcase CharCode.NoBreakSpace: // &nbsp\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis._string();\n\t\t\t}\n\t\t}\n\n\t\tthis._start = this._current;\n\t\tthis._addToken(TokenType.EOF);\n\n\t\treturn Array.from(this._tokens);\n\t}\n\n\tprivate _match(expected: number): boolean {\n\t\tif (this._isAtEnd()) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._input.charCodeAt(this._current) !== expected) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._current++;\n\t\treturn true;\n\t}\n\n\tprivate _advance(): number {\n\t\treturn this._input.charCodeAt(this._current++);\n\t}\n\n\tprivate _peek(): number {\n\t\treturn this._isAtEnd() ? CharCode.Null : this._input.charCodeAt(this._current);\n\t}\n\n\tprivate _addToken(type: TokenTypeWithoutLexeme) {\n\t\tthis._tokens.push({ type, offset: this._start });\n\t}\n\n\tprivate _error(additional?: string) {\n\t\tconst offset = this._start;\n\t\tconst lexeme = this._input.substring(this._start, this._current);\n\t\tconst errToken: Token = { type: TokenType.Error, offset: this._start, lexeme };\n\t\tthis._errors.push({ offset, lexeme, additionalInfo: additional });\n\t\tthis._tokens.push(errToken);\n\t}\n\n\t// u - unicode, y - sticky // TODO@ulugbekna: we accept double quotes as part of the string rather than as a delimiter (to preserve old parser's behavior)\n\tprivate stringRe = /[a-zA-Z0-9_<>\\-\\./\\\\:\\*\\?\\+\\[\\]\\^,#@;\"%\\$\\p{L}-]+/uy;\n\tprivate _string() {\n\t\tthis.stringRe.lastIndex = this._start;\n\t\tconst match = this.stringRe.exec(this._input);\n\t\tif (match) {\n\t\t\tthis._current = this._start + match[0].length;\n\t\t\tconst lexeme = this._input.substring(this._start, this._current);\n\t\t\tconst keyword = Scanner._keywords.get(lexeme);\n\t\t\tif (keyword) {\n\t\t\t\tthis._addToken(keyword);\n\t\t\t} else {\n\t\t\t\tthis._tokens.push({ type: TokenType.Str, lexeme, offset: this._start });\n\t\t\t}\n\t\t}\n\t}\n\n\t// captures the lexeme without the leading and trailing '\n\tprivate _quotedString() {\n\t\twhile (this._peek() !== CharCode.SingleQuote && !this._isAtEnd()) { // TODO@ulugbekna: add support for escaping ' ?\n\t\t\tthis._advance();\n\t\t}\n\n\t\tif (this._isAtEnd()) {\n\t\t\tthis._error(hintDidYouForgetToOpenOrCloseQuote);\n\t\t\treturn;\n\t\t}\n\n\t\t// consume the closing '\n\t\tthis._advance();\n\n\t\tthis._tokens.push({ type: TokenType.QuotedStr, lexeme: this._input.substring(this._start + 1, this._current - 1), offset: this._start + 1 });\n\t}\n\n\t/*\n\t * Lexing a regex expression: /.../[igsmyu]*\n\t * Based on https://github.com/microsoft/TypeScript/blob/9247ef115e617805983740ba795d7a8164babf89/src/compiler/scanner.ts#L2129-L2181\n\t *\n\t * Note that we want slashes within a regex to be escaped, e.g., /file:\\\\/\\\\/\\\\// should match `file:///`\n\t */\n\tprivate _regex() {\n\t\tlet p = this._current;\n\n\t\tlet inEscape = false;\n\t\tlet inCharacterClass = false;\n\t\twhile (true) {\n\t\t\tif (p >= this._input.length) {\n\t\t\t\tthis._current = p;\n\t\t\t\tthis._error(hintDidYouForgetToEscapeSlash);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst ch = this._input.charCodeAt(p);\n\n\t\t\tif (inEscape) { // parsing an escape character\n\t\t\t\tinEscape = false;\n\t\t\t} else if (ch === CharCode.Slash && !inCharacterClass) { // end of regex\n\t\t\t\tp++;\n\t\t\t\tbreak;\n\t\t\t} else if (ch === CharCode.OpenSquareBracket) {\n\t\t\t\tinCharacterClass = true;\n\t\t\t} else if (ch === CharCode.Backslash) {\n\t\t\t\tinEscape = true;\n\t\t\t} else if (ch === CharCode.CloseSquareBracket) {\n\t\t\t\tinCharacterClass = false;\n\t\t\t}\n\t\t\tp++;\n\t\t}\n\n\t\t// Consume flags // TODO@ulugbekna: use regex instead\n\t\twhile (p < this._input.length && Scanner._regexFlags.has(this._input.charCodeAt(p))) {\n\t\t\tp++;\n\t\t}\n\n\t\tthis._current = p;\n\n\t\tconst lexeme = this._input.substring(this._start, this._current);\n\t\tthis._tokens.push({ type: TokenType.RegexStr, lexeme, offset: this._start });\n\t}\n\n\tprivate _isAtEnd() {\n\t\treturn this._current >= this._input.length;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class SyncDescriptor<T> {\n\n\treadonly ctor: any;\n\treadonly staticArguments: any[];\n\treadonly supportsDelayedInstantiation: boolean;\n\n\tconstructor(ctor: new (...args: any[]) => T, staticArguments: any[] = [], supportsDelayedInstantiation: boolean = false) {\n\t\tthis.ctor = ctor;\n\t\tthis.staticArguments = staticArguments;\n\t\tthis.supportsDelayedInstantiation = supportsDelayedInstantiation;\n\t}\n}\n\nexport interface SyncDescriptor0<T> {\n\treadonly ctor: new () => T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SyncDescriptor } from './descriptors';\nimport { BrandedService, ServiceIdentifier } from './instantiation';\n\nconst _registry: [ServiceIdentifier<any>, SyncDescriptor<any>][] = [];\n\nexport const enum InstantiationType {\n\t/**\n\t * Instantiate this service as soon as a consumer depends on it. _Note_ that this\n\t * is more costly as some upfront work is done that is likely not needed\n\t */\n\tEager = 0,\n\n\t/**\n\t * Instantiate this service as soon as a consumer uses it. This is the _better_\n\t * way of registering a service.\n\t */\n\tDelayed = 1\n}\n\nexport function registerSingleton<T, Services extends BrandedService[]>(id: ServiceIdentifier<T>, ctor: new (...services: Services) => T, supportsDelayedInstantiation: InstantiationType): void;\nexport function registerSingleton<T, Services extends BrandedService[]>(id: ServiceIdentifier<T>, descriptor: SyncDescriptor<any>): void;\nexport function registerSingleton<T, Services extends BrandedService[]>(id: ServiceIdentifier<T>, ctorOrDescriptor: { new(...services: Services): T } | SyncDescriptor<any>, supportsDelayedInstantiation?: boolean | InstantiationType): void {\n\tif (!(ctorOrDescriptor instanceof SyncDescriptor)) {\n\t\tctorOrDescriptor = new SyncDescriptor<T>(ctorOrDescriptor as new (...args: any[]) => T, [], Boolean(supportsDelayedInstantiation));\n\t}\n\n\t_registry.push([id, ctorOrDescriptor]);\n}\n\nexport function getSingletonServiceDescriptors(): [ServiceIdentifier<any>, SyncDescriptor<any>][] {\n\treturn _registry;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as descriptors from './descriptors';\nimport { ServiceCollection } from './serviceCollection';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>; index: number }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature<T, Args extends any[] = []> {\n\tnew <Services extends BrandedService[]>(...args: [...Args, ...Services]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\nexport type GetLeadingNonServiceArgs<TArgs extends any[]> =\n\tTArgs extends [] ? []\n\t: TArgs extends [...infer TFirst, BrandedService] ? GetLeadingNonServiceArgs<TFirst>\n\t: TArgs;\n\nexport interface IInstantiationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(ctor: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\n\t/**\n\t * Calls a function with a service accessor.\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherits all current services\n\t * and adds/overwrites the given services.\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n\n\t/**\n\t * Disposes this instantiation service.\n\t *\n\t * - Will dispose all services that this instantiation service has created.\n\t * - Will dispose all its children but not its parent.\n\t * - Will NOT dispose services-instances that this service has been created with\n\t * - Will NOT dispose consumer-instances this service has created\n\t */\n\tdispose(): void;\n}\n\n\n/**\n * Identifies a service of type `T`.\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\nexport function refineServiceDecorator<T1, T extends T1>(serviceIdentifier: ServiceIdentifier<T1>): ServiceIdentifier<T> {\n\treturn <ServiceIdentifier<T>>serviceIdentifier;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Event } from 'vs/base/common/event';\nimport { isChrome, isEdge, isFirefox, isLinux, isMacintosh, isSafari, isWeb, isWindows } from 'vs/base/common/platform';\nimport { isFalsyOrWhitespace } from 'vs/base/common/strings';\nimport { Scanner, LexingError, Token, TokenType } from 'vs/platform/contextkey/common/scanner';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { localize } from 'vs/nls';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { illegalArgument } from 'vs/base/common/errors';\n\nconst CONSTANT_VALUES = new Map<string, boolean>();\nCONSTANT_VALUES.set('false', false);\nCONSTANT_VALUES.set('true', true);\nCONSTANT_VALUES.set('isMac', isMacintosh);\nCONSTANT_VALUES.set('isLinux', isLinux);\nCONSTANT_VALUES.set('isWindows', isWindows);\nCONSTANT_VALUES.set('isWeb', isWeb);\nCONSTANT_VALUES.set('isMacNative', isMacintosh && !isWeb);\nCONSTANT_VALUES.set('isEdge', isEdge);\nCONSTANT_VALUES.set('isFirefox', isFirefox);\nCONSTANT_VALUES.set('isChrome', isChrome);\nCONSTANT_VALUES.set('isSafari', isSafari);\n\n/** allow register constant context keys that are known only after startup; requires running `substituteConstants` on the context key - https://github.com/microsoft/vscode/issues/174218#issuecomment-1437972127 */\nexport function setConstant(key: string, value: boolean) {\n\tif (CONSTANT_VALUES.get(key) !== undefined) { throw illegalArgument('contextkey.setConstant(k, v) invoked with already set constant `k`'); }\n\n\tCONSTANT_VALUES.set(key, value);\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport const enum ContextKeyExprType {\n\tFalse = 0,\n\tTrue = 1,\n\tDefined = 2,\n\tNot = 3,\n\tEquals = 4,\n\tNotEquals = 5,\n\tAnd = 6,\n\tRegex = 7,\n\tNotRegex = 8,\n\tOr = 9,\n\tIn = 10,\n\tNotIn = 11,\n\tGreater = 12,\n\tGreaterEquals = 13,\n\tSmaller = 14,\n\tSmallerEquals = 15,\n}\n\nexport interface IContextKeyExprMapper {\n\tmapDefined(key: string): ContextKeyExpression;\n\tmapNot(key: string): ContextKeyExpression;\n\tmapEquals(key: string, value: any): ContextKeyExpression;\n\tmapNotEquals(key: string, value: any): ContextKeyExpression;\n\tmapGreater(key: string, value: any): ContextKeyExpression;\n\tmapGreaterEquals(key: string, value: any): ContextKeyExpression;\n\tmapSmaller(key: string, value: any): ContextKeyExpression;\n\tmapSmallerEquals(key: string, value: any): ContextKeyExpression;\n\tmapRegex(key: string, regexp: RegExp | null): ContextKeyRegexExpr;\n\tmapIn(key: string, valueKey: string): ContextKeyInExpr;\n\tmapNotIn(key: string, valueKey: string): ContextKeyNotInExpr;\n}\n\nexport interface IContextKeyExpression {\n\tcmp(other: ContextKeyExpression): number;\n\tequals(other: ContextKeyExpression): boolean;\n\tsubstituteConstants(): ContextKeyExpression | undefined;\n\tevaluate(context: IContext): boolean;\n\tserialize(): string;\n\tkeys(): string[];\n\tmap(mapFnc: IContextKeyExprMapper): ContextKeyExpression;\n\tnegate(): ContextKeyExpression;\n\n}\n\nexport type ContextKeyExpression = (\n\tContextKeyFalseExpr | ContextKeyTrueExpr | ContextKeyDefinedExpr | ContextKeyNotExpr\n\t| ContextKeyEqualsExpr | ContextKeyNotEqualsExpr | ContextKeyRegexExpr\n\t| ContextKeyNotRegexExpr | ContextKeyAndExpr | ContextKeyOrExpr | ContextKeyInExpr\n\t| ContextKeyNotInExpr | ContextKeyGreaterExpr | ContextKeyGreaterEqualsExpr\n\t| ContextKeySmallerExpr | ContextKeySmallerEqualsExpr\n);\n\n\n/*\n\nSyntax grammar:\n\n```ebnf\n\nexpression ::= or\n\nor ::= and { '||' and }*\n\nand ::= term { '&&' term }*\n\nterm ::=\n\t| '!' (KEY | true | false | parenthesized)\n\t| primary\n\nprimary ::=\n\t| 'true'\n\t| 'false'\n\t| parenthesized\n\t| KEY '=~' REGEX\n\t| KEY [ ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'not' 'in' | 'in') value ]\n\nparenthesized ::=\n\t| '(' expression ')'\n\nvalue ::=\n\t| 'true'\n\t| 'false'\n\t| 'in'      \t// we support `in` as a value because there's an extension that uses it, ie \"when\": \"languageId == in\"\n\t| VALUE \t\t// matched by the same regex as KEY; consider putting the value in single quotes if it's a string (e.g., with spaces)\n\t| SINGLE_QUOTED_STR\n\t| EMPTY_STR  \t// this allows \"when\": \"foo == \" which's used by existing extensions\n\n```\n*/\n\nexport type ParserConfig = {\n\t/**\n\t * with this option enabled, the parser can recover from regex parsing errors, e.g., unescaped slashes: `/src//` is accepted as `/src\\//` would be\n\t */\n\tregexParsingWithErrorRecovery: boolean;\n};\n\nconst defaultConfig: ParserConfig = {\n\tregexParsingWithErrorRecovery: true\n};\n\nexport type ParsingError = {\n\tmessage: string;\n\toffset: number;\n\tlexeme: string;\n\tadditionalInfo?: string;\n};\n\nconst errorEmptyString = localize('contextkey.parser.error.emptyString', \"Empty context key expression\");\nconst hintEmptyString = localize('contextkey.parser.error.emptyString.hint', \"Did you forget to write an expression? You can also put 'false' or 'true' to always evaluate to false or true, respectively.\");\nconst errorNoInAfterNot = localize('contextkey.parser.error.noInAfterNot', \"'in' after 'not'.\");\nconst errorClosingParenthesis = localize('contextkey.parser.error.closingParenthesis', \"closing parenthesis ')'\");\nconst errorUnexpectedToken = localize('contextkey.parser.error.unexpectedToken', \"Unexpected token\");\nconst hintUnexpectedToken = localize('contextkey.parser.error.unexpectedToken.hint', \"Did you forget to put && or || before the token?\");\nconst errorUnexpectedEOF = localize('contextkey.parser.error.unexpectedEOF', \"Unexpected end of expression\");\nconst hintUnexpectedEOF = localize('contextkey.parser.error.unexpectedEOF.hint', \"Did you forget to put a context key?\");\n\n/**\n * A parser for context key expressions.\n *\n * Example:\n * ```ts\n * const parser = new Parser();\n * const expr = parser.parse('foo == \"bar\" && baz == true');\n *\n * if (expr === undefined) {\n * \t// there were lexing or parsing errors\n * \t// process lexing errors with `parser.lexingErrors`\n *  // process parsing errors with `parser.parsingErrors`\n * } else {\n * \t// expr is a valid expression\n * }\n * ```\n */\nexport class Parser {\n\t// Note: this doesn't produce an exact syntax tree but a normalized one\n\t// ContextKeyExpression's that we use as AST nodes do not expose constructors that do not normalize\n\n\tprivate static _parseError = new Error();\n\n\t// lifetime note: `_scanner` lives as long as the parser does, i.e., is not reset between calls to `parse`\n\tprivate readonly _scanner = new Scanner();\n\n\t// lifetime note: `_tokens`, `_current`, and `_parsingErrors` must be reset between calls to `parse`\n\tprivate _tokens: Token[] = [];\n\tprivate _current = 0; \t\t\t\t\t// invariant: 0 <= this._current < this._tokens.length ; any incrementation of this value must first call `_isAtEnd`\n\tprivate _parsingErrors: ParsingError[] = [];\n\n\tget lexingErrors(): Readonly<LexingError[]> {\n\t\treturn this._scanner.errors;\n\t}\n\n\tget parsingErrors(): Readonly<ParsingError[]> {\n\t\treturn this._parsingErrors;\n\t}\n\n\tconstructor(private readonly _config: ParserConfig = defaultConfig) {\n\t}\n\n\t/**\n\t * Parse a context key expression.\n\t *\n\t * @param input the expression to parse\n\t * @returns the parsed expression or `undefined` if there's an error - call `lexingErrors` and `parsingErrors` to see the errors\n\t */\n\tparse(input: string): ContextKeyExpression | undefined {\n\n\t\tif (input === '') {\n\t\t\tthis._parsingErrors.push({ message: errorEmptyString, offset: 0, lexeme: '', additionalInfo: hintEmptyString });\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis._tokens = this._scanner.reset(input).scan();\n\t\t// @ulugbekna: we do not stop parsing if there are lexing errors to be able to reconstruct regexes with unescaped slashes; TODO@ulugbekna: make this respect config option for recovery\n\n\t\tthis._current = 0;\n\t\tthis._parsingErrors = [];\n\n\t\ttry {\n\t\t\tconst expr = this._expr();\n\t\t\tif (!this._isAtEnd()) {\n\t\t\t\tconst peek = this._peek();\n\t\t\t\tconst additionalInfo = peek.type === TokenType.Str ? hintUnexpectedToken : undefined;\n\t\t\t\tthis._parsingErrors.push({ message: errorUnexpectedToken, offset: peek.offset, lexeme: Scanner.getLexeme(peek), additionalInfo });\n\t\t\t\tthrow Parser._parseError;\n\t\t\t}\n\t\t\treturn expr;\n\t\t} catch (e) {\n\t\t\tif (!(e === Parser._parseError)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tprivate _expr(): ContextKeyExpression | undefined {\n\t\treturn this._or();\n\t}\n\n\tprivate _or(): ContextKeyExpression | undefined {\n\t\tconst expr = [this._and()];\n\n\t\twhile (this._matchOne(TokenType.Or)) {\n\t\t\tconst right = this._and();\n\t\t\texpr.push(right);\n\t\t}\n\n\t\treturn expr.length === 1 ? expr[0] : ContextKeyExpr.or(...expr);\n\t}\n\n\tprivate _and(): ContextKeyExpression | undefined {\n\t\tconst expr = [this._term()];\n\n\t\twhile (this._matchOne(TokenType.And)) {\n\t\t\tconst right = this._term();\n\t\t\texpr.push(right);\n\t\t}\n\n\t\treturn expr.length === 1 ? expr[0] : ContextKeyExpr.and(...expr);\n\t}\n\n\tprivate _term(): ContextKeyExpression | undefined {\n\t\tif (this._matchOne(TokenType.Neg)) {\n\t\t\tconst peek = this._peek();\n\t\t\tswitch (peek.type) {\n\t\t\t\tcase TokenType.True:\n\t\t\t\t\tthis._advance();\n\t\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t\tcase TokenType.False:\n\t\t\t\t\tthis._advance();\n\t\t\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t\t\tcase TokenType.LParen: {\n\t\t\t\t\tthis._advance();\n\t\t\t\t\tconst expr = this._expr();\n\t\t\t\t\tthis._consume(TokenType.RParen, errorClosingParenthesis);\n\t\t\t\t\treturn expr?.negate();\n\t\t\t\t}\n\t\t\t\tcase TokenType.Str:\n\t\t\t\t\tthis._advance();\n\t\t\t\t\treturn ContextKeyNotExpr.create(peek.lexeme);\n\t\t\t\tdefault:\n\t\t\t\t\tthrow this._errExpectedButGot(`KEY | true | false | '(' expression ')'`, peek);\n\t\t\t}\n\t\t}\n\t\treturn this._primary();\n\t}\n\n\tprivate _primary(): ContextKeyExpression | undefined {\n\n\t\tconst peek = this._peek();\n\t\tswitch (peek.type) {\n\t\t\tcase TokenType.True:\n\t\t\t\tthis._advance();\n\t\t\t\treturn ContextKeyExpr.true();\n\n\t\t\tcase TokenType.False:\n\t\t\t\tthis._advance();\n\t\t\t\treturn ContextKeyExpr.false();\n\n\t\t\tcase TokenType.LParen: {\n\t\t\t\tthis._advance();\n\t\t\t\tconst expr = this._expr();\n\t\t\t\tthis._consume(TokenType.RParen, errorClosingParenthesis);\n\t\t\t\treturn expr;\n\t\t\t}\n\n\t\t\tcase TokenType.Str: {\n\t\t\t\t// KEY\n\t\t\t\tconst key = peek.lexeme;\n\t\t\t\tthis._advance();\n\n\t\t\t\t// =~ regex\n\t\t\t\tif (this._matchOne(TokenType.RegexOp)) {\n\n\t\t\t\t\t// @ulugbekna: we need to reconstruct the regex from the tokens because some extensions use unescaped slashes in regexes\n\t\t\t\t\tconst expr = this._peek();\n\n\t\t\t\t\tif (!this._config.regexParsingWithErrorRecovery) {\n\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\tif (expr.type !== TokenType.RegexStr) {\n\t\t\t\t\t\t\tthrow this._errExpectedButGot(`REGEX`, expr);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst regexLexeme = expr.lexeme;\n\t\t\t\t\t\tconst closingSlashIndex = regexLexeme.lastIndexOf('/');\n\t\t\t\t\t\tconst flags = closingSlashIndex === regexLexeme.length - 1 ? undefined : this._removeFlagsGY(regexLexeme.substring(closingSlashIndex + 1));\n\t\t\t\t\t\tlet regexp: RegExp | null;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tregexp = new RegExp(regexLexeme.substring(1, closingSlashIndex), flags);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tthrow this._errExpectedButGot(`REGEX`, expr);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ContextKeyRegexExpr.create(key, regexp);\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (expr.type) {\n\t\t\t\t\t\tcase TokenType.RegexStr:\n\t\t\t\t\t\tcase TokenType.Error: { // also handle an ErrorToken in case of smth such as /(/file)/\n\t\t\t\t\t\t\tconst lexemeReconstruction = [expr.lexeme]; // /REGEX/ or /REGEX/FLAGS\n\t\t\t\t\t\t\tthis._advance();\n\n\t\t\t\t\t\t\tlet followingToken = this._peek();\n\t\t\t\t\t\t\tlet parenBalance = 0;\n\t\t\t\t\t\t\tfor (let i = 0; i < expr.lexeme.length; i++) {\n\t\t\t\t\t\t\t\tif (expr.lexeme.charCodeAt(i) === CharCode.OpenParen) {\n\t\t\t\t\t\t\t\t\tparenBalance++;\n\t\t\t\t\t\t\t\t} else if (expr.lexeme.charCodeAt(i) === CharCode.CloseParen) {\n\t\t\t\t\t\t\t\t\tparenBalance--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\twhile (!this._isAtEnd() && followingToken.type !== TokenType.And && followingToken.type !== TokenType.Or) {\n\t\t\t\t\t\t\t\tswitch (followingToken.type) {\n\t\t\t\t\t\t\t\t\tcase TokenType.LParen:\n\t\t\t\t\t\t\t\t\t\tparenBalance++;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase TokenType.RParen:\n\t\t\t\t\t\t\t\t\t\tparenBalance--;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase TokenType.RegexStr:\n\t\t\t\t\t\t\t\t\tcase TokenType.QuotedStr:\n\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < followingToken.lexeme.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\tif (followingToken.lexeme.charCodeAt(i) === CharCode.OpenParen) {\n\t\t\t\t\t\t\t\t\t\t\t\tparenBalance++;\n\t\t\t\t\t\t\t\t\t\t\t} else if (expr.lexeme.charCodeAt(i) === CharCode.CloseParen) {\n\t\t\t\t\t\t\t\t\t\t\t\tparenBalance--;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (parenBalance < 0) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlexemeReconstruction.push(Scanner.getLexeme(followingToken));\n\t\t\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\t\t\tfollowingToken = this._peek();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst regexLexeme = lexemeReconstruction.join('');\n\t\t\t\t\t\t\tconst closingSlashIndex = regexLexeme.lastIndexOf('/');\n\t\t\t\t\t\t\tconst flags = closingSlashIndex === regexLexeme.length - 1 ? undefined : this._removeFlagsGY(regexLexeme.substring(closingSlashIndex + 1));\n\t\t\t\t\t\t\tlet regexp: RegExp | null;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tregexp = new RegExp(regexLexeme.substring(1, closingSlashIndex), flags);\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\tthrow this._errExpectedButGot(`REGEX`, expr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn ContextKeyExpr.regex(key, regexp);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase TokenType.QuotedStr: {\n\t\t\t\t\t\t\tconst serializedValue = expr.lexeme;\n\t\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\t\t// replicate old regex parsing behavior\n\n\t\t\t\t\t\t\tlet regex: RegExp | null = null;\n\n\t\t\t\t\t\t\tif (!isFalsyOrWhitespace(serializedValue)) {\n\t\t\t\t\t\t\t\tconst start = serializedValue.indexOf('/');\n\t\t\t\t\t\t\t\tconst end = serializedValue.lastIndexOf('/');\n\t\t\t\t\t\t\t\tif (start !== end && start >= 0) {\n\n\t\t\t\t\t\t\t\t\tconst value = serializedValue.slice(start + 1, end);\n\t\t\t\t\t\t\t\t\tconst caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tregex = new RegExp(value, caseIgnoreFlag);\n\t\t\t\t\t\t\t\t\t} catch (_e) {\n\t\t\t\t\t\t\t\t\t\tthrow this._errExpectedButGot(`REGEX`, expr);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (regex === null) {\n\t\t\t\t\t\t\t\tthrow this._errExpectedButGot('REGEX', expr);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ContextKeyRegexExpr.create(key, regex);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow this._errExpectedButGot('REGEX', this._peek());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// [ 'not' 'in' value ]\n\t\t\t\tif (this._matchOne(TokenType.Not)) {\n\t\t\t\t\tthis._consume(TokenType.In, errorNoInAfterNot);\n\t\t\t\t\tconst right = this._value();\n\t\t\t\t\treturn ContextKeyExpr.notIn(key, right);\n\t\t\t\t}\n\n\t\t\t\t// [ ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'in') value ]\n\t\t\t\tconst maybeOp = this._peek().type;\n\t\t\t\tswitch (maybeOp) {\n\t\t\t\t\tcase TokenType.Eq: {\n\t\t\t\t\t\tthis._advance();\n\n\t\t\t\t\t\tconst right = this._value();\n\t\t\t\t\t\tif (this._previous().type === TokenType.QuotedStr) { // to preserve old parser behavior: \"foo == 'true'\" is preserved as \"foo == 'true'\", but \"foo == true\" is optimized as \"foo\"\n\t\t\t\t\t\t\treturn ContextKeyExpr.equals(key, right);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tswitch (right) {\n\t\t\t\t\t\t\tcase 'true':\n\t\t\t\t\t\t\t\treturn ContextKeyExpr.has(key);\n\t\t\t\t\t\t\tcase 'false':\n\t\t\t\t\t\t\t\treturn ContextKeyExpr.not(key);\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn ContextKeyExpr.equals(key, right);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcase TokenType.NotEq: {\n\t\t\t\t\t\tthis._advance();\n\n\t\t\t\t\t\tconst right = this._value();\n\t\t\t\t\t\tif (this._previous().type === TokenType.QuotedStr) { // same as above with \"foo != 'true'\"\n\t\t\t\t\t\t\treturn ContextKeyExpr.notEquals(key, right);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tswitch (right) {\n\t\t\t\t\t\t\tcase 'true':\n\t\t\t\t\t\t\t\treturn ContextKeyExpr.not(key);\n\t\t\t\t\t\t\tcase 'false':\n\t\t\t\t\t\t\t\treturn ContextKeyExpr.has(key);\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn ContextKeyExpr.notEquals(key, right);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// TODO: ContextKeyExpr.smaller(key, right) accepts only `number` as `right` AND during eval of this node, we just eval to `false` if `right` is not a number\n\t\t\t\t\t// consequently, package.json linter should _warn_ the user if they're passing undesired things to ops\n\t\t\t\t\tcase TokenType.Lt:\n\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\treturn ContextKeySmallerExpr.create(key, this._value());\n\n\t\t\t\t\tcase TokenType.LtEq:\n\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\treturn ContextKeySmallerEqualsExpr.create(key, this._value());\n\n\t\t\t\t\tcase TokenType.Gt:\n\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\treturn ContextKeyGreaterExpr.create(key, this._value());\n\n\t\t\t\t\tcase TokenType.GtEq:\n\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\treturn ContextKeyGreaterEqualsExpr.create(key, this._value());\n\n\t\t\t\t\tcase TokenType.In:\n\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\treturn ContextKeyExpr.in(key, this._value());\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn ContextKeyExpr.has(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcase TokenType.EOF:\n\t\t\t\tthis._parsingErrors.push({ message: errorUnexpectedEOF, offset: peek.offset, lexeme: '', additionalInfo: hintUnexpectedEOF });\n\t\t\t\tthrow Parser._parseError;\n\n\t\t\tdefault:\n\t\t\t\tthrow this._errExpectedButGot(`true | false | KEY \\n\\t| KEY '=~' REGEX \\n\\t| KEY ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'in' | 'not' 'in') value`, this._peek());\n\n\t\t}\n\t}\n\n\tprivate _value(): string {\n\t\tconst token = this._peek();\n\t\tswitch (token.type) {\n\t\t\tcase TokenType.Str:\n\t\t\tcase TokenType.QuotedStr:\n\t\t\t\tthis._advance();\n\t\t\t\treturn token.lexeme;\n\t\t\tcase TokenType.True:\n\t\t\t\tthis._advance();\n\t\t\t\treturn 'true';\n\t\t\tcase TokenType.False:\n\t\t\t\tthis._advance();\n\t\t\t\treturn 'false';\n\t\t\tcase TokenType.In: // we support `in` as a value, e.g., \"when\": \"languageId == in\" - exists in existing extensions\n\t\t\t\tthis._advance();\n\t\t\t\treturn 'in';\n\t\t\tdefault:\n\t\t\t\t// this allows \"when\": \"foo == \" which's used by existing extensions\n\t\t\t\t// we do not call `_advance` on purpose - we don't want to eat unintended tokens\n\t\t\t\treturn '';\n\t\t}\n\t}\n\n\tprivate _flagsGYRe = /g|y/g;\n\tprivate _removeFlagsGY(flags: string): string {\n\t\treturn flags.replaceAll(this._flagsGYRe, '');\n\t}\n\n\t// careful: this can throw if current token is the initial one (ie index = 0)\n\tprivate _previous() {\n\t\treturn this._tokens[this._current - 1];\n\t}\n\n\tprivate _matchOne(token: TokenType) {\n\t\tif (this._check(token)) {\n\t\t\tthis._advance();\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate _advance() {\n\t\tif (!this._isAtEnd()) {\n\t\t\tthis._current++;\n\t\t}\n\t\treturn this._previous();\n\t}\n\n\tprivate _consume(type: TokenType, message: string) {\n\t\tif (this._check(type)) {\n\t\t\treturn this._advance();\n\t\t}\n\n\t\tthrow this._errExpectedButGot(message, this._peek());\n\t}\n\n\tprivate _errExpectedButGot(expected: string, got: Token, additionalInfo?: string) {\n\t\tconst message = localize('contextkey.parser.error.expectedButGot', \"Expected: {0}\\nReceived: '{1}'.\", expected, Scanner.getLexeme(got));\n\t\tconst offset = got.offset;\n\t\tconst lexeme = Scanner.getLexeme(got);\n\t\tthis._parsingErrors.push({ message, offset, lexeme, additionalInfo });\n\t\treturn Parser._parseError;\n\t}\n\n\tprivate _check(type: TokenType) {\n\t\treturn this._peek().type === type;\n\t}\n\n\tprivate _peek() {\n\t\treturn this._tokens[this._current];\n\t}\n\n\tprivate _isAtEnd() {\n\t\treturn this._peek().type === TokenType.EOF;\n\t}\n}\n\nexport abstract class ContextKeyExpr {\n\n\tpublic static false(): ContextKeyExpression {\n\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t}\n\tpublic static true(): ContextKeyExpression {\n\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t}\n\tpublic static has(key: string): ContextKeyExpression {\n\t\treturn ContextKeyDefinedExpr.create(key);\n\t}\n\tpublic static equals(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyEqualsExpr.create(key, value);\n\t}\n\tpublic static notEquals(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyNotEqualsExpr.create(key, value);\n\t}\n\tpublic static regex(key: string, value: RegExp): ContextKeyExpression {\n\t\treturn ContextKeyRegexExpr.create(key, value);\n\t}\n\tpublic static in(key: string, value: string): ContextKeyExpression {\n\t\treturn ContextKeyInExpr.create(key, value);\n\t}\n\tpublic static notIn(key: string, value: string): ContextKeyExpression {\n\t\treturn ContextKeyNotInExpr.create(key, value);\n\t}\n\tpublic static not(key: string): ContextKeyExpression {\n\t\treturn ContextKeyNotExpr.create(key);\n\t}\n\tpublic static and(...expr: Array<ContextKeyExpression | undefined | null>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyAndExpr.create(expr, null, true);\n\t}\n\tpublic static or(...expr: Array<ContextKeyExpression | undefined | null>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyOrExpr.create(expr, null, true);\n\t}\n\tpublic static greater(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeyGreaterExpr.create(key, value);\n\t}\n\tpublic static greaterEquals(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeyGreaterEqualsExpr.create(key, value);\n\t}\n\tpublic static smaller(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeySmallerExpr.create(key, value);\n\t}\n\tpublic static smallerEquals(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeySmallerEqualsExpr.create(key, value);\n\t}\n\n\tprivate static _parser = new Parser({ regexParsingWithErrorRecovery: false });\n\tpublic static deserialize(serialized: string | null | undefined): ContextKeyExpression | undefined {\n\t\tif (serialized === undefined || serialized === null) { // an empty string needs to be handled by the parser to get a corresponding parsing error reported\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst expr = this._parser.parse(serialized);\n\t\treturn expr;\n\t}\n\n}\n\n\nexport function validateWhenClauses(whenClauses: string[]): any {\n\n\tconst parser = new Parser({ regexParsingWithErrorRecovery: false }); // we run with no recovery to guide users to use correct regexes\n\n\treturn whenClauses.map(whenClause => {\n\t\tparser.parse(whenClause);\n\n\t\tif (parser.lexingErrors.length > 0) {\n\t\t\treturn parser.lexingErrors.map((se: LexingError) => ({\n\t\t\t\terrorMessage: se.additionalInfo ?\n\t\t\t\t\tlocalize('contextkey.scanner.errorForLinterWithHint', \"Unexpected token. Hint: {0}\", se.additionalInfo) :\n\t\t\t\t\tlocalize('contextkey.scanner.errorForLinter', \"Unexpected token.\"),\n\t\t\t\toffset: se.offset,\n\t\t\t\tlength: se.lexeme.length,\n\t\t\t}));\n\t\t} else if (parser.parsingErrors.length > 0) {\n\t\t\treturn parser.parsingErrors.map((pe: ParsingError) => ({\n\t\t\t\terrorMessage: pe.additionalInfo ? `${pe.message}. ${pe.additionalInfo}` : pe.message,\n\t\t\t\toffset: pe.offset,\n\t\t\t\tlength: pe.lexeme.length,\n\t\t\t}));\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t});\n}\n\nexport function expressionsAreEqualWithConstantSubstitution(a: ContextKeyExpression | null | undefined, b: ContextKeyExpression | null | undefined): boolean {\n\tconst aExpr = a ? a.substituteConstants() : undefined;\n\tconst bExpr = b ? b.substituteConstants() : undefined;\n\tif (!aExpr && !bExpr) {\n\t\treturn true;\n\t}\n\tif (!aExpr || !bExpr) {\n\t\treturn false;\n\t}\n\treturn aExpr.equals(bExpr);\n}\n\nfunction cmp(a: ContextKeyExpression, b: ContextKeyExpression): number {\n\treturn a.cmp(b);\n}\n\nexport class ContextKeyFalseExpr implements IContextKeyExpression {\n\tpublic static INSTANCE = new ContextKeyFalseExpr();\n\n\tpublic readonly type = ContextKeyExprType.False;\n\n\tprotected constructor() {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\treturn this.type - other.type;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\treturn (other.type === this.type);\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn false;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn 'false';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn this;\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t}\n}\n\nexport class ContextKeyTrueExpr implements IContextKeyExpression {\n\tpublic static INSTANCE = new ContextKeyTrueExpr();\n\n\tpublic readonly type = ContextKeyExprType.True;\n\n\tprotected constructor() {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\treturn this.type - other.type;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\treturn (other.type === this.type);\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn true;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn 'true';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn this;\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t}\n}\n\nexport class ContextKeyDefinedExpr implements IContextKeyExpression {\n\tpublic static create(key: string, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n\t\t}\n\t\treturn new ContextKeyDefinedExpr(key, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Defined;\n\n\tprotected constructor(\n\t\treadonly key: string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp1(this.key, other.key);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!!context.getValue(this.key));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.key;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapDefined(this.key);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotExpr.create(this.key, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tif (typeof value === 'boolean') {\n\t\t\treturn (value ? ContextKeyDefinedExpr.create(key, negated) : ContextKeyNotExpr.create(key, negated));\n\t\t}\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst trueValue = constantValue ? 'true' : 'false';\n\t\t\treturn (value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyEqualsExpr(key, value, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Equals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: any,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst trueValue = constantValue ? 'true' : 'false';\n\t\t\treturn (this.value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t// Intentional ==\n\t\t// eslint-disable-next-line eqeqeq\n\t\treturn (context.getValue(this.key) == this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} == '${this.value}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyInExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, valueKey: string): ContextKeyInExpr {\n\t\treturn new ContextKeyInExpr(key, valueKey);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.In;\n\tprivate negated: ContextKeyExpression | null = null;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly valueKey: string,\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.valueKey, other.key, other.valueKey);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.valueKey === other.valueKey);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tconst source = context.getValue(this.valueKey);\n\n\t\tconst item = context.getValue(this.key);\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn source.includes(item as any);\n\t\t}\n\n\t\tif (typeof item === 'string' && typeof source === 'object' && source !== null) {\n\t\t\treturn hasOwnProperty.call(source, item);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} in '${this.valueKey}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key, this.valueKey];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyInExpr {\n\t\treturn mapFnc.mapIn(this.key, this.valueKey);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotInExpr.create(this.key, this.valueKey);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyNotInExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, valueKey: string): ContextKeyNotInExpr {\n\t\treturn new ContextKeyNotInExpr(key, valueKey);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotIn;\n\n\tprivate readonly _negated: ContextKeyInExpr;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly valueKey: string,\n\t) {\n\t\tthis._negated = ContextKeyInExpr.create(key, valueKey);\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn this._negated.cmp(other._negated);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn this._negated.equals(other._negated);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn !this._negated.evaluate(context);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} not in '${this.valueKey}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn this._negated.keys();\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNotIn(this.key, this.valueKey);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn this._negated;\n\t}\n}\n\nexport class ContextKeyNotEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tif (typeof value === 'boolean') {\n\t\t\tif (value) {\n\t\t\t\treturn ContextKeyNotExpr.create(key, negated);\n\t\t\t}\n\t\t\treturn ContextKeyDefinedExpr.create(key, negated);\n\t\t}\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst falseValue = constantValue ? 'true' : 'false';\n\t\t\treturn (value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyNotEqualsExpr(key, value, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotEquals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: any,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst falseValue = constantValue ? 'true' : 'false';\n\t\t\treturn (this.value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t// Intentional !=\n\t\t// eslint-disable-next-line eqeqeq\n\t\treturn (context.getValue(this.key) != this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} != '${this.value}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNotEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyNotExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyNotExpr(key, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Not;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp1(this.key, other.key);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!context.getValue(this.key));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `!${this.key}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNot(this.key);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyDefinedExpr.create(this.key, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nfunction withFloatOrStr<T extends ContextKeyExpression>(value: any, callback: (value: number | string) => T): T | ContextKeyFalseExpr {\n\tif (typeof value === 'string') {\n\t\tconst n = parseFloat(value);\n\t\tif (!isNaN(n)) {\n\t\t\tvalue = n;\n\t\t}\n\t}\n\tif (typeof value === 'string' || typeof value === 'number') {\n\t\treturn callback(value);\n\t}\n\treturn ContextKeyFalseExpr.INSTANCE;\n}\n\nexport class ContextKeyGreaterExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeyGreaterExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Greater;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) { }\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) > this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} > ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapGreater(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeySmallerEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyGreaterEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeyGreaterEqualsExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.GreaterEquals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) { }\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) >= this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} >= ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapGreaterEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeySmallerExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeySmallerExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeySmallerExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Smaller;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) < this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} < ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapSmaller(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyGreaterEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeySmallerEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeySmallerEqualsExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.SmallerEquals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) <= this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} <= ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapSmallerEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyGreaterExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyRegexExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, regexp: RegExp | null): ContextKeyRegexExpr {\n\t\treturn new ContextKeyRegexExpr(key, regexp);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Regex;\n\tprivate negated: ContextKeyExpression | null = null;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly regexp: RegExp | null\n\t) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\tif (thisSource < otherSource) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (thisSource > otherSource) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\t\treturn (this.key === other.key && thisSource === otherSource);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tconst value = context.getValue<any>(this.key);\n\t\treturn this.regexp ? this.regexp.test(value) : false;\n\t}\n\n\tpublic serialize(): string {\n\t\tconst value = this.regexp\n\t\t\t? `/${this.regexp.source}/${this.regexp.flags}`\n\t\t\t: '/invalid/';\n\t\treturn `${this.key} =~ ${value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyRegexExpr {\n\t\treturn mapFnc.mapRegex(this.key, this.regexp);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotRegexExpr.create(this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyNotRegexExpr implements IContextKeyExpression {\n\n\tpublic static create(actual: ContextKeyRegexExpr): ContextKeyExpression {\n\t\treturn new ContextKeyNotRegexExpr(actual);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotRegex;\n\n\tprivate constructor(private readonly _actual: ContextKeyRegexExpr) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn this._actual.cmp(other._actual);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn this._actual.equals(other._actual);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn !this._actual.evaluate(context);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `!(${this._actual.serialize()})`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn this._actual.keys();\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyNotRegexExpr(this._actual.map(mapFnc));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn this._actual;\n\t}\n}\n\n/**\n * @returns the same instance if nothing changed.\n */\nfunction eliminateConstantsInArray(arr: ContextKeyExpression[]): (ContextKeyExpression | undefined)[] {\n\t// Allocate array only if there is a difference\n\tlet newArr: (ContextKeyExpression | undefined)[] | null = null;\n\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\tconst newExpr = arr[i].substituteConstants();\n\n\t\tif (arr[i] !== newExpr) {\n\t\t\t// something has changed!\n\n\t\t\t// allocate array on first difference\n\t\t\tif (newArr === null) {\n\t\t\t\tnewArr = [];\n\t\t\t\tfor (let j = 0; j < i; j++) {\n\t\t\t\t\tnewArr[j] = arr[j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (newArr !== null) {\n\t\t\tnewArr[i] = newExpr;\n\t\t}\n\t}\n\n\tif (newArr === null) {\n\t\treturn arr;\n\t}\n\treturn newArr;\n}\n\nexport class ContextKeyAndExpr implements IContextKeyExpression {\n\n\tpublic static create(_expr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null, extraRedundantCheck: boolean): ContextKeyExpression | undefined {\n\t\treturn ContextKeyAndExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.And;\n\n\tprivate constructor(\n\t\tpublic readonly expr: ContextKeyExpression[],\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.expr.length < other.expr.length) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.expr.length > other.expr.length) {\n\t\t\treturn 1;\n\t\t}\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tconst r = cmp(this.expr[i], other.expr[i]);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst exprArr = eliminateConstantsInArray(this.expr);\n\t\tif (exprArr === this.expr) {\n\t\t\t// no change\n\t\t\treturn this;\n\t\t}\n\t\treturn ContextKeyAndExpr.create(exprArr, this.negated, false);\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (!this.expr[i].evaluate(context)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _normalizeArr(arr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null, extraRedundantCheck: boolean): ContextKeyExpression | undefined {\n\t\tconst expr: ContextKeyExpression[] = [];\n\t\tlet hasTrue = false;\n\n\t\tfor (const e of arr) {\n\t\t\tif (!e) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.True) {\n\t\t\t\t// anything && true ==> anything\n\t\t\t\thasTrue = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.False) {\n\t\t\t\t// anything && false ==> false\n\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.And) {\n\t\t\t\texpr.push(...e.expr);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\texpr.push(e);\n\t\t}\n\n\t\tif (expr.length === 0 && hasTrue) {\n\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t}\n\n\t\tif (expr.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\texpr.sort(cmp);\n\n\t\t// eliminate duplicate terms\n\t\tfor (let i = 1; i < expr.length; i++) {\n\t\t\tif (expr[i - 1].equals(expr[i])) {\n\t\t\t\texpr.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// We must distribute any OR expression because we don't support parens\n\t\t// OR extensions will be at the end (due to sorting rules)\n\t\twhile (expr.length > 1) {\n\t\t\tconst lastElement = expr[expr.length - 1];\n\t\t\tif (lastElement.type !== ContextKeyExprType.Or) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// pop the last element\n\t\t\texpr.pop();\n\n\t\t\t// pop the second to last element\n\t\t\tconst secondToLastElement = expr.pop()!;\n\n\t\t\tconst isFinished = (expr.length === 0);\n\n\t\t\t// distribute `lastElement` over `secondToLastElement`\n\t\t\tconst resultElement = ContextKeyOrExpr.create(\n\t\t\t\tlastElement.expr.map(el => ContextKeyAndExpr.create([el, secondToLastElement], null, extraRedundantCheck)),\n\t\t\t\tnull,\n\t\t\t\tisFinished\n\t\t\t);\n\n\t\t\tif (resultElement) {\n\t\t\t\texpr.push(resultElement);\n\t\t\t\texpr.sort(cmp);\n\t\t\t}\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// resolve false AND expressions\n\t\tif (extraRedundantCheck) {\n\t\t\tfor (let i = 0; i < expr.length; i++) {\n\t\t\t\tfor (let j = i + 1; j < expr.length; j++) {\n\t\t\t\t\tif (expr[i].negate().equals(expr[j])) {\n\t\t\t\t\t\t// A && !A case\n\t\t\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (expr.length === 1) {\n\t\t\t\treturn expr[0];\n\t\t\t}\n\t\t}\n\n\t\treturn new ContextKeyAndExpr(expr, negated);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.expr.map(e => e.serialize()).join(' && ');\n\t}\n\n\tpublic keys(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (const expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyAndExpr(this.expr.map(expr => expr.map(mapFnc)), null);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tconst result: ContextKeyExpression[] = [];\n\t\t\tfor (const expr of this.expr) {\n\t\t\t\tresult.push(expr.negate());\n\t\t\t}\n\t\t\tthis.negated = ContextKeyOrExpr.create(result, this, true)!;\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyOrExpr implements IContextKeyExpression {\n\n\tpublic static create(_expr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null, extraRedundantCheck: boolean): ContextKeyExpression | undefined {\n\t\treturn ContextKeyOrExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Or;\n\n\tprivate constructor(\n\t\tpublic readonly expr: ContextKeyExpression[],\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.expr.length < other.expr.length) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.expr.length > other.expr.length) {\n\t\t\treturn 1;\n\t\t}\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tconst r = cmp(this.expr[i], other.expr[i]);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst exprArr = eliminateConstantsInArray(this.expr);\n\t\tif (exprArr === this.expr) {\n\t\t\t// no change\n\t\t\treturn this;\n\t\t}\n\t\treturn ContextKeyOrExpr.create(exprArr, this.negated, false);\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (this.expr[i].evaluate(context)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate static _normalizeArr(arr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null, extraRedundantCheck: boolean): ContextKeyExpression | undefined {\n\t\tlet expr: ContextKeyExpression[] = [];\n\t\tlet hasFalse = false;\n\n\t\tif (arr) {\n\t\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\t\tconst e = arr[i];\n\t\t\t\tif (!e) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.False) {\n\t\t\t\t\t// anything || false ==> anything\n\t\t\t\t\thasFalse = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.True) {\n\t\t\t\t\t// anything || true ==> true\n\t\t\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.Or) {\n\t\t\t\t\texpr = expr.concat(e.expr);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\texpr.push(e);\n\t\t\t}\n\n\t\t\tif (expr.length === 0 && hasFalse) {\n\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t}\n\n\t\t\texpr.sort(cmp);\n\t\t}\n\n\t\tif (expr.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// eliminate duplicate terms\n\t\tfor (let i = 1; i < expr.length; i++) {\n\t\t\tif (expr[i - 1].equals(expr[i])) {\n\t\t\t\texpr.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// resolve true OR expressions\n\t\tif (extraRedundantCheck) {\n\t\t\tfor (let i = 0; i < expr.length; i++) {\n\t\t\t\tfor (let j = i + 1; j < expr.length; j++) {\n\t\t\t\t\tif (expr[i].negate().equals(expr[j])) {\n\t\t\t\t\t\t// A || !A case\n\t\t\t\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (expr.length === 1) {\n\t\t\t\treturn expr[0];\n\t\t\t}\n\t\t}\n\n\t\treturn new ContextKeyOrExpr(expr, negated);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.expr.map(e => e.serialize()).join(' || ');\n\t}\n\n\tpublic keys(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (const expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyOrExpr(this.expr.map(expr => expr.map(mapFnc)), null);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tconst result: ContextKeyExpression[] = [];\n\t\t\tfor (const expr of this.expr) {\n\t\t\t\tresult.push(expr.negate());\n\t\t\t}\n\n\t\t\t// We don't support parens, so here we distribute the AND over the OR terminals\n\t\t\t// We always take the first 2 AND pairs and distribute them\n\t\t\twhile (result.length > 1) {\n\t\t\t\tconst LEFT = result.shift()!;\n\t\t\t\tconst RIGHT = result.shift()!;\n\n\t\t\t\tconst all: ContextKeyExpression[] = [];\n\t\t\t\tfor (const left of getTerminals(LEFT)) {\n\t\t\t\t\tfor (const right of getTerminals(RIGHT)) {\n\t\t\t\t\t\tall.push(ContextKeyAndExpr.create([left, right], null, false)!);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult.unshift(ContextKeyOrExpr.create(all, null, false)!);\n\t\t\t}\n\n\t\t\tthis.negated = ContextKeyOrExpr.create(result, this, true)!;\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport interface ContextKeyInfo {\n\treadonly key: string;\n\treadonly type?: string;\n\treadonly description?: string;\n}\n\nexport class RawContextKey<T extends ContextKeyValue> extends ContextKeyDefinedExpr {\n\n\tprivate static _info: ContextKeyInfo[] = [];\n\n\tstatic all(): IterableIterator<ContextKeyInfo> {\n\t\treturn RawContextKey._info.values();\n\t}\n\n\tprivate readonly _defaultValue: T | undefined;\n\n\tconstructor(key: string, defaultValue: T | undefined, metaOrHide?: string | true | { type: string; description: string }) {\n\t\tsuper(key, null);\n\t\tthis._defaultValue = defaultValue;\n\n\t\t// collect all context keys into a central place\n\t\tif (typeof metaOrHide === 'object') {\n\t\t\tRawContextKey._info.push({ ...metaOrHide, key });\n\t\t} else if (metaOrHide !== true) {\n\t\t\tRawContextKey._info.push({ key, description: metaOrHide, type: defaultValue !== null && defaultValue !== undefined ? typeof defaultValue : undefined });\n\t\t}\n\t}\n\n\tpublic bindTo(target: IContextKeyService): IContextKey<T> {\n\t\treturn target.createKey(this.key, this._defaultValue);\n\t}\n\n\tpublic getValue(target: IContextKeyService): T | undefined {\n\t\treturn target.getContextKeyValue<T>(this.key);\n\t}\n\n\tpublic toNegated(): ContextKeyExpression {\n\t\treturn this.negate();\n\t}\n\n\tpublic isEqualTo(value: any): ContextKeyExpression {\n\t\treturn ContextKeyEqualsExpr.create(this.key, value);\n\t}\n\n\tpublic notEqualsTo(value: any): ContextKeyExpression {\n\t\treturn ContextKeyNotEqualsExpr.create(this.key, value);\n\t}\n}\n\nexport type ContextKeyValue = null | undefined | boolean | number | string\n\t| Array<null | undefined | boolean | number | string>\n\t| Record<string, null | undefined | boolean | number | string>;\n\nexport interface IContext {\n\tgetValue<T extends ContextKeyValue = ContextKeyValue>(key: string): T | undefined;\n}\n\nexport interface IContextKey<T extends ContextKeyValue = ContextKeyValue> {\n\tset(value: T): void;\n\treset(): void;\n\tget(): T | undefined;\n}\n\nexport interface IContextKeyServiceTarget {\n\tparentElement: IContextKeyServiceTarget | null;\n\tsetAttribute(attr: string, value: string): void;\n\tremoveAttribute(attr: string): void;\n\thasAttribute(attr: string): boolean;\n\tgetAttribute(attr: string): string | null;\n}\n\nexport const IContextKeyService = createDecorator<IContextKeyService>('contextKeyService');\n\nexport interface IReadableSet<T> {\n\thas(value: T): boolean;\n}\n\nexport interface IContextKeyChangeEvent {\n\taffectsSome(keys: IReadableSet<string>): boolean;\n\tallKeysContainedIn(keys: IReadableSet<string>): boolean;\n}\n\nexport type IScopedContextKeyService = IContextKeyService & IDisposable;\n\nexport interface IContextKeyService {\n\treadonly _serviceBrand: undefined;\n\n\tonDidChangeContext: Event<IContextKeyChangeEvent>;\n\tbufferChangeEvents(callback: Function): void;\n\n\tcreateKey<T extends ContextKeyValue>(key: string, defaultValue: T | undefined): IContextKey<T>;\n\tcontextMatchesRules(rules: ContextKeyExpression | undefined): boolean;\n\tgetContextKeyValue<T>(key: string): T | undefined;\n\n\tcreateScoped(target: IContextKeyServiceTarget): IScopedContextKeyService;\n\tcreateOverlay(overlay: Iterable<[string, any]>): IContextKeyService;\n\tgetContext(target: IContextKeyServiceTarget | null): IContext;\n\n\tupdateParent(parentContextKeyService: IContextKeyService): void;\n}\n\nfunction cmp1(key1: string, key2: string): number {\n\tif (key1 < key2) {\n\t\treturn -1;\n\t}\n\tif (key1 > key2) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nfunction cmp2(key1: string, value1: any, key2: string, value2: any): number {\n\tif (key1 < key2) {\n\t\treturn -1;\n\t}\n\tif (key1 > key2) {\n\t\treturn 1;\n\t}\n\tif (value1 < value2) {\n\t\treturn -1;\n\t}\n\tif (value1 > value2) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\n/**\n * Returns true if it is provable `p` implies `q`.\n */\nexport function implies(p: ContextKeyExpression, q: ContextKeyExpression): boolean {\n\n\tif (p.type === ContextKeyExprType.False || q.type === ContextKeyExprType.True) {\n\t\t// false implies anything\n\t\t// anything implies true\n\t\treturn true;\n\t}\n\n\tif (p.type === ContextKeyExprType.Or) {\n\t\tif (q.type === ContextKeyExprType.Or) {\n\t\t\t// `a || b || c` can only imply something like `a || b || c || d`\n\t\t\treturn allElementsIncluded(p.expr, q.expr);\n\t\t}\n\t\treturn false;\n\t}\n\n\tif (q.type === ContextKeyExprType.Or) {\n\t\tfor (const element of q.expr) {\n\t\t\tif (implies(p, element)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tif (p.type === ContextKeyExprType.And) {\n\t\tif (q.type === ContextKeyExprType.And) {\n\t\t\t// `a && b && c` implies `a && c`\n\t\t\treturn allElementsIncluded(q.expr, p.expr);\n\t\t}\n\t\tfor (const element of p.expr) {\n\t\t\tif (implies(element, q)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\treturn p.equals(q);\n}\n\n/**\n * Returns true if all elements in `p` are also present in `q`.\n * The two arrays are assumed to be sorted\n */\nfunction allElementsIncluded(p: ContextKeyExpression[], q: ContextKeyExpression[]): boolean {\n\tlet pIndex = 0;\n\tlet qIndex = 0;\n\twhile (pIndex < p.length && qIndex < q.length) {\n\t\tconst cmp = p[pIndex].cmp(q[qIndex]);\n\n\t\tif (cmp < 0) {\n\t\t\t// an element from `p` is missing from `q`\n\t\t\treturn false;\n\t\t} else if (cmp === 0) {\n\t\t\tpIndex++;\n\t\t\tqIndex++;\n\t\t} else {\n\t\t\tqIndex++;\n\t\t}\n\t}\n\treturn (pIndex === p.length);\n}\n\nfunction getTerminals(node: ContextKeyExpression) {\n\tif (node.type === ContextKeyExprType.Or) {\n\t\treturn node.expr;\n\t}\n\treturn [node];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer, decodeBase64, encodeBase64 } from 'vs/base/common/buffer';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const INotebookDocumentService = createDecorator<INotebookDocumentService>('notebookDocumentService');\n\nexport interface INotebookDocument {\n\treadonly uri: URI;\n\tgetCellIndex(cellUri: URI): number | undefined;\n}\n\nconst _lengths = ['W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f'];\nconst _padRegexp = new RegExp(`^[${_lengths.join('')}]+`);\nconst _radix = 7;\nexport function parse(cell: URI): { notebook: URI; handle: number } | undefined {\n\tif (cell.scheme !== Schemas.vscodeNotebookCell) {\n\t\treturn undefined;\n\t}\n\n\tconst idx = cell.fragment.indexOf('s');\n\tif (idx < 0) {\n\t\treturn undefined;\n\t}\n\n\tconst handle = parseInt(cell.fragment.substring(0, idx).replace(_padRegexp, ''), _radix);\n\tconst _scheme = decodeBase64(cell.fragment.substring(idx + 1)).toString();\n\n\tif (isNaN(handle)) {\n\t\treturn undefined;\n\t}\n\treturn {\n\t\thandle,\n\t\tnotebook: cell.with({ scheme: _scheme, fragment: null })\n\t};\n}\n\nexport function generate(notebook: URI, handle: number): URI {\n\n\tconst s = handle.toString(_radix);\n\tconst p = s.length < _lengths.length ? _lengths[s.length - 1] : 'z';\n\n\tconst fragment = `${p}${s}s${encodeBase64(VSBuffer.fromString(notebook.scheme), true, true)}`;\n\treturn notebook.with({ scheme: Schemas.vscodeNotebookCell, fragment });\n}\n\nexport interface INotebookDocumentService {\n\treadonly _serviceBrand: undefined;\n\n\tgetNotebook(uri: URI): INotebookDocument | undefined;\n\taddNotebookDocument(document: INotebookDocument): void;\n\tremoveNotebookDocument(document: INotebookDocument): void;\n}\n\nexport class NotebookDocumentWorkbenchService implements INotebookDocumentService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _documents = new ResourceMap<INotebookDocument>();\n\n\tgetNotebook(uri: URI): INotebookDocument | undefined {\n\t\tif (uri.scheme === Schemas.vscodeNotebookCell) {\n\t\t\tconst cellUri = parse(uri);\n\t\t\tif (cellUri) {\n\t\t\t\tconst document = this._documents.get(cellUri.notebook);\n\t\t\t\tif (document) {\n\t\t\t\t\treturn document;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._documents.get(uri);\n\t}\n\n\taddNotebookDocument(document: INotebookDocument) {\n\t\tthis._documents.set(document.uri, document);\n\t}\n\n\tremoveNotebookDocument(document: INotebookDocument) {\n\t\tthis._documents.delete(document.uri);\n\t}\n\n}\n\nregisterSingleton(INotebookDocumentService, NotebookDocumentWorkbenchService, InstantiationType.Delayed);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IDiffResult } from 'vs/base/common/diff/diff';\nimport { Event } from 'vs/base/common/event';\nimport * as glob from 'vs/base/common/glob';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { Mimes } from 'vs/base/common/mime';\nimport { Schemas } from 'vs/base/common/network';\nimport { basename } from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\nimport { ISplice } from 'vs/base/common/sequence';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { ILineChange } from 'vs/editor/common/diff/legacyLinesDiffComputer';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { Command, WorkspaceEditMetadata } from 'vs/editor/common/languages';\nimport { IReadonlyTextBuffer } from 'vs/editor/common/model';\nimport { IAccessibilityInformation } from 'vs/platform/accessibility/common/accessibility';\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { ThemeColor } from 'vs/base/common/themables';\nimport { UndoRedoGroup } from 'vs/platform/undoRedo/common/undoRedo';\nimport { IRevertOptions, ISaveOptions, IUntypedEditorInput } from 'vs/workbench/common/editor';\nimport { NotebookTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookTextModel';\nimport { ICellRange } from 'vs/workbench/contrib/notebook/common/notebookRange';\nimport { IWorkingCopyBackupMeta, IWorkingCopySaveEvent } from 'vs/workbench/services/workingCopy/common/workingCopy';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { IFileReadLimits } from 'vs/platform/files/common/files';\nimport { parse as parseUri, generate as generateUri } from 'vs/workbench/services/notebook/common/notebookDocumentService';\nimport { ICellExecutionError } from 'vs/workbench/contrib/notebook/common/notebookExecutionStateService';\n\nexport const NOTEBOOK_EDITOR_ID = 'workbench.editor.notebook';\nexport const NOTEBOOK_DIFF_EDITOR_ID = 'workbench.editor.notebookTextDiffEditor';\nexport const INTERACTIVE_WINDOW_EDITOR_ID = 'workbench.editor.interactive';\n\n\nexport enum CellKind {\n\tMarkup = 1,\n\tCode = 2\n}\n\nexport const NOTEBOOK_DISPLAY_ORDER: readonly string[] = [\n\t'application/json',\n\t'application/javascript',\n\t'text/html',\n\t'image/svg+xml',\n\tMimes.latex,\n\tMimes.markdown,\n\t'image/png',\n\t'image/jpeg',\n\tMimes.text\n];\n\nexport const ACCESSIBLE_NOTEBOOK_DISPLAY_ORDER: readonly string[] = [\n\tMimes.latex,\n\tMimes.markdown,\n\t'application/json',\n\t'text/html',\n\t'image/svg+xml',\n\t'image/png',\n\t'image/jpeg',\n\tMimes.text,\n];\n\n/**\n * A mapping of extension IDs who contain renderers, to notebook ids who they\n * should be treated as the same in the renderer selection logic. This is used\n * to prefer the 1st party Jupyter renderers even though they're in a separate\n * extension, for instance. See #136247.\n */\nexport const RENDERER_EQUIVALENT_EXTENSIONS: ReadonlyMap<string, ReadonlySet<string>> = new Map([\n\t['ms-toolsai.jupyter', new Set(['jupyter-notebook', 'interactive'])],\n\t['ms-toolsai.jupyter-renderers', new Set(['jupyter-notebook', 'interactive'])],\n]);\n\nexport const RENDERER_NOT_AVAILABLE = '_notAvailable';\n\nexport type ContributedNotebookRendererEntrypoint = string | { readonly extends: string; readonly path: string };\n\nexport enum NotebookRunState {\n\tRunning = 1,\n\tIdle = 2\n}\n\nexport type NotebookDocumentMetadata = Record<string, unknown>;\n\nexport enum NotebookCellExecutionState {\n\tUnconfirmed = 1,\n\tPending = 2,\n\tExecuting = 3\n}\nexport enum NotebookExecutionState {\n\tUnconfirmed = 1,\n\tPending = 2,\n\tExecuting = 3\n}\n\nexport interface INotebookCellPreviousExecutionResult {\n\texecutionOrder?: number;\n\tsuccess?: boolean;\n\tduration?: number;\n}\n\nexport interface NotebookCellMetadata {\n\t/**\n\t * custom metadata\n\t */\n\t[key: string]: unknown;\n}\n\nexport interface NotebookCellInternalMetadata {\n\texecutionId?: string;\n\texecutionOrder?: number;\n\tlastRunSuccess?: boolean;\n\trunStartTime?: number;\n\trunStartTimeAdjustment?: number;\n\trunEndTime?: number;\n\trenderDuration?: { [key: string]: number };\n\terror?: ICellExecutionError;\n}\n\nexport interface NotebookCellCollapseState {\n\tinputCollapsed?: boolean;\n\toutputCollapsed?: boolean;\n}\n\nexport interface NotebookCellDefaultCollapseConfig {\n\tcodeCell?: NotebookCellCollapseState;\n\tmarkupCell?: NotebookCellCollapseState;\n}\n\nexport type InteractiveWindowCollapseCodeCells = 'always' | 'never' | 'fromEditor';\n\nexport type TransientCellMetadata = { readonly [K in keyof NotebookCellMetadata]?: boolean };\nexport type CellContentMetadata = { readonly [K in keyof NotebookCellMetadata]?: boolean };\nexport type TransientDocumentMetadata = { readonly [K in keyof NotebookDocumentMetadata]?: boolean };\n\nexport interface TransientOptions {\n\treadonly transientOutputs: boolean;\n\treadonly transientCellMetadata: TransientCellMetadata;\n\treadonly transientDocumentMetadata: TransientDocumentMetadata;\n\treadonly cellContentMetadata: CellContentMetadata;\n}\n\n/** Note: enum values are used for sorting */\nexport const enum NotebookRendererMatch {\n\t/** Renderer has a hard dependency on an available kernel */\n\tWithHardKernelDependency = 0,\n\t/** Renderer works better with an available kernel */\n\tWithOptionalKernelDependency = 1,\n\t/** Renderer is kernel-agnostic */\n\tPure = 2,\n\t/** Renderer is for a different mimeType or has a hard dependency which is unsatisfied */\n\tNever = 3,\n}\n\n/**\n * Renderer messaging requirement. While this allows for 'optional' messaging,\n * VS Code effectively treats it the same as true right now. \"Partial\n * activation\" of extensions is a very tricky problem, which could allow\n * solving this. But for now, optional is mostly only honored for aznb.\n */\nexport const enum RendererMessagingSpec {\n\tAlways = 'always',\n\tNever = 'never',\n\tOptional = 'optional',\n}\n\nexport type NotebookRendererEntrypoint = { readonly extends: string | undefined; readonly path: URI };\n\nexport interface INotebookRendererInfo {\n\treadonly id: string;\n\treadonly displayName: string;\n\treadonly entrypoint: NotebookRendererEntrypoint;\n\treadonly extensionLocation: URI;\n\treadonly extensionId: ExtensionIdentifier;\n\treadonly messaging: RendererMessagingSpec;\n\n\treadonly mimeTypes: readonly string[];\n\n\treadonly isBuiltin: boolean;\n\n\tmatchesWithoutKernel(mimeType: string): NotebookRendererMatch;\n\tmatches(mimeType: string, kernelProvides: ReadonlyArray<string>): NotebookRendererMatch;\n}\n\nexport interface INotebookStaticPreloadInfo {\n\treadonly type: string;\n\treadonly entrypoint: URI;\n\treadonly extensionLocation: URI;\n\treadonly localResourceRoots: readonly URI[];\n}\n\nexport interface IOrderedMimeType {\n\tmimeType: string;\n\trendererId: string;\n\tisTrusted: boolean;\n}\n\nexport interface IOutputItemDto {\n\treadonly mime: string;\n\treadonly data: VSBuffer;\n}\n\nexport interface IOutputDto {\n\toutputs: IOutputItemDto[];\n\toutputId: string;\n\tmetadata?: Record<string, any>;\n}\n\nexport interface ICellOutput {\n\treadonly versionId: number;\n\toutputs: IOutputItemDto[];\n\tmetadata?: Record<string, any>;\n\toutputId: string;\n\t/**\n\t * Alternative output id that's reused when the output is updated.\n\t */\n\talternativeOutputId: string;\n\tonDidChangeData: Event<void>;\n\treplaceData(items: IOutputDto): void;\n\tappendData(items: IOutputItemDto[]): void;\n\tappendedSinceVersion(versionId: number, mime: string): VSBuffer | undefined;\n\tasDto(): IOutputDto;\n\tbumpVersion(): void;\n\tdispose(): void;\n}\n\nexport interface CellInternalMetadataChangedEvent {\n\treadonly lastRunSuccessChanged?: boolean;\n}\n\nexport interface ICell {\n\treadonly uri: URI;\n\thandle: number;\n\tlanguage: string;\n\tcellKind: CellKind;\n\toutputs: ICellOutput[];\n\tmetadata: NotebookCellMetadata;\n\tinternalMetadata: NotebookCellInternalMetadata;\n\tgetHashValue(): number;\n\ttextBuffer: IReadonlyTextBuffer;\n\tonDidChangeOutputs?: Event<NotebookCellOutputsSplice>;\n\tonDidChangeOutputItems?: Event<void>;\n\tonDidChangeLanguage: Event<string>;\n\tonDidChangeMetadata: Event<void>;\n\tonDidChangeInternalMetadata: Event<CellInternalMetadataChangedEvent>;\n}\n\nexport interface INotebookTextModel {\n\treadonly viewType: string;\n\tmetadata: NotebookDocumentMetadata;\n\treadonly transientOptions: TransientOptions;\n\treadonly uri: URI;\n\treadonly versionId: number;\n\treadonly length: number;\n\treadonly cells: readonly ICell[];\n\treset(cells: ICellDto2[], metadata: NotebookDocumentMetadata, transientOptions: TransientOptions): void;\n\tapplyEdits(rawEdits: ICellEditOperation[], synchronous: boolean, beginSelectionState: ISelectionState | undefined, endSelectionsComputer: () => ISelectionState | undefined, undoRedoGroup: UndoRedoGroup | undefined, computeUndoRedo?: boolean): boolean;\n\tonDidChangeContent: Event<NotebookTextModelChangedEvent>;\n\tonWillDispose: Event<void>;\n}\n\nexport type NotebookCellTextModelSplice<T> = [\n\tstart: number,\n\tdeleteCount: number,\n\tnewItems: T[]\n];\n\nexport type NotebookCellOutputsSplice = {\n\tstart: number /* start */;\n\tdeleteCount: number /* delete count */;\n\tnewOutputs: ICellOutput[];\n};\n\nexport interface IMainCellDto {\n\thandle: number;\n\turi: UriComponents;\n\tsource: string[];\n\teol: string;\n\tlanguage: string;\n\tcellKind: CellKind;\n\toutputs: IOutputDto[];\n\tmetadata?: NotebookCellMetadata;\n\tinternalMetadata?: NotebookCellInternalMetadata;\n}\n\nexport enum NotebookCellsChangeType {\n\tModelChange = 1,\n\tMove = 2,\n\tChangeCellLanguage = 5,\n\tInitialize = 6,\n\tChangeCellMetadata = 7,\n\tOutput = 8,\n\tOutputItem = 9,\n\tChangeCellContent = 10,\n\tChangeDocumentMetadata = 11,\n\tChangeCellInternalMetadata = 12,\n\tChangeCellMime = 13,\n\tUnknown = 100\n}\n\nexport interface NotebookCellsInitializeEvent<T> {\n\treadonly kind: NotebookCellsChangeType.Initialize;\n\treadonly changes: NotebookCellTextModelSplice<T>[];\n}\n\nexport interface NotebookCellContentChangeEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellContent;\n\treadonly index: number;\n}\n\nexport interface NotebookCellsModelChangedEvent<T> {\n\treadonly kind: NotebookCellsChangeType.ModelChange;\n\treadonly changes: NotebookCellTextModelSplice<T>[];\n}\n\nexport interface NotebookCellsModelMoveEvent<T> {\n\treadonly kind: NotebookCellsChangeType.Move;\n\treadonly index: number;\n\treadonly length: number;\n\treadonly newIdx: number;\n\treadonly cells: T[];\n}\n\nexport interface NotebookOutputChangedEvent {\n\treadonly kind: NotebookCellsChangeType.Output;\n\treadonly index: number;\n\treadonly outputs: IOutputDto[];\n\treadonly append: boolean;\n}\n\nexport interface NotebookOutputItemChangedEvent {\n\treadonly kind: NotebookCellsChangeType.OutputItem;\n\treadonly index: number;\n\treadonly outputId: string;\n\treadonly outputItems: IOutputItemDto[];\n\treadonly append: boolean;\n}\n\nexport interface NotebookCellsChangeLanguageEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellLanguage;\n\treadonly index: number;\n\treadonly language: string;\n}\n\nexport interface NotebookCellsChangeMimeEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellMime;\n\treadonly index: number;\n\treadonly mime: string | undefined;\n}\n\nexport interface NotebookCellsChangeMetadataEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellMetadata;\n\treadonly index: number;\n\treadonly metadata: NotebookCellMetadata;\n}\n\nexport interface NotebookCellsChangeInternalMetadataEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellInternalMetadata;\n\treadonly index: number;\n\treadonly internalMetadata: NotebookCellInternalMetadata;\n}\n\nexport interface NotebookDocumentChangeMetadataEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeDocumentMetadata;\n\treadonly metadata: NotebookDocumentMetadata;\n}\n\nexport interface NotebookDocumentUnknownChangeEvent {\n\treadonly kind: NotebookCellsChangeType.Unknown;\n}\n\nexport type NotebookRawContentEventDto = NotebookCellsInitializeEvent<IMainCellDto> | NotebookDocumentChangeMetadataEvent | NotebookCellContentChangeEvent | NotebookCellsModelChangedEvent<IMainCellDto> | NotebookCellsModelMoveEvent<IMainCellDto> | NotebookOutputChangedEvent | NotebookOutputItemChangedEvent | NotebookCellsChangeLanguageEvent | NotebookCellsChangeMimeEvent | NotebookCellsChangeMetadataEvent | NotebookCellsChangeInternalMetadataEvent | NotebookDocumentUnknownChangeEvent;\n\nexport type NotebookCellsChangedEventDto = {\n\treadonly rawEvents: NotebookRawContentEventDto[];\n\treadonly versionId: number;\n};\n\nexport type NotebookRawContentEvent = (NotebookCellsInitializeEvent<ICell> | NotebookDocumentChangeMetadataEvent | NotebookCellContentChangeEvent | NotebookCellsModelChangedEvent<ICell> | NotebookCellsModelMoveEvent<ICell> | NotebookOutputChangedEvent | NotebookOutputItemChangedEvent | NotebookCellsChangeLanguageEvent | NotebookCellsChangeMimeEvent | NotebookCellsChangeMetadataEvent | NotebookCellsChangeInternalMetadataEvent | NotebookDocumentUnknownChangeEvent) & { transient: boolean };\n\nexport enum SelectionStateType {\n\tHandle = 0,\n\tIndex = 1\n}\n\nexport interface ISelectionHandleState {\n\tkind: SelectionStateType.Handle;\n\tprimary: number | null;\n\tselections: number[];\n}\n\nexport interface ISelectionIndexState {\n\tkind: SelectionStateType.Index;\n\tfocus: ICellRange;\n\tselections: ICellRange[];\n}\n\nexport type ISelectionState = ISelectionHandleState | ISelectionIndexState;\n\nexport type NotebookTextModelChangedEvent = {\n\treadonly rawEvents: NotebookRawContentEvent[];\n\treadonly versionId: number;\n\treadonly synchronous: boolean | undefined;\n\treadonly endSelectionState: ISelectionState | undefined;\n};\n\nexport type NotebookTextModelWillAddRemoveEvent = {\n\treadonly rawEvent: NotebookCellsModelChangedEvent<ICell>;\n};\n\nexport const enum CellEditType {\n\tReplace = 1,\n\tOutput = 2,\n\tMetadata = 3,\n\tCellLanguage = 4,\n\tDocumentMetadata = 5,\n\tMove = 6,\n\tOutputItems = 7,\n\tPartialMetadata = 8,\n\tPartialInternalMetadata = 9,\n}\n\nexport interface ICellDto2 {\n\tsource: string;\n\tlanguage: string;\n\tmime: string | undefined;\n\tcellKind: CellKind;\n\toutputs: IOutputDto[];\n\tmetadata?: NotebookCellMetadata;\n\tinternalMetadata?: NotebookCellInternalMetadata;\n\tcollapseState?: NotebookCellCollapseState;\n}\n\nexport interface ICellReplaceEdit {\n\teditType: CellEditType.Replace;\n\tindex: number;\n\tcount: number;\n\tcells: ICellDto2[];\n}\n\nexport interface ICellOutputEdit {\n\teditType: CellEditType.Output;\n\tindex: number;\n\toutputs: IOutputDto[];\n\tappend?: boolean;\n}\n\nexport interface ICellOutputEditByHandle {\n\teditType: CellEditType.Output;\n\thandle: number;\n\toutputs: IOutputDto[];\n\tappend?: boolean;\n}\n\nexport interface ICellOutputItemEdit {\n\teditType: CellEditType.OutputItems;\n\toutputId: string;\n\titems: IOutputItemDto[];\n\tappend?: boolean;\n}\n\nexport interface ICellMetadataEdit {\n\teditType: CellEditType.Metadata;\n\tindex: number;\n\tmetadata: NotebookCellMetadata;\n}\n\n// These types are nullable because we need to use 'null' on the EH side so it is JSON-stringified\nexport type NullablePartialNotebookCellMetadata = {\n\t[Key in keyof Partial<NotebookCellMetadata>]: NotebookCellMetadata[Key] | null\n};\n\nexport interface ICellPartialMetadataEdit {\n\teditType: CellEditType.PartialMetadata;\n\tindex: number;\n\tmetadata: NullablePartialNotebookCellMetadata;\n}\n\nexport interface ICellPartialMetadataEditByHandle {\n\teditType: CellEditType.PartialMetadata;\n\thandle: number;\n\tmetadata: NullablePartialNotebookCellMetadata;\n}\n\nexport type NullablePartialNotebookCellInternalMetadata = {\n\t[Key in keyof Partial<NotebookCellInternalMetadata>]: NotebookCellInternalMetadata[Key] | null\n};\nexport interface ICellPartialInternalMetadataEdit {\n\teditType: CellEditType.PartialInternalMetadata;\n\tindex: number;\n\tinternalMetadata: NullablePartialNotebookCellInternalMetadata;\n}\n\nexport interface ICellPartialInternalMetadataEditByHandle {\n\teditType: CellEditType.PartialInternalMetadata;\n\thandle: number;\n\tinternalMetadata: NullablePartialNotebookCellInternalMetadata;\n}\n\nexport interface ICellLanguageEdit {\n\teditType: CellEditType.CellLanguage;\n\tindex: number;\n\tlanguage: string;\n}\n\nexport interface IDocumentMetadataEdit {\n\teditType: CellEditType.DocumentMetadata;\n\tmetadata: NotebookDocumentMetadata;\n}\n\nexport interface ICellMoveEdit {\n\teditType: CellEditType.Move;\n\tindex: number;\n\tlength: number;\n\tnewIdx: number;\n}\n\nexport type IImmediateCellEditOperation = ICellOutputEditByHandle | ICellPartialMetadataEditByHandle | ICellOutputItemEdit | ICellPartialInternalMetadataEdit | ICellPartialInternalMetadataEditByHandle | ICellPartialMetadataEdit;\nexport type ICellEditOperation = IImmediateCellEditOperation | ICellReplaceEdit | ICellOutputEdit | ICellMetadataEdit | ICellPartialMetadataEdit | ICellPartialInternalMetadataEdit | IDocumentMetadataEdit | ICellMoveEdit | ICellOutputItemEdit | ICellLanguageEdit;\n\n\nexport interface IWorkspaceNotebookCellEdit {\n\tmetadata?: WorkspaceEditMetadata;\n\tresource: URI;\n\tnotebookVersionId: number | undefined;\n\tcellEdit: ICellPartialMetadataEdit | IDocumentMetadataEdit | ICellReplaceEdit;\n}\n\nexport interface IWorkspaceNotebookCellEditDto {\n\tmetadata?: WorkspaceEditMetadata;\n\tresource: URI;\n\tnotebookVersionId: number | undefined;\n\tcellEdit: ICellPartialMetadataEdit | IDocumentMetadataEdit | ICellReplaceEdit;\n}\n\nexport interface NotebookData {\n\treadonly cells: ICellDto2[];\n\treadonly metadata: NotebookDocumentMetadata;\n}\n\n\nexport interface INotebookContributionData {\n\textension?: ExtensionIdentifier;\n\tproviderDisplayName: string;\n\tdisplayName: string;\n\tfilenamePattern: (string | glob.IRelativePattern | INotebookExclusiveDocumentFilter)[];\n\texclusive: boolean;\n}\n\n\nexport namespace CellUri {\n\texport const scheme = Schemas.vscodeNotebookCell;\n\texport function generate(notebook: URI, handle: number): URI {\n\t\treturn generateUri(notebook, handle);\n\t}\n\n\texport function parse(cell: URI): { notebook: URI; handle: number } | undefined {\n\t\treturn parseUri(cell);\n\t}\n\n\texport function generateCellOutputUri(notebook: URI, outputId?: string) {\n\t\treturn notebook.with({\n\t\t\tscheme: Schemas.vscodeNotebookCellOutput,\n\t\t\tfragment: `op${outputId ?? ''},${notebook.scheme !== Schemas.file ? notebook.scheme : ''}`\n\t\t});\n\t}\n\n\texport function parseCellOutputUri(uri: URI): { notebook: URI; outputId?: string } | undefined {\n\t\tif (uri.scheme !== Schemas.vscodeNotebookCellOutput) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst match = /^op([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?\\,(.*)$/i.exec(uri.fragment);\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst outputId = (match[1] && match[1] !== '') ? match[1] : undefined;\n\t\tconst scheme = match[2];\n\t\treturn {\n\t\t\toutputId,\n\t\t\tnotebook: uri.with({\n\t\t\t\tscheme: scheme || Schemas.file,\n\t\t\t\tfragment: null\n\t\t\t})\n\t\t};\n\t}\n\n\texport function generateCellPropertyUri(notebook: URI, handle: number, scheme: string): URI {\n\t\treturn CellUri.generate(notebook, handle).with({ scheme: scheme });\n\t}\n\n\texport function parseCellPropertyUri(uri: URI, propertyScheme: string) {\n\t\tif (uri.scheme !== propertyScheme) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn CellUri.parse(uri.with({ scheme: scheme }));\n\t}\n}\n\nconst normalizeSlashes = (str: string) => isWindows ? str.replace(/\\//g, '\\\\') : str;\n\ninterface IMimeTypeWithMatcher {\n\tpattern: string;\n\tmatches: glob.ParsedPattern;\n}\n\nexport class MimeTypeDisplayOrder {\n\tprivate readonly order: IMimeTypeWithMatcher[];\n\n\tconstructor(\n\t\tinitialValue: readonly string[] = [],\n\t\tprivate readonly defaultOrder = NOTEBOOK_DISPLAY_ORDER,\n\t) {\n\t\tthis.order = [...new Set(initialValue)].map(pattern => ({\n\t\t\tpattern,\n\t\t\tmatches: glob.parse(normalizeSlashes(pattern))\n\t\t}));\n\t}\n\n\t/**\n\t * Returns a sorted array of the input mimetypes.\n\t */\n\tpublic sort(mimetypes: Iterable<string>): string[] {\n\t\tconst remaining = new Map(Iterable.map(mimetypes, m => [m, normalizeSlashes(m)]));\n\t\tlet sorted: string[] = [];\n\n\t\tfor (const { matches } of this.order) {\n\t\t\tfor (const [original, normalized] of remaining) {\n\t\t\t\tif (matches(normalized)) {\n\t\t\t\t\tsorted.push(original);\n\t\t\t\t\tremaining.delete(original);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (remaining.size) {\n\t\t\tsorted = sorted.concat([...remaining.keys()].sort(\n\t\t\t\t(a, b) => this.defaultOrder.indexOf(a) - this.defaultOrder.indexOf(b),\n\t\t\t));\n\t\t}\n\n\t\treturn sorted;\n\t}\n\n\t/**\n\t * Records that the user selected the given mimetype over the other\n\t * possible mimetypes, prioritizing it for future reference.\n\t */\n\tpublic prioritize(chosenMimetype: string, otherMimetypes: readonly string[]) {\n\t\tconst chosenIndex = this.findIndex(chosenMimetype);\n\t\tif (chosenIndex === -1) {\n\t\t\t// always first, nothing more to do\n\t\t\tthis.order.unshift({ pattern: chosenMimetype, matches: glob.parse(normalizeSlashes(chosenMimetype)) });\n\t\t\treturn;\n\t\t}\n\n\t\t// Get the other mimetypes that are before the chosenMimetype. Then, move\n\t\t// them after it, retaining order.\n\t\tconst uniqueIndicies = new Set(otherMimetypes.map(m => this.findIndex(m, chosenIndex)));\n\t\tuniqueIndicies.delete(-1);\n\t\tconst otherIndices = Array.from(uniqueIndicies).sort();\n\t\tthis.order.splice(chosenIndex + 1, 0, ...otherIndices.map(i => this.order[i]));\n\n\t\tfor (let oi = otherIndices.length - 1; oi >= 0; oi--) {\n\t\t\tthis.order.splice(otherIndices[oi], 1);\n\t\t}\n\t}\n\n\t/**\n\t * Gets an array of in-order mimetype preferences.\n\t */\n\tpublic toArray() {\n\t\treturn this.order.map(o => o.pattern);\n\t}\n\n\tprivate findIndex(mimeType: string, maxIndex = this.order.length) {\n\t\tconst normalized = normalizeSlashes(mimeType);\n\t\tfor (let i = 0; i < maxIndex; i++) {\n\t\t\tif (this.order[i].matches(normalized)) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t}\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\treadonly toInsert: T[];\n\tdeleteCount: number;\n}\n\nexport function diff<T>(before: T[], after: T[], contains: (a: T) => boolean, equal: (a: T, b: T) => boolean = (a: T, b: T) => a === b): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\n\t\tif (equal(beforeElement, afterElement)) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (contains(afterElement)) {\n\t\t\t// `afterElement` exists before, which means some elements before `afterElement` are deleted\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else {\n\t\t\t// `afterElement` added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport interface ICellEditorViewState {\n\tselections: editorCommon.ICursorState[];\n}\n\nexport const NOTEBOOK_EDITOR_CURSOR_BOUNDARY = new RawContextKey<'none' | 'top' | 'bottom' | 'both'>('notebookEditorCursorAtBoundary', 'none');\n\nexport const NOTEBOOK_EDITOR_CURSOR_LINE_BOUNDARY = new RawContextKey<'none' | 'start' | 'end' | 'both'>('notebookEditorCursorAtLineBoundary', 'none');\n\nexport interface INotebookLoadOptions {\n\t/**\n\t * Go to disk bypassing any cache of the model if any.\n\t */\n\tforceReadFromFile?: boolean;\n\t/**\n\t * If provided, the size of the file will be checked against the limits\n\t * and an error will be thrown if any limit is exceeded.\n\t */\n\treadonly limits?: IFileReadLimits;\n}\n\nexport interface IResolvedNotebookEditorModel extends INotebookEditorModel {\n\tnotebook: NotebookTextModel;\n}\n\nexport interface INotebookEditorModel extends IDisposable {\n\treadonly onDidChangeDirty: Event<void>;\n\treadonly onDidSave: Event<IWorkingCopySaveEvent>;\n\treadonly onDidChangeOrphaned: Event<void>;\n\treadonly onDidChangeReadonly: Event<void>;\n\treadonly onDidRevertUntitled: Event<void>;\n\treadonly resource: URI;\n\treadonly viewType: string;\n\treadonly notebook: INotebookTextModel | undefined;\n\treadonly hasErrorState: boolean;\n\tisResolved(): this is IResolvedNotebookEditorModel;\n\tisDirty(): boolean;\n\tisModified(): boolean;\n\tisReadonly(): boolean | IMarkdownString;\n\tisOrphaned(): boolean;\n\thasAssociatedFilePath(): boolean;\n\tload(options?: INotebookLoadOptions): Promise<IResolvedNotebookEditorModel>;\n\tsave(options?: ISaveOptions): Promise<boolean>;\n\tsaveAs(target: URI): Promise<IUntypedEditorInput | undefined>;\n\trevert(options?: IRevertOptions): Promise<void>;\n}\n\nexport interface INotebookDiffEditorModel extends IDisposable {\n\toriginal: IResolvedNotebookEditorModel;\n\tmodified: IResolvedNotebookEditorModel;\n}\n\nexport interface NotebookDocumentBackupData extends IWorkingCopyBackupMeta {\n\treadonly viewType: string;\n\treadonly backupId?: string;\n\treadonly mtime?: number;\n}\n\nexport enum NotebookEditorPriority {\n\tdefault = 'default',\n\toption = 'option',\n}\n\nexport interface INotebookSearchOptions {\n\tregex?: boolean;\n\twholeWord?: boolean;\n\tcaseSensitive?: boolean;\n\twordSeparators?: string;\n\tincludeMarkupInput?: boolean;\n\tincludeMarkupPreview?: boolean;\n\tincludeCodeInput?: boolean;\n\tincludeOutput?: boolean;\n}\n\nexport interface INotebookExclusiveDocumentFilter {\n\tinclude?: string | glob.IRelativePattern;\n\texclude?: string | glob.IRelativePattern;\n}\n\nexport interface INotebookDocumentFilter {\n\tviewType?: string | string[];\n\tfilenamePattern?: string | glob.IRelativePattern | INotebookExclusiveDocumentFilter;\n}\n\n//TODO@rebornix test\n\nexport function isDocumentExcludePattern(filenamePattern: string | glob.IRelativePattern | INotebookExclusiveDocumentFilter): filenamePattern is { include: string | glob.IRelativePattern; exclude: string | glob.IRelativePattern } {\n\tconst arg = filenamePattern as INotebookExclusiveDocumentFilter;\n\n\tif ((typeof arg.include === 'string' || glob.isRelativePattern(arg.include))\n\t\t&& (typeof arg.exclude === 'string' || glob.isRelativePattern(arg.exclude))) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\nexport function notebookDocumentFilterMatch(filter: INotebookDocumentFilter, viewType: string, resource: URI): boolean {\n\tif (Array.isArray(filter.viewType) && filter.viewType.indexOf(viewType) >= 0) {\n\t\treturn true;\n\t}\n\n\tif (filter.viewType === viewType) {\n\t\treturn true;\n\t}\n\n\tif (filter.filenamePattern) {\n\t\tconst filenamePattern = isDocumentExcludePattern(filter.filenamePattern) ? filter.filenamePattern.include : (filter.filenamePattern as string | glob.IRelativePattern);\n\t\tconst excludeFilenamePattern = isDocumentExcludePattern(filter.filenamePattern) ? filter.filenamePattern.exclude : undefined;\n\n\t\tif (glob.match(filenamePattern, basename(resource.fsPath).toLowerCase())) {\n\t\t\tif (excludeFilenamePattern) {\n\t\t\t\tif (glob.match(excludeFilenamePattern, basename(resource.fsPath).toLowerCase())) {\n\t\t\t\t\t// should exclude\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport interface INotebookCellStatusBarItemProvider {\n\tviewType: string;\n\tonDidChangeStatusBarItems?: Event<void>;\n\tprovideCellStatusBarItems(uri: URI, index: number, token: CancellationToken): Promise<INotebookCellStatusBarItemList | undefined>;\n}\n\n\nexport interface INotebookDiffResult {\n\tcellsDiff: IDiffResult;\n\tlinesDiff?: { originalCellhandle: number; modifiedCellhandle: number; lineChanges: ILineChange[] }[];\n}\n\nexport interface INotebookCellStatusBarItem {\n\treadonly alignment: CellStatusbarAlignment;\n\treadonly priority?: number;\n\treadonly text: string;\n\treadonly color?: string | ThemeColor;\n\treadonly backgroundColor?: string | ThemeColor;\n\treadonly tooltip?: string | IMarkdownString;\n\treadonly command?: string | Command;\n\treadonly accessibilityInformation?: IAccessibilityInformation;\n\treadonly opacity?: string;\n\treadonly onlyShowWhenActive?: boolean;\n}\n\nexport interface INotebookCellStatusBarItemList {\n\titems: INotebookCellStatusBarItem[];\n\tdispose?(): void;\n}\n\nexport type ShowCellStatusBarType = 'hidden' | 'visible' | 'visibleAfterExecute';\nexport const NotebookSetting = {\n\tdisplayOrder: 'notebook.displayOrder',\n\tcellToolbarLocation: 'notebook.cellToolbarLocation',\n\tcellToolbarVisibility: 'notebook.cellToolbarVisibility',\n\tshowCellStatusBar: 'notebook.showCellStatusBar',\n\ttextDiffEditorPreview: 'notebook.diff.enablePreview',\n\tdiffOverviewRuler: 'notebook.diff.overviewRuler',\n\texperimentalInsertToolbarAlignment: 'notebook.experimental.insertToolbarAlignment',\n\tcompactView: 'notebook.compactView',\n\tfocusIndicator: 'notebook.cellFocusIndicator',\n\tinsertToolbarLocation: 'notebook.insertToolbarLocation',\n\tglobalToolbar: 'notebook.globalToolbar',\n\tstickyScrollEnabled: 'notebook.stickyScroll.enabled',\n\tstickyScrollMode: 'notebook.stickyScroll.mode',\n\tundoRedoPerCell: 'notebook.undoRedoPerCell',\n\tconsolidatedOutputButton: 'notebook.consolidatedOutputButton',\n\tshowFoldingControls: 'notebook.showFoldingControls',\n\tdragAndDropEnabled: 'notebook.dragAndDropEnabled',\n\tcellEditorOptionsCustomizations: 'notebook.editorOptionsCustomizations',\n\tconsolidatedRunButton: 'notebook.consolidatedRunButton',\n\topenGettingStarted: 'notebook.experimental.openGettingStarted',\n\tglobalToolbarShowLabel: 'notebook.globalToolbarShowLabel',\n\tmarkupFontSize: 'notebook.markup.fontSize',\n\tinteractiveWindowCollapseCodeCells: 'interactiveWindow.collapseCellInputCode',\n\toutputScrollingDeprecated: 'notebook.experimental.outputScrolling',\n\toutputScrolling: 'notebook.output.scrolling',\n\ttextOutputLineLimit: 'notebook.output.textLineLimit',\n\tLinkifyOutputFilePaths: 'notebook.output.linkifyFilePaths',\n\tminimalErrorRendering: 'notebook.output.minimalErrorRendering',\n\tformatOnSave: 'notebook.formatOnSave.enabled',\n\tinsertFinalNewline: 'notebook.insertFinalNewline',\n\tformatOnCellExecution: 'notebook.formatOnCellExecution',\n\tcodeActionsOnSave: 'notebook.codeActionsOnSave',\n\toutputWordWrap: 'notebook.output.wordWrap',\n\toutputLineHeightDeprecated: 'notebook.outputLineHeight',\n\toutputLineHeight: 'notebook.output.lineHeight',\n\toutputFontSizeDeprecated: 'notebook.outputFontSize',\n\toutputFontSize: 'notebook.output.fontSize',\n\toutputFontFamilyDeprecated: 'notebook.outputFontFamily',\n\toutputFontFamily: 'notebook.output.fontFamily',\n\tfindScope: 'notebook.find.scope',\n\tlogging: 'notebook.logging',\n\tconfirmDeleteRunningCell: 'notebook.confirmDeleteRunningCell',\n\tremoteSaving: 'notebook.experimental.remoteSave',\n\tgotoSymbolsAllSymbols: 'notebook.gotoSymbols.showAllSymbols',\n\toutlineShowMarkdownHeadersOnly: 'notebook.outline.showMarkdownHeadersOnly',\n\toutlineShowCodeCells: 'notebook.outline.showCodeCells',\n\toutlineShowCodeCellSymbols: 'notebook.outline.showCodeCellSymbols',\n\tbreadcrumbsShowCodeCells: 'notebook.breadcrumbs.showCodeCells',\n\tscrollToRevealCell: 'notebook.scrolling.revealNextCellOnExecute',\n\tcellChat: 'notebook.experimental.cellChat',\n\tcellGenerate: 'notebook.experimental.generate',\n\tnotebookVariablesView: 'notebook.experimental.variablesView',\n\tInteractiveWindowPromptToSave: 'interactiveWindow.promptToSaveOnClose',\n\tcellFailureDiagnostics: 'notebook.cellFailureDiagnostics',\n\toutputBackupSizeLimit: 'notebook.backup.sizeLimit',\n} as const;\n\nexport const enum CellStatusbarAlignment {\n\tLeft = 1,\n\tRight = 2\n}\n\nexport class NotebookWorkingCopyTypeIdentifier {\n\n\tprivate static _prefix = 'notebook/';\n\n\tstatic create(viewType: string): string {\n\t\treturn `${NotebookWorkingCopyTypeIdentifier._prefix}${viewType}`;\n\t}\n\n\tstatic parse(candidate: string): string | undefined {\n\t\tif (candidate.startsWith(NotebookWorkingCopyTypeIdentifier._prefix)) {\n\t\t\treturn candidate.substring(NotebookWorkingCopyTypeIdentifier._prefix.length);\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport interface NotebookExtensionDescription {\n\treadonly id: ExtensionIdentifier;\n\treadonly location: UriComponents | undefined;\n}\n\n/**\n * Whether the provided mime type is a text stream like `stdout`, `stderr`.\n */\nexport function isTextStreamMime(mimeType: string) {\n\treturn ['application/vnd.code.notebook.stdout', 'application/vnd.code.notebook.stderr'].includes(mimeType);\n}\n\n\nconst textDecoder = new TextDecoder();\n\n/**\n * Given a stream of individual stdout outputs, this function will return the compressed lines, escaping some of the common terminal escape codes.\n * E.g. some terminal escape codes would result in the previous line getting cleared, such if we had 3 lines and\n * last line contained such a code, then the result string would be just the first two lines.\n * @returns a single VSBuffer with the concatenated and compressed data, and whether any compression was done.\n */\nexport function compressOutputItemStreams(outputs: Uint8Array[]) {\n\tconst buffers: Uint8Array[] = [];\n\tlet startAppending = false;\n\n\t// Pick the first set of outputs with the same mime type.\n\tfor (const output of outputs) {\n\t\tif ((buffers.length === 0 || startAppending)) {\n\t\t\tbuffers.push(output);\n\t\t\tstartAppending = true;\n\t\t}\n\t}\n\n\tlet didCompression = compressStreamBuffer(buffers);\n\tconst concatenated = VSBuffer.concat(buffers.map(buffer => VSBuffer.wrap(buffer)));\n\tconst data = formatStreamText(concatenated);\n\tdidCompression = didCompression || data.byteLength !== concatenated.byteLength;\n\treturn { data, didCompression };\n}\n\nexport const MOVE_CURSOR_1_LINE_COMMAND = `${String.fromCharCode(27)}[A`;\nconst MOVE_CURSOR_1_LINE_COMMAND_BYTES = MOVE_CURSOR_1_LINE_COMMAND.split('').map(c => c.charCodeAt(0));\nconst LINE_FEED = 10;\nfunction compressStreamBuffer(streams: Uint8Array[]) {\n\tlet didCompress = false;\n\tstreams.forEach((stream, index) => {\n\t\tif (index === 0 || stream.length < MOVE_CURSOR_1_LINE_COMMAND.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst previousStream = streams[index - 1];\n\n\t\t// Remove the previous line if required.\n\t\tconst command = stream.subarray(0, MOVE_CURSOR_1_LINE_COMMAND.length);\n\t\tif (command[0] === MOVE_CURSOR_1_LINE_COMMAND_BYTES[0] && command[1] === MOVE_CURSOR_1_LINE_COMMAND_BYTES[1] && command[2] === MOVE_CURSOR_1_LINE_COMMAND_BYTES[2]) {\n\t\t\tconst lastIndexOfLineFeed = previousStream.lastIndexOf(LINE_FEED);\n\t\t\tif (lastIndexOfLineFeed === -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdidCompress = true;\n\t\t\tstreams[index - 1] = previousStream.subarray(0, lastIndexOfLineFeed);\n\t\t\tstreams[index] = stream.subarray(MOVE_CURSOR_1_LINE_COMMAND.length);\n\t\t}\n\t});\n\treturn didCompress;\n}\n\n\n\n/**\n * Took this from jupyter/notebook\n * https://github.com/jupyter/notebook/blob/b8b66332e2023e83d2ee04f83d8814f567e01a4e/notebook/static/base/js/utils.js\n * Remove characters that are overridden by backspace characters\n */\nfunction fixBackspace(txt: string) {\n\tlet tmp = txt;\n\tdo {\n\t\ttxt = tmp;\n\t\t// Cancel out anything-but-newline followed by backspace\n\t\ttmp = txt.replace(/[^\\n]\\x08/gm, '');\n\t} while (tmp.length < txt.length);\n\treturn txt;\n}\n\n/**\n * Remove chunks that should be overridden by the effect of carriage return characters\n * From https://github.com/jupyter/notebook/blob/master/notebook/static/base/js/utils.js\n */\nfunction fixCarriageReturn(txt: string) {\n\ttxt = txt.replace(/\\r+\\n/gm, '\\n'); // \\r followed by \\n --> newline\n\twhile (txt.search(/\\r[^$]/g) > -1) {\n\t\tconst base = txt.match(/^(.*)\\r+/m)![1];\n\t\tlet insert = txt.match(/\\r+(.*)$/m)![1];\n\t\tinsert = insert + base.slice(insert.length, base.length);\n\t\ttxt = txt.replace(/\\r+.*$/m, '\\r').replace(/^.*\\r/m, insert);\n\t}\n\treturn txt;\n}\n\nconst BACKSPACE_CHARACTER = '\\b'.charCodeAt(0);\nconst CARRIAGE_RETURN_CHARACTER = '\\r'.charCodeAt(0);\nfunction formatStreamText(buffer: VSBuffer): VSBuffer {\n\t// We have special handling for backspace and carriage return characters.\n\t// Don't unnecessary decode the bytes if we don't need to perform any processing.\n\tif (!buffer.buffer.includes(BACKSPACE_CHARACTER) && !buffer.buffer.includes(CARRIAGE_RETURN_CHARACTER)) {\n\t\treturn buffer;\n\t}\n\t// Do the same thing jupyter is doing\n\treturn VSBuffer.fromString(fixCarriageReturn(fixBackspace(textDecoder.decode(buffer.buffer))));\n}\n\nexport interface INotebookKernelSourceAction {\n\treadonly label: string;\n\treadonly description?: string;\n\treadonly detail?: string;\n\treadonly command?: string | Command;\n\treadonly documentation?: UriComponents | string;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ISequence, LcsDiff } from 'vs/base/common/diff/diff';\nimport { doHash, hash, numberHash } from 'vs/base/common/hash';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { IRequestHandler } from 'vs/base/common/worker/simpleWorker';\nimport * as model from 'vs/editor/common/model';\nimport { PieceTreeTextBufferBuilder } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder';\nimport { CellKind, ICellDto2, IMainCellDto, INotebookDiffResult, IOutputDto, NotebookCellInternalMetadata, NotebookCellMetadata, NotebookCellsChangedEventDto, NotebookCellsChangeType, NotebookCellTextModelSplice, NotebookData, NotebookDocumentMetadata } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { Range } from 'vs/editor/common/core/range';\nimport { INotebookWorkerHost } from 'vs/workbench/contrib/notebook/common/services/notebookWorkerHost';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { SearchParams } from 'vs/editor/common/model/textModelSearch';\n\nfunction bufferHash(buffer: VSBuffer): number {\n\tlet initialHashVal = numberHash(104579, 0);\n\tfor (let k = 0; k < buffer.buffer.length; k++) {\n\t\tinitialHashVal = doHash(buffer.buffer[k], initialHashVal);\n\t}\n\n\treturn initialHashVal;\n}\n\nclass MirrorCell {\n\tprivate _textBuffer!: model.IReadonlyTextBuffer;\n\n\tget textBuffer() {\n\t\tif (this._textBuffer) {\n\t\t\treturn this._textBuffer;\n\t\t}\n\n\t\tconst builder = new PieceTreeTextBufferBuilder();\n\t\tbuilder.acceptChunk(Array.isArray(this._source) ? this._source.join('\\n') : this._source);\n\t\tconst bufferFactory = builder.finish(true);\n\t\tthis._textBuffer = bufferFactory.create(model.DefaultEndOfLine.LF).textBuffer;\n\n\t\treturn this._textBuffer;\n\t}\n\n\tprivate _primaryKey?: number | null = null;\n\tprimaryKey(): number | null {\n\t\tif (this._primaryKey === undefined) {\n\t\t\tthis._primaryKey = hash(this.getValue());\n\t\t}\n\n\t\treturn this._primaryKey;\n\t}\n\n\tprivate _hash: number | null = null;\n\n\tconstructor(\n\t\treadonly handle: number,\n\t\tprivate _source: string | string[],\n\t\tpublic language: string,\n\t\tpublic cellKind: CellKind,\n\t\tpublic outputs: IOutputDto[],\n\t\tpublic metadata?: NotebookCellMetadata,\n\t\tpublic internalMetadata?: NotebookCellInternalMetadata,\n\n\t) { }\n\n\tgetFullModelRange() {\n\t\tconst lineCount = this.textBuffer.getLineCount();\n\t\treturn new Range(1, 1, lineCount, this.textBuffer.getLineLength(lineCount) + 1);\n\t}\n\n\tgetValue(): string {\n\t\tconst fullRange = this.getFullModelRange();\n\t\treturn this.textBuffer.getValueInRange(fullRange, model.EndOfLinePreference.LF);\n\t}\n\n\tgetComparisonValue(): number {\n\t\tif (this._primaryKey !== null) {\n\t\t\treturn this._primaryKey!;\n\t\t}\n\n\t\tthis._hash = hash([hash(this.language), hash(this.getValue()), this.metadata, this.internalMetadata, this.outputs.map(op => ({\n\t\t\toutputs: op.outputs.map(output => ({\n\t\t\t\tmime: output.mime,\n\t\t\t\tdata: bufferHash(output.data)\n\t\t\t})),\n\t\t\tmetadata: op.metadata\n\t\t}))]);\n\t\treturn this._hash;\n\t}\n\n\tgetHashValue() {\n\t\tif (this._hash !== null) {\n\t\t\treturn this._hash;\n\t\t}\n\n\t\tthis._hash = hash([hash(this.getValue()), this.language, this.metadata, this.internalMetadata]);\n\t\treturn this._hash;\n\t}\n}\n\nclass MirrorNotebookDocument {\n\tconstructor(\n\t\treadonly uri: URI,\n\t\tpublic cells: MirrorCell[],\n\t\tpublic metadata: NotebookDocumentMetadata,\n\t) {\n\t}\n\n\tacceptModelChanged(event: NotebookCellsChangedEventDto) {\n\t\t// note that the cell content change is not applied to the MirrorCell\n\t\t// but it's fine as if a cell content is modified after the first diff, its position will not change any more\n\t\t// TODO@rebornix, but it might lead to interesting bugs in the future.\n\t\tevent.rawEvents.forEach(e => {\n\t\t\tif (e.kind === NotebookCellsChangeType.ModelChange) {\n\t\t\t\tthis._spliceNotebookCells(e.changes);\n\t\t\t} else if (e.kind === NotebookCellsChangeType.Move) {\n\t\t\t\tconst cells = this.cells.splice(e.index, 1);\n\t\t\t\tthis.cells.splice(e.newIdx, 0, ...cells);\n\t\t\t} else if (e.kind === NotebookCellsChangeType.Output) {\n\t\t\t\tconst cell = this.cells[e.index];\n\t\t\t\tcell.outputs = e.outputs;\n\t\t\t} else if (e.kind === NotebookCellsChangeType.ChangeCellLanguage) {\n\t\t\t\tthis._assertIndex(e.index);\n\t\t\t\tconst cell = this.cells[e.index];\n\t\t\t\tcell.language = e.language;\n\t\t\t} else if (e.kind === NotebookCellsChangeType.ChangeCellMetadata) {\n\t\t\t\tthis._assertIndex(e.index);\n\t\t\t\tconst cell = this.cells[e.index];\n\t\t\t\tcell.metadata = e.metadata;\n\t\t\t} else if (e.kind === NotebookCellsChangeType.ChangeCellInternalMetadata) {\n\t\t\t\tthis._assertIndex(e.index);\n\t\t\t\tconst cell = this.cells[e.index];\n\t\t\t\tcell.internalMetadata = e.internalMetadata;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _assertIndex(index: number): void {\n\t\tif (index < 0 || index >= this.cells.length) {\n\t\t\tthrow new Error(`Illegal index ${index}. Cells length: ${this.cells.length}`);\n\t\t}\n\t}\n\n\t_spliceNotebookCells(splices: NotebookCellTextModelSplice<IMainCellDto>[]) {\n\t\tsplices.reverse().forEach(splice => {\n\t\t\tconst cellDtos = splice[2];\n\t\t\tconst newCells = cellDtos.map(cell => {\n\t\t\t\treturn new MirrorCell(\n\t\t\t\t\t(cell as unknown as IMainCellDto).handle,\n\t\t\t\t\tcell.source,\n\t\t\t\t\tcell.language,\n\t\t\t\t\tcell.cellKind,\n\t\t\t\t\tcell.outputs,\n\t\t\t\t\tcell.metadata\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tthis.cells.splice(splice[0], splice[1], ...newCells);\n\t\t});\n\t}\n}\n\nclass CellSequence implements ISequence {\n\n\tconstructor(readonly textModel: MirrorNotebookDocument) {\n\t}\n\n\tgetElements(): string[] | number[] | Int32Array {\n\t\tconst hashValue = new Int32Array(this.textModel.cells.length);\n\t\tfor (let i = 0; i < this.textModel.cells.length; i++) {\n\t\t\thashValue[i] = this.textModel.cells[i].getComparisonValue();\n\t\t}\n\n\t\treturn hashValue;\n\t}\n\n\tgetCellHash(cell: ICellDto2) {\n\t\tconst source = Array.isArray(cell.source) ? cell.source.join('\\n') : cell.source;\n\t\tconst hashVal = hash([hash(source), cell.metadata]);\n\t\treturn hashVal;\n\t}\n}\n\nexport class NotebookEditorSimpleWorker implements IRequestHandler, IDisposable {\n\t_requestHandlerBrand: any;\n\n\tprivate _models: { [uri: string]: MirrorNotebookDocument };\n\n\tconstructor() {\n\t\tthis._models = Object.create(null);\n\t}\n\tdispose(): void {\n\t}\n\n\tpublic acceptNewModel(uri: string, data: NotebookData): void {\n\t\tthis._models[uri] = new MirrorNotebookDocument(URI.parse(uri), data.cells.map(dto => new MirrorCell(\n\t\t\t(dto as unknown as IMainCellDto).handle,\n\t\t\tdto.source,\n\t\t\tdto.language,\n\t\t\tdto.cellKind,\n\t\t\tdto.outputs,\n\t\t\tdto.metadata\n\t\t)), data.metadata);\n\t}\n\n\tpublic acceptModelChanged(strURL: string, event: NotebookCellsChangedEventDto) {\n\t\tconst model = this._models[strURL];\n\t\tmodel?.acceptModelChanged(event);\n\t}\n\n\tpublic acceptRemovedModel(strURL: string): void {\n\t\tif (!this._models[strURL]) {\n\t\t\treturn;\n\t\t}\n\t\tdelete this._models[strURL];\n\t}\n\n\tcomputeDiff(originalUrl: string, modifiedUrl: string): INotebookDiffResult {\n\t\tconst original = this._getModel(originalUrl);\n\t\tconst modified = this._getModel(modifiedUrl);\n\n\t\tconst diff = new LcsDiff(new CellSequence(original), new CellSequence(modified));\n\t\tconst diffResult = diff.ComputeDiff(false);\n\n\t\t/* let cellLineChanges: { originalCellhandle: number, modifiedCellhandle: number, lineChanges: ILineChange[] }[] = [];\n\n\t\tdiffResult.changes.forEach(change => {\n\t\t\tif (change.modifiedLength === 0) {\n\t\t\t\t// deletion ...\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (change.originalLength === 0) {\n\t\t\t\t// insertion\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (let i = 0, len = Math.min(change.modifiedLength, change.originalLength); i < len; i++) {\n\t\t\t\tlet originalIndex = change.originalStart + i;\n\t\t\t\tlet modifiedIndex = change.modifiedStart + i;\n\n\t\t\t\tconst originalCell = original.cells[originalIndex];\n\t\t\t\tconst modifiedCell = modified.cells[modifiedIndex];\n\n\t\t\t\tif (originalCell.getValue() !== modifiedCell.getValue()) {\n\t\t\t\t\t// console.log(`original cell ${originalIndex} content change`);\n\t\t\t\t\tconst originalLines = originalCell.textBuffer.getLinesContent();\n\t\t\t\t\tconst modifiedLines = modifiedCell.textBuffer.getLinesContent();\n\t\t\t\t\tconst diffComputer = new DiffComputer(originalLines, modifiedLines, {\n\t\t\t\t\t\tshouldComputeCharChanges: true,\n\t\t\t\t\t\tshouldPostProcessCharChanges: true,\n\t\t\t\t\t\tshouldIgnoreTrimWhitespace: false,\n\t\t\t\t\t\tshouldMakePrettyDiff: true,\n\t\t\t\t\t\tmaxComputationTime: 5000\n\t\t\t\t\t});\n\n\t\t\t\t\tconst lineChanges = diffComputer.computeDiff().changes;\n\n\t\t\t\t\tcellLineChanges.push({\n\t\t\t\t\t\toriginalCellhandle: originalCell.handle,\n\t\t\t\t\t\tmodifiedCellhandle: modifiedCell.handle,\n\t\t\t\t\t\tlineChanges\n\t\t\t\t\t});\n\n\t\t\t\t\t// console.log(lineDecorations);\n\n\t\t\t\t} else {\n\t\t\t\t\t// console.log(`original cell ${originalIndex} metadata change`);\n\t\t\t\t}\n\n\t\t\t}\n\t\t});\n */\n\t\treturn {\n\t\t\tcellsDiff: diffResult,\n\t\t\t// linesDiff: cellLineChanges\n\t\t};\n\t}\n\n\tcanPromptRecommendation(modelUrl: string): boolean {\n\t\tconst model = this._getModel(modelUrl);\n\t\tconst cells = model.cells;\n\n\t\tfor (let i = 0; i < cells.length; i++) {\n\t\t\tconst cell = cells[i];\n\t\t\tif (cell.cellKind === CellKind.Markup) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (cell.language !== 'python') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst lineCount = cell.textBuffer.getLineCount();\n\t\t\tconst maxLineCount = Math.min(lineCount, 20);\n\t\t\tconst range = new Range(1, 1, maxLineCount, cell.textBuffer.getLineLength(maxLineCount) + 1);\n\t\t\tconst searchParams = new SearchParams('import\\\\s*pandas|from\\\\s*pandas', true, false, null);\n\t\t\tconst searchData = searchParams.parseSearchRequest();\n\n\t\t\tif (!searchData) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst cellMatches = cell.textBuffer.findMatchesLineByLine(range, searchData, true, 1);\n\t\t\tif (cellMatches.length > 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprotected _getModel(uri: string): MirrorNotebookDocument {\n\t\treturn this._models[uri];\n\t}\n}\n\n/**\n * Called on the worker side\n * @internal\n */\nexport function create(host: INotebookWorkerHost): IRequestHandler {\n\treturn new NotebookEditorSimpleWorker();\n}\n"],"mappings":"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","names":["__m","__M","deps","result","i","len","exports","$Ss","$Ts","$Us","$Vs","mapExtToTextMimes","mapExtToMediaMimes","path","ext","path_1","textMime","mimeType","extension","_simplePattern","strict","match","$re","$se","$te","$ue","$ve","$we","$xe","$ye","$ze","$Ae","$Be","$Ce","$De","$Ee","$Fe","obj","candidate","fn","reducer","options","WriteableStreamImpl","e","f","data","resolve","error","listener","errors_1","event","callback","listeners","index","fullDataBuffer","pendingWritePromises","pendingWritePromise","readable","chunks","chunk","maxChunks","lastReadChunk","stream","reject","token","streamListeners","lifecycle_1","buffer","dataListener","errorListener","endListener","t","consumed","transformer","target","prefix","prefixHandled","$He","$Ie","$Je","$Ke","$Le","$Me","$Ne","$Oe","$Pe","$Qe","$Re","$Se","$Te","$Ue","$Ve","$We","$Xe","$Ye","$Ze","$1e","hasBuffer","indexOfTable","lazy_1","textEncoder","textDecoder","$Ge","byteLength","actual","source","buffers","totalLength","ret","offset","element","start","end","array","value","subarray","haystack","needle","needleLen","haystackLen","table","j","destination","streams","bufferedStream","encoded","building","remainder","bufi","append","code","unpadded","base64Alphabet","base64UrlSafeAlphabet","padded","urlSafe","dictionary","output","a","b","c","$og","$pg","$qg","$rg","$sg","$tg","$ug","$vg","$wg","$xg","$yg","$zg","$Ag","$Bg","$Cg","$Dg","$Eg","osPath","sep","firstLetter","pos","platform_1","WINDOWS_INVALID_FILE_CHARS","UNIX_INVALID_FILE_CHARS","WINDOWS_FORBIDDEN_NAMES","name","isWindowsOS","invalidFileChars","pathA","pathB","ignoreCase","identityEquals","strings_1","base","parentCandidate","separator","sepOffset","char0","cwd","pathNormalized","rawPath","segments","line","column","segment","segmentAsNumber","types_1","pathChars","windowsSafePathFirstChars","parent","randomLength","suffix","pathCharsTouse","randomFileName","$Fg","$Gg","$Kg","Schemas","scheme","uri_1","schemes","RemoteAuthoritiesImpl","schema","delegate","product","serverBasePath","paths","authority","host","port","connectionToken","uri","err","errors","query","platform","basePath","FileAccessImpl","resourcePath","require","uriOrModule","moduleIdToUrl","COI","coiHeaders","coiSearchParamName","getHeadersFromQuery","url","params","addSearchParam","urlOrSearch","coop","coep","$Xg","$gh","$hh","$Yg","uri1","uri2","ignoreFragment","network_1","extpath","resource","pathFragment","dirname","normalizedPath","from","to","relativePath","fromPath","toPath","newURI","a1","a2","fsp","p","isRootSep","_","items","resourceAccessor","distinctParents","candidateResource","otherItem","DataUri","parseMetaData","dataUri","metadata","property","key","mime","localScheme","$ih","$jh","$kh","$lh","$mh","$nh","$oh","$ph","$xh","$yh","$zh","$Ah","$Bh","$Qh","$Yh","cancellation_1","thenable","promise","subscription","onfinally","defaultValue","ref","cancellablePromises","resolvedPromiseIndex","promises","cancellablePromise","timeout","onTimeout","promiseResolve","timer","item","res","rej","$qh","promiseFactory","onComplete","$rh","promiseTask","$sh","newPromise","timeoutDeferred","scheduled","handle","microtaskDeferred","$th","defaultDelay","task","delay","symbols_1","$uh","$vh","$wh","autoOpenTimeMs","millis","disposable","handler","store","promiseFactories","results","next","thenHandler","n","shouldStop","loop","factory","promiseList","todo","finish","$Ch","maxDegreeOfParalellism","event_1","iLimitedTask","$Dh","$Eh","$Rh","$Fh","$Th","queue","extUri","resources_1","drainListenerId","drainListener","drainer","$Gh","runner","$Hh","interval","context","$Ih","$Jh","$Kh","unit","units","$Lh","g","h","_targetWindow","disposed","targetWindow","$Oh","executor","$Ph","retries","lastError","taskId","onCancel","queued","run","promiseReject","$Sh","d","now","DeferredOutcome","Promises","settled","firstError","withAsyncBody","bodyFn","$Uh","$Vh","AsyncIterableSourceState","$Wh","writer","emitter","iterables","iterable","onReturn","mapFn","filterFn","values","$Xh","m","innerIterable","$Zh","earlyError","earlyItems","$lk","$ok","$pk","$qk","$rk","$sk","$tk","$uk","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","isLastPattern","pattern","splitChar","inBraces","inBrackets","curVal","char","parseRegExp","regEx","previousSegmentWasGlobStar","braceVal","bracketVal","braceRegExp","choice","T1","T2","T3","T3_2","T4","T5","CACHE","map_1","FALSE","NULL","parsePattern","arg1","patternKey","parsedPattern","wrapRelativePattern","trivia1","trimForExclusions","trivia2","trivia3","trivia4and5","toRegExp","arg2","wrappedPattern","basename","extpath_1","slashBase","backslashBase","basenames","parsedPatterns","aggregateBasenameMatches","patternsLength","withBasenames","allPaths","all","current","targetPath","matchPathEnds","usingPosixSep","nativePath","nativePathEnd","targetPathEnd","regExp","hasSibling","resultPattern","parsedExpression","rp","patternOrExpression","expression","parseExpressionPattern","resultExpression","resultPromises","async_1","resultPromise","when","clausePattern","matched","basenamePatterns","patterns","aggregate","ch","aggregatedPatterns","patternsA","patternsB","arrays_1","$2t","StringEOL","text","eolCount","firstLineLength","lastLineStart","eol","chr","$Et","$Ft","_utf16LE_TextDecoder","getUTF16LE_TextDecoder","_utf16BE_TextDecoder","getUTF16BE_TextDecoder","_platformTextDecoder","view","compatDecodeUTF16LE","resultLen","charCode","$Gt","capacity","bufferString","remainingSpace","strings","str","strLen","$It","escapeNewLine","$Ht","oldPosition","oldText","newPosition","newText","stringBuilder_1","dest","prevEdits","currEdits","TextChangeCompressor","prevIndex","currIndex","prevEdit","currEdit","e1","e2","mergePrev","mergeCurr","merged","prevDeltaOffset","currDeltaOffset","edit","preText","postText","edits","prev","curr","$IC","$JC","$KC","$LC","$MC","$NC","$OC","$PC","$GC","piece","color","node","NodeColor","calculateSize","calculateLF","resetSentinel","tree","x","y","z","yWasRed","newSizeLeft","newLFLeft","delta","lf_delta","w","lineFeedCntDelta","$WC","$XC","AverageBufferSize","createUintArray","arr","r","LineStarts","lineStarts","cr","lf","crlf","isBasicASCII","readonly","rLength","$YC","bufferIndex","lineFeedCnt","length","$ZC","PieceTreeSnapshot","BOM","rbTreeBase_1","PieceTreeSearchCache","limit","nodePos","lineNumber","nodePosition","hasInvalidVal","tmp","newArr","entry","$1C","eolNormalized","lastNode","averageBufferSize","min","max","tempChunk","tempChunkLen","newEOL","other","startPosition","endPosition","val","leftLen","accumualtedValInCurrentIndex","lfCnt","originalOffset","out","lineStartOffset","position_1","range","startOffset","lines","linesLength","currentLine","danglingCR","pieceLength","pieceStartLine","pieceEndLine","pieceStartOffset","matchingNode","targetOffset","searcher","startLineNumber","startColumn","startCursor","endCursor","searchData","captureMatches","limitResultCount","startOffsetInBuffer","searchText","offsetInBuffer","retStartColumn","retEndColumn","textModelSearch_1","range_1","searchRange","currentNode","lineBreakCnt","nextLineStartOffset","deltaOffset","wordSeparators","searchString","searchStringLen","textLength","lastMatchIndex","model_1","nodeStartOffset","insertPosInBuffer","nodesToDel","newRightPiece","newStart","previousPos","newPieces","tmpNode","k","pieces","cnt","startNode","endNode","startSplitPosInBuffer","endSplitPosInBuffer","secondNode","nPiece","newNode","low","high","mid","midStop","midStart","endOffset","previousCharOffset","cursor","nodes","lastChar","splitText","endIndex","endColumn","endPos","newPiece","cache","prevAccumulatedValue","accumulatedValue","originalLineNumber","lineCnt","realLineCnt","expectedLineStartIndex","originalLFCnt","originalEndOffset","newEnd","newEndOffset","newLineFeedCnt","size_delta","newLength","originalStartOffset","newStartOffset","originalStartPos","originalEndPos","oldLength","oldLFCnt","hitCRLF","prevStartOffset","oldLineFeedCnt","prevAccumualtedValue","newOffset","nextNode","prevNewLength","prevNewLFCnt","leftRet","prevNode","$2C","containsRTL","containsUnusualLineTerminators","pieceTreeBase_1","preserveBOM","lineEnding","eolOffsetCompensation","desiredEOL","actualEOL","fromLineNumber","toLineNumber","lineContent","fromOffset","toOffset","rawOperations","recordTrimAutoWhitespace","computeUndoEdits","mightContainRTL","mightContainUnusualLineTerminators","mightContainNonBasicASCII","canReduceOperations","operations","op","validatedRange","textMightContainNonBasicASCII","validText","lastLineLength","strEOL","eolCounter_1","bufferEOL","hasTouchingRanges","count","rangeEnd","nextRangeStart","reverseRanges","newTrimAutoWhitespaceCandidates","reverseRange","currentLineContent","reverseOperations","reverseRangeDeltaOffset","bufferText","reverseRangeOffset","textChange_1","contentChanges","trimAutoWhitespaceLineNumbers","prevContent","forceMoveMarkers","firstEditRange","lastEditRange","entireEditRange","lastEndLineNumber","lastEndColumn","operation","endLineNumber","contentChangeRange","resultRange","lineCount","prevOpEndLineNumber","prevOpEndColumn","prevOp","PieceTreeTextBufferFactory","defaultEOL","totalEOLCount","totalCRCount","newLineStart","textBuffer","pieceTreeTextBuffer_1","lengthLimit","$3C","allowEmptyStrings","normalizeEOL","lastChunk","newLineStarts","nls","TokenType","hintDidYouMean","meant","nls_1","hintDidYouForgetToOpenOrCloseQuote","hintDidYouForgetToEscapeSlash","$rj","isTripleEq","expected","type","additional","lexeme","errToken","keyword","inEscape","inCharacterClass","$ti","ctor","staticArguments","supportsDelayedInstantiation","$ys","$zs","_registry","InstantiationType","id","ctorOrDescriptor","descriptors_1","$wi","$xi","_util","getServiceDependencies","storeServiceDependency","serviceId","serviceIdentifier","$sj","$vj","$wj","$Pj","CONSTANT_VALUES","hasOwnProperty","ContextKeyExprType","defaultConfig","errorEmptyString","hintEmptyString","errorNoInAfterNot","errorClosingParenthesis","errorUnexpectedToken","hintUnexpectedToken","errorUnexpectedEOF","hintUnexpectedEOF","$tj","scanner_1","input","expr","peek","additionalInfo","right","$uj","$xj","$yj","$Ej","regexLexeme","closingSlashIndex","flags","regexp","$Jj","lexemeReconstruction","followingToken","parenBalance","serializedValue","regex","caseIgnoreFlag","$Hj","$Ij","$Fj","$Gj","message","got","$zj","$Aj","$Dj","$Bj","$Cj","$Lj","$Mj","serialized","whenClauses","parser","whenClause","se","pe","aExpr","bExpr","cmp","mapFnc","negated","constantValue","cmp1","cmp2","trueValue","valueKey","falseValue","withFloatOrStr","_value","thisSource","otherSource","$Kj","eliminateConstantsInArray","newExpr","_expr","extraRedundantCheck","exprArr","hasTrue","lastElement","secondToLastElement","isFinished","resultElement","el","hasFalse","LEFT","RIGHT","left","getTerminals","$Nj","metaOrHide","instantiation_1","key1","key2","value1","value2","q","allElementsIncluded","pIndex","qIndex","$MK","$NK","_lengths","_padRegexp","_radix","cell","idx","_scheme","buffer_1","notebook","s","fragment","$OK","cellUri","document","extensions_1","$ZK","$3K","$4K","$7K","$8K","CellKind","mime_1","NotebookRunState","NotebookCellExecutionState","NotebookExecutionState","NotebookRendererMatch","RendererMessagingSpec","NotebookCellsChangeType","SelectionStateType","CellEditType","CellUri","generate","notebookDocumentService_1","parse","generateCellOutputUri","outputId","parseCellOutputUri","generateCellPropertyUri","parseCellPropertyUri","propertyScheme","normalizeSlashes","$YK","initialValue","glob","mimetypes","remaining","iterator_1","sorted","matches","original","normalized","chosenMimetype","otherMimetypes","chosenIndex","uniqueIndicies","otherIndices","oi","o","maxIndex","before","after","contains","equal","pushSplice","deleteCount","toInsert","latest","beforeIdx","afterIdx","beforeElement","afterElement","contextkey_1","NotebookEditorPriority","filenamePattern","arg","filter","viewType","excludeFilenamePattern","CellStatusbarAlignment","$6K","outputs","startAppending","didCompression","compressStreamBuffer","concatenated","formatStreamText","MOVE_CURSOR_1_LINE_COMMAND_BYTES","LINE_FEED","didCompress","previousStream","command","lastIndexOfLineFeed","fixBackspace","txt","fixCarriageReturn","insert","BACKSPACE_CHARACTER","CARRIAGE_RETURN_CHARACTER","create","bufferHash","initialHashVal","hash_1","MirrorCell","builder","pieceTreeTextBufferBuilder_1","bufferFactory","language","cellKind","internalMetadata","fullRange","MirrorNotebookDocument","cells","notebookCommon_1","splices","splice","newCells","CellSequence","textModel","hashValue","NotebookEditorSimpleWorker","dto","strURL","originalUrl","modifiedUrl","modified","diff_1","modelUrl","maxLineCount"],"file":"notebookSimpleWorker.js"}