{"version":3,"sources":["out-vscode-reh-web/server-main.js"],"sourcesContent":["\"use strict\";\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\n\n// out-build/vs/base/common/performance.js\nvar require_performance = __commonJS({\n  \"out-build/vs/base/common/performance.js\"(exports2, module2) {\n    \"use strict\";\n    (function() {\n      function _definePolyfillMarks(timeOrigin) {\n        const _data = [];\n        if (typeof timeOrigin === \"number\") {\n          _data.push(\"code/timeOrigin\", timeOrigin);\n        }\n        function mark(name) {\n          _data.push(name, Date.now());\n        }\n        function getMarks() {\n          const result = [];\n          for (let i = 0; i < _data.length; i += 2) {\n            result.push({\n              name: _data[i],\n              startTime: _data[i + 1]\n            });\n          }\n          return result;\n        }\n        return { mark, getMarks };\n      }\n      function _define() {\n        if (typeof performance === \"object\" && typeof performance.mark === \"function\" && !performance.nodeTiming) {\n          if (typeof performance.timeOrigin !== \"number\" && !performance.timing) {\n            return _definePolyfillMarks();\n          } else {\n            return {\n              mark(name) {\n                performance.mark(name);\n              },\n              getMarks() {\n                let timeOrigin = performance.timeOrigin;\n                if (typeof timeOrigin !== \"number\") {\n                  timeOrigin = performance.timing.navigationStart || performance.timing.redirectStart || performance.timing.fetchStart;\n                }\n                const result = [{ name: \"code/timeOrigin\", startTime: Math.round(timeOrigin) }];\n                for (const entry of performance.getEntriesByType(\"mark\")) {\n                  result.push({\n                    name: entry.name,\n                    startTime: Math.round(timeOrigin + entry.startTime)\n                  });\n                }\n                return result;\n              }\n            };\n          }\n        } else if (typeof process === \"object\") {\n          const timeOrigin = performance?.timeOrigin ?? Math.round((require.__$__nodeRequire || require)(\"perf_hooks\").performance.timeOrigin);\n          return _definePolyfillMarks(timeOrigin);\n        } else {\n          console.trace(\"perf-util loaded in UNKNOWN environment\");\n          return _definePolyfillMarks();\n        }\n      }\n      function _factory(sharedObj2) {\n        if (!sharedObj2.MonacoPerformanceMarks) {\n          sharedObj2.MonacoPerformanceMarks = _define();\n        }\n        return sharedObj2.MonacoPerformanceMarks;\n      }\n      var sharedObj;\n      if (typeof global === \"object\") {\n        sharedObj = global;\n      } else if (typeof self === \"object\") {\n        sharedObj = self;\n      } else {\n        sharedObj = {};\n      }\n      if (typeof define === \"function\") {\n        define([], function() {\n          return _factory(sharedObj);\n        });\n      } else if (typeof module2 === \"object\" && typeof module2.exports === \"object\") {\n        module2.exports = _factory(sharedObj);\n      } else {\n        console.trace(\"perf-util defined in UNKNOWN context (neither requirejs or commonjs)\");\n        sharedObj.perf = _factory(sharedObj);\n      }\n    })();\n  }\n});\n\n// out-build/bootstrap-node.js\nvar require_bootstrap_node = __commonJS({\n  \"out-build/bootstrap-node.js\"(exports2) {\n    \"use strict\";\n    function setupCurrentWorkingDirectory() {\n      const path = require(\"path\");\n      try {\n        if (typeof process.env[\"VSCODE_CWD\"] !== \"string\") {\n          process.env[\"VSCODE_CWD\"] = process.cwd();\n        }\n        if (process.platform === \"win32\") {\n          process.chdir(path.dirname(process.execPath));\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    setupCurrentWorkingDirectory();\n    exports2.injectNodeModuleLookupPath = function(injectPath) {\n      if (!injectPath) {\n        throw new Error(\"Missing injectPath\");\n      }\n      const Module = require(\"module\");\n      const path = require(\"path\");\n      const nodeModulesPath = path.join(__dirname, \"../node_modules\");\n      const originalResolveLookupPaths = Module._resolveLookupPaths;\n      Module._resolveLookupPaths = function(moduleName, parent) {\n        const paths = originalResolveLookupPaths(moduleName, parent);\n        if (Array.isArray(paths)) {\n          for (let i = 0, len = paths.length; i < len; i++) {\n            if (paths[i] === nodeModulesPath) {\n              paths.splice(i, 0, injectPath);\n              break;\n            }\n          }\n        }\n        return paths;\n      };\n    };\n    exports2.removeGlobalNodeModuleLookupPaths = function() {\n      const Module = require(\"module\");\n      const globalPaths = Module.globalPaths;\n      const originalResolveLookupPaths = Module._resolveLookupPaths;\n      Module._resolveLookupPaths = function(moduleName, parent) {\n        const paths = originalResolveLookupPaths(moduleName, parent);\n        if (Array.isArray(paths)) {\n          let commonSuffixLength = 0;\n          while (commonSuffixLength < paths.length && paths[paths.length - 1 - commonSuffixLength] === globalPaths[globalPaths.length - 1 - commonSuffixLength]) {\n            commonSuffixLength++;\n          }\n          return paths.slice(0, paths.length - commonSuffixLength);\n        }\n        return paths;\n      };\n    };\n    exports2.configurePortable = function(product2) {\n      const fs = require(\"fs\");\n      const path = require(\"path\");\n      const appRoot = path.dirname(__dirname);\n      function getApplicationPath(path2) {\n        if (process.env[\"VSCODE_DEV\"]) {\n          return appRoot;\n        }\n        if (process.platform === \"darwin\") {\n          return path2.dirname(path2.dirname(path2.dirname(appRoot)));\n        }\n        return path2.dirname(path2.dirname(appRoot));\n      }\n      function getPortableDataPath(path2) {\n        if (process.env[\"VSCODE_PORTABLE\"]) {\n          return process.env[\"VSCODE_PORTABLE\"];\n        }\n        if (process.platform === \"win32\" || process.platform === \"linux\") {\n          return path2.join(getApplicationPath(path2), \"data\");\n        }\n        const portableDataName = product2.portable || `${product2.applicationName}-portable-data`;\n        return path2.join(path2.dirname(getApplicationPath(path2)), portableDataName);\n      }\n      const portableDataPath = getPortableDataPath(path);\n      const isPortable = !(\"target\" in product2) && fs.existsSync(portableDataPath);\n      const portableTempPath = path.join(portableDataPath, \"tmp\");\n      const isTempPortable = isPortable && fs.existsSync(portableTempPath);\n      if (isPortable) {\n        process.env[\"VSCODE_PORTABLE\"] = portableDataPath;\n      } else {\n        delete process.env[\"VSCODE_PORTABLE\"];\n      }\n      if (isTempPortable) {\n        if (process.platform === \"win32\") {\n          process.env[\"TMP\"] = portableTempPath;\n          process.env[\"TEMP\"] = portableTempPath;\n        } else {\n          process.env[\"TMPDIR\"] = portableTempPath;\n        }\n      }\n      return {\n        portableDataPath,\n        isPortable\n      };\n    };\n  }\n});\n\n// out-build/vs/loader.js\nvar require_loader = __commonJS({\n  \"out-build/vs/loader.js\"(exports2, module2) {\n    \"use strict\";\n    var _amdLoaderGlobal = exports2;\n    var _commonjsGlobal = typeof global === \"object\" ? global : {};\n    var AMDLoader;\n    (function(AMDLoader2) {\n      AMDLoader2.global = _amdLoaderGlobal;\n      class Environment {\n        get isWindows() {\n          this._detect();\n          return this._isWindows;\n        }\n        get isNode() {\n          this._detect();\n          return this._isNode;\n        }\n        get isElectronRenderer() {\n          this._detect();\n          return this._isElectronRenderer;\n        }\n        get isWebWorker() {\n          this._detect();\n          return this._isWebWorker;\n        }\n        get isElectronNodeIntegrationWebWorker() {\n          this._detect();\n          return this._isElectronNodeIntegrationWebWorker;\n        }\n        constructor() {\n          this._detected = false;\n          this._isWindows = false;\n          this._isNode = false;\n          this._isElectronRenderer = false;\n          this._isWebWorker = false;\n          this._isElectronNodeIntegrationWebWorker = false;\n        }\n        _detect() {\n          if (this._detected) {\n            return;\n          }\n          this._detected = true;\n          this._isWindows = Environment._isWindows();\n          this._isNode = typeof module2 !== \"undefined\" && !!module2.exports;\n          this._isElectronRenderer = typeof process !== \"undefined\" && typeof process.versions !== \"undefined\" && typeof process.versions.electron !== \"undefined\" && process.type === \"renderer\";\n          this._isWebWorker = typeof AMDLoader2.global.importScripts === \"function\";\n          this._isElectronNodeIntegrationWebWorker = this._isWebWorker && (typeof process !== \"undefined\" && typeof process.versions !== \"undefined\" && typeof process.versions.electron !== \"undefined\" && process.type === \"worker\");\n        }\n        static _isWindows() {\n          if (typeof navigator !== \"undefined\") {\n            if (navigator.userAgent && navigator.userAgent.indexOf(\"Windows\") >= 0) {\n              return true;\n            }\n          }\n          if (typeof process !== \"undefined\") {\n            return process.platform === \"win32\";\n          }\n          return false;\n        }\n      }\n      AMDLoader2.Environment = Environment;\n    })(AMDLoader || (AMDLoader = {}));\n    var AMDLoader;\n    (function(AMDLoader2) {\n      class LoaderEvent {\n        constructor(type, detail, timestamp) {\n          this.type = type;\n          this.detail = detail;\n          this.timestamp = timestamp;\n        }\n      }\n      AMDLoader2.LoaderEvent = LoaderEvent;\n      class LoaderEventRecorder {\n        constructor(loaderAvailableTimestamp) {\n          this._events = [new LoaderEvent(1, \"\", loaderAvailableTimestamp)];\n        }\n        record(type, detail) {\n          this._events.push(new LoaderEvent(type, detail, AMDLoader2.Utilities.getHighPerformanceTimestamp()));\n        }\n        getEvents() {\n          return this._events;\n        }\n      }\n      AMDLoader2.LoaderEventRecorder = LoaderEventRecorder;\n      class NullLoaderEventRecorder {\n        record(type, detail) {\n        }\n        getEvents() {\n          return [];\n        }\n      }\n      NullLoaderEventRecorder.INSTANCE = new NullLoaderEventRecorder();\n      AMDLoader2.NullLoaderEventRecorder = NullLoaderEventRecorder;\n    })(AMDLoader || (AMDLoader = {}));\n    var AMDLoader;\n    (function(AMDLoader2) {\n      class Utilities {\n        /**\n         * This method does not take care of / vs \\\n         */\n        static fileUriToFilePath(isWindows, uri) {\n          uri = decodeURI(uri).replace(/%23/g, \"#\");\n          if (isWindows) {\n            if (/^file:\\/\\/\\//.test(uri)) {\n              return uri.substr(8);\n            }\n            if (/^file:\\/\\//.test(uri)) {\n              return uri.substr(5);\n            }\n          } else {\n            if (/^file:\\/\\//.test(uri)) {\n              return uri.substr(7);\n            }\n          }\n          return uri;\n        }\n        static startsWith(haystack, needle) {\n          return haystack.length >= needle.length && haystack.substr(0, needle.length) === needle;\n        }\n        static endsWith(haystack, needle) {\n          return haystack.length >= needle.length && haystack.substr(haystack.length - needle.length) === needle;\n        }\n        // only check for \"?\" before \"#\" to ensure that there is a real Query-String\n        static containsQueryString(url) {\n          return /^[^\\#]*\\?/gi.test(url);\n        }\n        /**\n         * Does `url` start with http:// or https:// or file:// or / ?\n         */\n        static isAbsolutePath(url) {\n          return /^((http:\\/\\/)|(https:\\/\\/)|(file:\\/\\/)|(\\/))/.test(url);\n        }\n        static forEachProperty(obj, callback) {\n          if (obj) {\n            let key;\n            for (key in obj) {\n              if (obj.hasOwnProperty(key)) {\n                callback(key, obj[key]);\n              }\n            }\n          }\n        }\n        static isEmpty(obj) {\n          let isEmpty = true;\n          Utilities.forEachProperty(obj, () => {\n            isEmpty = false;\n          });\n          return isEmpty;\n        }\n        static recursiveClone(obj) {\n          if (!obj || typeof obj !== \"object\" || obj instanceof RegExp) {\n            return obj;\n          }\n          if (!Array.isArray(obj) && Object.getPrototypeOf(obj) !== Object.prototype) {\n            return obj;\n          }\n          let result = Array.isArray(obj) ? [] : {};\n          Utilities.forEachProperty(obj, (key, value) => {\n            if (value && typeof value === \"object\") {\n              result[key] = Utilities.recursiveClone(value);\n            } else {\n              result[key] = value;\n            }\n          });\n          return result;\n        }\n        static generateAnonymousModule() {\n          return \"===anonymous\" + Utilities.NEXT_ANONYMOUS_ID++ + \"===\";\n        }\n        static isAnonymousModule(id) {\n          return Utilities.startsWith(id, \"===anonymous\");\n        }\n        static getHighPerformanceTimestamp() {\n          if (!this.PERFORMANCE_NOW_PROBED) {\n            this.PERFORMANCE_NOW_PROBED = true;\n            this.HAS_PERFORMANCE_NOW = AMDLoader2.global.performance && typeof AMDLoader2.global.performance.now === \"function\";\n          }\n          return this.HAS_PERFORMANCE_NOW ? AMDLoader2.global.performance.now() : Date.now();\n        }\n      }\n      Utilities.NEXT_ANONYMOUS_ID = 1;\n      Utilities.PERFORMANCE_NOW_PROBED = false;\n      Utilities.HAS_PERFORMANCE_NOW = false;\n      AMDLoader2.Utilities = Utilities;\n    })(AMDLoader || (AMDLoader = {}));\n    var AMDLoader;\n    (function(AMDLoader2) {\n      function ensureError(err) {\n        if (err instanceof Error) {\n          return err;\n        }\n        const result = new Error(err.message || String(err) || \"Unknown Error\");\n        if (err.stack) {\n          result.stack = err.stack;\n        }\n        return result;\n      }\n      AMDLoader2.ensureError = ensureError;\n      ;\n      class ConfigurationOptionsUtil {\n        /**\n         * Ensure configuration options make sense\n         */\n        static validateConfigurationOptions(options) {\n          function defaultOnError(err) {\n            if (err.phase === \"loading\") {\n              console.error('Loading \"' + err.moduleId + '\" failed');\n              console.error(err);\n              console.error(\"Here are the modules that depend on it:\");\n              console.error(err.neededBy);\n              return;\n            }\n            if (err.phase === \"factory\") {\n              console.error('The factory function of \"' + err.moduleId + '\" has thrown an exception');\n              console.error(err);\n              console.error(\"Here are the modules that depend on it:\");\n              console.error(err.neededBy);\n              return;\n            }\n          }\n          options = options || {};\n          if (typeof options.baseUrl !== \"string\") {\n            options.baseUrl = \"\";\n          }\n          if (typeof options.isBuild !== \"boolean\") {\n            options.isBuild = false;\n          }\n          if (typeof options.paths !== \"object\") {\n            options.paths = {};\n          }\n          if (typeof options.config !== \"object\") {\n            options.config = {};\n          }\n          if (typeof options.catchError === \"undefined\") {\n            options.catchError = false;\n          }\n          if (typeof options.recordStats === \"undefined\") {\n            options.recordStats = false;\n          }\n          if (typeof options.urlArgs !== \"string\") {\n            options.urlArgs = \"\";\n          }\n          if (typeof options.onError !== \"function\") {\n            options.onError = defaultOnError;\n          }\n          if (!Array.isArray(options.ignoreDuplicateModules)) {\n            options.ignoreDuplicateModules = [];\n          }\n          if (options.baseUrl.length > 0) {\n            if (!AMDLoader2.Utilities.endsWith(options.baseUrl, \"/\")) {\n              options.baseUrl += \"/\";\n            }\n          }\n          if (typeof options.cspNonce !== \"string\") {\n            options.cspNonce = \"\";\n          }\n          if (typeof options.preferScriptTags === \"undefined\") {\n            options.preferScriptTags = false;\n          }\n          if (options.nodeCachedData && typeof options.nodeCachedData === \"object\") {\n            if (typeof options.nodeCachedData.seed !== \"string\") {\n              options.nodeCachedData.seed = \"seed\";\n            }\n            if (typeof options.nodeCachedData.writeDelay !== \"number\" || options.nodeCachedData.writeDelay < 0) {\n              options.nodeCachedData.writeDelay = 1e3 * 7;\n            }\n            if (!options.nodeCachedData.path || typeof options.nodeCachedData.path !== \"string\") {\n              const err = ensureError(new Error(\"INVALID cached data configuration, 'path' MUST be set\"));\n              err.phase = \"configuration\";\n              options.onError(err);\n              options.nodeCachedData = void 0;\n            }\n          }\n          return options;\n        }\n        static mergeConfigurationOptions(overwrite = null, base = null) {\n          let result = AMDLoader2.Utilities.recursiveClone(base || {});\n          AMDLoader2.Utilities.forEachProperty(overwrite, (key, value) => {\n            if (key === \"ignoreDuplicateModules\" && typeof result.ignoreDuplicateModules !== \"undefined\") {\n              result.ignoreDuplicateModules = result.ignoreDuplicateModules.concat(value);\n            } else if (key === \"paths\" && typeof result.paths !== \"undefined\") {\n              AMDLoader2.Utilities.forEachProperty(value, (key2, value2) => result.paths[key2] = value2);\n            } else if (key === \"config\" && typeof result.config !== \"undefined\") {\n              AMDLoader2.Utilities.forEachProperty(value, (key2, value2) => result.config[key2] = value2);\n            } else {\n              result[key] = AMDLoader2.Utilities.recursiveClone(value);\n            }\n          });\n          return ConfigurationOptionsUtil.validateConfigurationOptions(result);\n        }\n      }\n      AMDLoader2.ConfigurationOptionsUtil = ConfigurationOptionsUtil;\n      class Configuration {\n        constructor(env, options) {\n          this._env = env;\n          this.options = ConfigurationOptionsUtil.mergeConfigurationOptions(options);\n          this._createIgnoreDuplicateModulesMap();\n          this._createSortedPathsRules();\n          if (this.options.baseUrl === \"\") {\n            if (this.options.nodeRequire && this.options.nodeRequire.main && this.options.nodeRequire.main.filename && this._env.isNode) {\n              let nodeMain = this.options.nodeRequire.main.filename;\n              let dirnameIndex = Math.max(nodeMain.lastIndexOf(\"/\"), nodeMain.lastIndexOf(\"\\\\\"));\n              this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\n            }\n          }\n        }\n        _createIgnoreDuplicateModulesMap() {\n          this.ignoreDuplicateModulesMap = {};\n          for (let i = 0; i < this.options.ignoreDuplicateModules.length; i++) {\n            this.ignoreDuplicateModulesMap[this.options.ignoreDuplicateModules[i]] = true;\n          }\n        }\n        _createSortedPathsRules() {\n          this.sortedPathsRules = [];\n          AMDLoader2.Utilities.forEachProperty(this.options.paths, (from, to) => {\n            if (!Array.isArray(to)) {\n              this.sortedPathsRules.push({\n                from,\n                to: [to]\n              });\n            } else {\n              this.sortedPathsRules.push({\n                from,\n                to\n              });\n            }\n          });\n          this.sortedPathsRules.sort((a, b) => {\n            return b.from.length - a.from.length;\n          });\n        }\n        /**\n         * Clone current configuration and overwrite options selectively.\n         * @param options The selective options to overwrite with.\n         * @result A new configuration\n         */\n        cloneAndMerge(options) {\n          return new Configuration(this._env, ConfigurationOptionsUtil.mergeConfigurationOptions(options, this.options));\n        }\n        /**\n         * Get current options bag. Useful for passing it forward to plugins.\n         */\n        getOptionsLiteral() {\n          return this.options;\n        }\n        _applyPaths(moduleId) {\n          let pathRule;\n          for (let i = 0, len = this.sortedPathsRules.length; i < len; i++) {\n            pathRule = this.sortedPathsRules[i];\n            if (AMDLoader2.Utilities.startsWith(moduleId, pathRule.from)) {\n              let result = [];\n              for (let j = 0, lenJ = pathRule.to.length; j < lenJ; j++) {\n                result.push(pathRule.to[j] + moduleId.substr(pathRule.from.length));\n              }\n              return result;\n            }\n          }\n          return [moduleId];\n        }\n        _addUrlArgsToUrl(url) {\n          if (AMDLoader2.Utilities.containsQueryString(url)) {\n            return url + \"&\" + this.options.urlArgs;\n          } else {\n            return url + \"?\" + this.options.urlArgs;\n          }\n        }\n        _addUrlArgsIfNecessaryToUrl(url) {\n          if (this.options.urlArgs) {\n            return this._addUrlArgsToUrl(url);\n          }\n          return url;\n        }\n        _addUrlArgsIfNecessaryToUrls(urls) {\n          if (this.options.urlArgs) {\n            for (let i = 0, len = urls.length; i < len; i++) {\n              urls[i] = this._addUrlArgsToUrl(urls[i]);\n            }\n          }\n          return urls;\n        }\n        /**\n         * Transform a module id to a location. Appends .js to module ids\n         */\n        moduleIdToPaths(moduleId) {\n          if (this._env.isNode) {\n            const isNodeModule = this.options.amdModulesPattern instanceof RegExp && !this.options.amdModulesPattern.test(moduleId);\n            if (isNodeModule) {\n              if (this.isBuild()) {\n                return [\"empty:\"];\n              } else {\n                return [\"node|\" + moduleId];\n              }\n            }\n          }\n          let result = moduleId;\n          let results;\n          if (!AMDLoader2.Utilities.endsWith(result, \".js\") && !AMDLoader2.Utilities.isAbsolutePath(result)) {\n            results = this._applyPaths(result);\n            for (let i = 0, len = results.length; i < len; i++) {\n              if (this.isBuild() && results[i] === \"empty:\") {\n                continue;\n              }\n              if (!AMDLoader2.Utilities.isAbsolutePath(results[i])) {\n                results[i] = this.options.baseUrl + results[i];\n              }\n              if (!AMDLoader2.Utilities.endsWith(results[i], \".js\") && !AMDLoader2.Utilities.containsQueryString(results[i])) {\n                results[i] = results[i] + \".js\";\n              }\n            }\n          } else {\n            if (!AMDLoader2.Utilities.endsWith(result, \".js\") && !AMDLoader2.Utilities.containsQueryString(result)) {\n              result = result + \".js\";\n            }\n            results = [result];\n          }\n          return this._addUrlArgsIfNecessaryToUrls(results);\n        }\n        /**\n         * Transform a module id or url to a location.\n         */\n        requireToUrl(url) {\n          let result = url;\n          if (!AMDLoader2.Utilities.isAbsolutePath(result)) {\n            result = this._applyPaths(result)[0];\n            if (!AMDLoader2.Utilities.isAbsolutePath(result)) {\n              result = this.options.baseUrl + result;\n            }\n          }\n          return this._addUrlArgsIfNecessaryToUrl(result);\n        }\n        /**\n         * Flag to indicate if current execution is as part of a build.\n         */\n        isBuild() {\n          return this.options.isBuild;\n        }\n        shouldInvokeFactory(strModuleId) {\n          if (!this.options.isBuild) {\n            return true;\n          }\n          if (AMDLoader2.Utilities.isAnonymousModule(strModuleId)) {\n            return true;\n          }\n          if (this.options.buildForceInvokeFactory && this.options.buildForceInvokeFactory[strModuleId]) {\n            return true;\n          }\n          return false;\n        }\n        /**\n         * Test if module `moduleId` is expected to be defined multiple times\n         */\n        isDuplicateMessageIgnoredFor(moduleId) {\n          return this.ignoreDuplicateModulesMap.hasOwnProperty(moduleId);\n        }\n        /**\n         * Get the configuration settings for the provided module id\n         */\n        getConfigForModule(moduleId) {\n          if (this.options.config) {\n            return this.options.config[moduleId];\n          }\n        }\n        /**\n         * Should errors be caught when executing module factories?\n         */\n        shouldCatchError() {\n          return this.options.catchError;\n        }\n        /**\n         * Should statistics be recorded?\n         */\n        shouldRecordStats() {\n          return this.options.recordStats;\n        }\n        /**\n         * Forward an error to the error handler.\n         */\n        onError(err) {\n          this.options.onError(err);\n        }\n      }\n      AMDLoader2.Configuration = Configuration;\n    })(AMDLoader || (AMDLoader = {}));\n    var AMDLoader;\n    (function(AMDLoader2) {\n      class OnlyOnceScriptLoader {\n        constructor(env) {\n          this._env = env;\n          this._scriptLoader = null;\n          this._callbackMap = {};\n        }\n        load(moduleManager, scriptSrc, callback, errorback) {\n          if (!this._scriptLoader) {\n            if (this._env.isWebWorker) {\n              this._scriptLoader = new WorkerScriptLoader();\n            } else if (this._env.isElectronRenderer) {\n              const { preferScriptTags } = moduleManager.getConfig().getOptionsLiteral();\n              if (preferScriptTags) {\n                this._scriptLoader = new BrowserScriptLoader();\n              } else {\n                this._scriptLoader = new NodeScriptLoader(this._env);\n              }\n            } else if (this._env.isNode) {\n              this._scriptLoader = new NodeScriptLoader(this._env);\n            } else {\n              this._scriptLoader = new BrowserScriptLoader();\n            }\n          }\n          let scriptCallbacks = {\n            callback,\n            errorback\n          };\n          if (this._callbackMap.hasOwnProperty(scriptSrc)) {\n            this._callbackMap[scriptSrc].push(scriptCallbacks);\n            return;\n          }\n          this._callbackMap[scriptSrc] = [scriptCallbacks];\n          this._scriptLoader.load(moduleManager, scriptSrc, () => this.triggerCallback(scriptSrc), (err) => this.triggerErrorback(scriptSrc, err));\n        }\n        triggerCallback(scriptSrc) {\n          let scriptCallbacks = this._callbackMap[scriptSrc];\n          delete this._callbackMap[scriptSrc];\n          for (let i = 0; i < scriptCallbacks.length; i++) {\n            scriptCallbacks[i].callback();\n          }\n        }\n        triggerErrorback(scriptSrc, err) {\n          let scriptCallbacks = this._callbackMap[scriptSrc];\n          delete this._callbackMap[scriptSrc];\n          for (let i = 0; i < scriptCallbacks.length; i++) {\n            scriptCallbacks[i].errorback(err);\n          }\n        }\n      }\n      class BrowserScriptLoader {\n        /**\n         * Attach load / error listeners to a script element and remove them when either one has fired.\n         * Implemented for browsers supporting HTML5 standard 'load' and 'error' events.\n         */\n        attachListeners(script, callback, errorback) {\n          let unbind = () => {\n            script.removeEventListener(\"load\", loadEventListener);\n            script.removeEventListener(\"error\", errorEventListener);\n          };\n          let loadEventListener = (e) => {\n            unbind();\n            callback();\n          };\n          let errorEventListener = (e) => {\n            unbind();\n            errorback(e);\n          };\n          script.addEventListener(\"load\", loadEventListener);\n          script.addEventListener(\"error\", errorEventListener);\n        }\n        load(moduleManager, scriptSrc, callback, errorback) {\n          if (/^node\\|/.test(scriptSrc)) {\n            let opts = moduleManager.getConfig().getOptionsLiteral();\n            let nodeRequire = ensureRecordedNodeRequire(moduleManager.getRecorder(), opts.nodeRequire || AMDLoader2.global.nodeRequire);\n            let pieces = scriptSrc.split(\"|\");\n            let moduleExports = null;\n            try {\n              moduleExports = nodeRequire(pieces[1]);\n            } catch (err) {\n              errorback(err);\n              return;\n            }\n            moduleManager.enqueueDefineAnonymousModule([], () => moduleExports);\n            callback();\n          } else {\n            let script = document.createElement(\"script\");\n            script.setAttribute(\"async\", \"async\");\n            script.setAttribute(\"type\", \"text/javascript\");\n            this.attachListeners(script, callback, errorback);\n            const { trustedTypesPolicy } = moduleManager.getConfig().getOptionsLiteral();\n            if (trustedTypesPolicy) {\n              scriptSrc = trustedTypesPolicy.createScriptURL(scriptSrc);\n            }\n            script.setAttribute(\"src\", scriptSrc);\n            const { cspNonce } = moduleManager.getConfig().getOptionsLiteral();\n            if (cspNonce) {\n              script.setAttribute(\"nonce\", cspNonce);\n            }\n            document.getElementsByTagName(\"head\")[0].appendChild(script);\n          }\n        }\n      }\n      function canUseEval(moduleManager) {\n        const { trustedTypesPolicy } = moduleManager.getConfig().getOptionsLiteral();\n        try {\n          const func = trustedTypesPolicy ? self.eval(trustedTypesPolicy.createScript(\"\", \"true\")) : new Function(\"true\");\n          func.call(self);\n          return true;\n        } catch (err) {\n          return false;\n        }\n      }\n      class WorkerScriptLoader {\n        constructor() {\n          this._cachedCanUseEval = null;\n        }\n        _canUseEval(moduleManager) {\n          if (this._cachedCanUseEval === null) {\n            this._cachedCanUseEval = canUseEval(moduleManager);\n          }\n          return this._cachedCanUseEval;\n        }\n        load(moduleManager, scriptSrc, callback, errorback) {\n          if (/^node\\|/.test(scriptSrc)) {\n            const opts = moduleManager.getConfig().getOptionsLiteral();\n            const nodeRequire = ensureRecordedNodeRequire(moduleManager.getRecorder(), opts.nodeRequire || AMDLoader2.global.nodeRequire);\n            const pieces = scriptSrc.split(\"|\");\n            let moduleExports = null;\n            try {\n              moduleExports = nodeRequire(pieces[1]);\n            } catch (err) {\n              errorback(err);\n              return;\n            }\n            moduleManager.enqueueDefineAnonymousModule([], function() {\n              return moduleExports;\n            });\n            callback();\n          } else {\n            const { trustedTypesPolicy } = moduleManager.getConfig().getOptionsLiteral();\n            const isCrossOrigin = /^((http:)|(https:)|(file:))/.test(scriptSrc) && scriptSrc.substring(0, self.origin.length) !== self.origin;\n            if (!isCrossOrigin && this._canUseEval(moduleManager)) {\n              fetch(scriptSrc).then((response) => {\n                if (response.status !== 200) {\n                  throw new Error(response.statusText);\n                }\n                return response.text();\n              }).then((text) => {\n                text = `${text}\n//# sourceURL=${scriptSrc}`;\n                const func = trustedTypesPolicy ? self.eval(trustedTypesPolicy.createScript(\"\", text)) : new Function(text);\n                func.call(self);\n                callback();\n              }).then(void 0, errorback);\n              return;\n            }\n            try {\n              if (trustedTypesPolicy) {\n                scriptSrc = trustedTypesPolicy.createScriptURL(scriptSrc);\n              }\n              importScripts(scriptSrc);\n              callback();\n            } catch (e) {\n              errorback(e);\n            }\n          }\n        }\n      }\n      class NodeScriptLoader {\n        constructor(env) {\n          this._env = env;\n          this._didInitialize = false;\n          this._didPatchNodeRequire = false;\n        }\n        _init(nodeRequire) {\n          if (this._didInitialize) {\n            return;\n          }\n          this._didInitialize = true;\n          this._fs = nodeRequire(\"fs\");\n          this._vm = nodeRequire(\"vm\");\n          this._path = nodeRequire(\"path\");\n          this._crypto = nodeRequire(\"crypto\");\n        }\n        // patch require-function of nodejs such that we can manually create a script\n        // from cached data. this is done by overriding the `Module._compile` function\n        _initNodeRequire(nodeRequire, moduleManager) {\n          const { nodeCachedData } = moduleManager.getConfig().getOptionsLiteral();\n          if (!nodeCachedData) {\n            return;\n          }\n          if (this._didPatchNodeRequire) {\n            return;\n          }\n          this._didPatchNodeRequire = true;\n          const that = this;\n          const Module = nodeRequire(\"module\");\n          function makeRequireFunction(mod) {\n            const Module2 = mod.constructor;\n            let require2 = function require3(path) {\n              try {\n                return mod.require(path);\n              } finally {\n              }\n            };\n            require2.resolve = function resolve(request, options) {\n              return Module2._resolveFilename(request, mod, false, options);\n            };\n            require2.resolve.paths = function paths(request) {\n              return Module2._resolveLookupPaths(request, mod);\n            };\n            require2.main = process.mainModule;\n            require2.extensions = Module2._extensions;\n            require2.cache = Module2._cache;\n            return require2;\n          }\n          Module.prototype._compile = function(content, filename) {\n            const scriptSource = Module.wrap(content.replace(/^#!.*/, \"\"));\n            const recorder = moduleManager.getRecorder();\n            const cachedDataPath = that._getCachedDataPath(nodeCachedData, filename);\n            const options = { filename };\n            let hashData;\n            try {\n              const data = that._fs.readFileSync(cachedDataPath);\n              hashData = data.slice(0, 16);\n              options.cachedData = data.slice(16);\n              recorder.record(60, cachedDataPath);\n            } catch (_e) {\n              recorder.record(61, cachedDataPath);\n            }\n            const script = new that._vm.Script(scriptSource, options);\n            const compileWrapper = script.runInThisContext(options);\n            const dirname = that._path.dirname(filename);\n            const require2 = makeRequireFunction(this);\n            const args = [this.exports, require2, this, filename, dirname, process, _commonjsGlobal, Buffer];\n            const result = compileWrapper.apply(this.exports, args);\n            that._handleCachedData(script, scriptSource, cachedDataPath, !options.cachedData, moduleManager);\n            that._verifyCachedData(script, scriptSource, cachedDataPath, hashData, moduleManager);\n            return result;\n          };\n        }\n        load(moduleManager, scriptSrc, callback, errorback) {\n          const opts = moduleManager.getConfig().getOptionsLiteral();\n          const nodeRequire = ensureRecordedNodeRequire(moduleManager.getRecorder(), opts.nodeRequire || AMDLoader2.global.nodeRequire);\n          const nodeInstrumenter = opts.nodeInstrumenter || function(c) {\n            return c;\n          };\n          this._init(nodeRequire);\n          this._initNodeRequire(nodeRequire, moduleManager);\n          let recorder = moduleManager.getRecorder();\n          if (/^node\\|/.test(scriptSrc)) {\n            let pieces = scriptSrc.split(\"|\");\n            let moduleExports = null;\n            try {\n              moduleExports = nodeRequire(pieces[1]);\n            } catch (err) {\n              errorback(err);\n              return;\n            }\n            moduleManager.enqueueDefineAnonymousModule([], () => moduleExports);\n            callback();\n          } else {\n            scriptSrc = AMDLoader2.Utilities.fileUriToFilePath(this._env.isWindows, scriptSrc);\n            const normalizedScriptSrc = this._path.normalize(scriptSrc);\n            const vmScriptPathOrUri = this._getElectronRendererScriptPathOrUri(normalizedScriptSrc);\n            const wantsCachedData = Boolean(opts.nodeCachedData);\n            const cachedDataPath = wantsCachedData ? this._getCachedDataPath(opts.nodeCachedData, scriptSrc) : void 0;\n            this._readSourceAndCachedData(normalizedScriptSrc, cachedDataPath, recorder, (err, data, cachedData, hashData) => {\n              if (err) {\n                errorback(err);\n                return;\n              }\n              let scriptSource;\n              if (data.charCodeAt(0) === NodeScriptLoader._BOM) {\n                scriptSource = NodeScriptLoader._PREFIX + data.substring(1) + NodeScriptLoader._SUFFIX;\n              } else {\n                scriptSource = NodeScriptLoader._PREFIX + data + NodeScriptLoader._SUFFIX;\n              }\n              scriptSource = nodeInstrumenter(scriptSource, normalizedScriptSrc);\n              const scriptOpts = { filename: vmScriptPathOrUri, cachedData };\n              const script = this._createAndEvalScript(moduleManager, scriptSource, scriptOpts, callback, errorback);\n              this._handleCachedData(script, scriptSource, cachedDataPath, wantsCachedData && !cachedData, moduleManager);\n              this._verifyCachedData(script, scriptSource, cachedDataPath, hashData, moduleManager);\n            });\n          }\n        }\n        _createAndEvalScript(moduleManager, contents, options, callback, errorback) {\n          const recorder = moduleManager.getRecorder();\n          recorder.record(31, options.filename);\n          const script = new this._vm.Script(contents, options);\n          const ret = script.runInThisContext(options);\n          const globalDefineFunc = moduleManager.getGlobalAMDDefineFunc();\n          let receivedDefineCall = false;\n          const localDefineFunc = function() {\n            receivedDefineCall = true;\n            return globalDefineFunc.apply(null, arguments);\n          };\n          localDefineFunc.amd = globalDefineFunc.amd;\n          ret.call(AMDLoader2.global, moduleManager.getGlobalAMDRequireFunc(), localDefineFunc, options.filename, this._path.dirname(options.filename));\n          recorder.record(32, options.filename);\n          if (receivedDefineCall) {\n            callback();\n          } else {\n            errorback(new Error(`Didn't receive define call in ${options.filename}!`));\n          }\n          return script;\n        }\n        _getElectronRendererScriptPathOrUri(path) {\n          if (!this._env.isElectronRenderer) {\n            return path;\n          }\n          let driveLetterMatch = path.match(/^([a-z])\\:(.*)/i);\n          if (driveLetterMatch) {\n            return `file:///${(driveLetterMatch[1].toUpperCase() + \":\" + driveLetterMatch[2]).replace(/\\\\/g, \"/\")}`;\n          } else {\n            return `file://${path}`;\n          }\n        }\n        _getCachedDataPath(config, filename) {\n          const hash = this._crypto.createHash(\"md5\").update(filename, \"utf8\").update(config.seed, \"utf8\").update(process.arch, \"\").digest(\"hex\");\n          const basename = this._path.basename(filename).replace(/\\.js$/, \"\");\n          return this._path.join(config.path, `${basename}-${hash}.code`);\n        }\n        _handleCachedData(script, scriptSource, cachedDataPath, createCachedData, moduleManager) {\n          if (script.cachedDataRejected) {\n            this._fs.unlink(cachedDataPath, (err) => {\n              moduleManager.getRecorder().record(62, cachedDataPath);\n              this._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\n              if (err) {\n                moduleManager.getConfig().onError(err);\n              }\n            });\n          } else if (createCachedData) {\n            this._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\n          }\n        }\n        // Cached data format: | SOURCE_HASH | V8_CACHED_DATA |\n        // -SOURCE_HASH is the md5 hash of the JS source (always 16 bytes)\n        // -V8_CACHED_DATA is what v8 produces\n        _createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager) {\n          let timeout = Math.ceil(moduleManager.getConfig().getOptionsLiteral().nodeCachedData.writeDelay * (1 + Math.random()));\n          let lastSize = -1;\n          let iteration = 0;\n          let hashData = void 0;\n          const createLoop = () => {\n            setTimeout(() => {\n              if (!hashData) {\n                hashData = this._crypto.createHash(\"md5\").update(scriptSource, \"utf8\").digest();\n              }\n              const cachedData = script.createCachedData();\n              if (cachedData.length === 0 || cachedData.length === lastSize || iteration >= 5) {\n                return;\n              }\n              if (cachedData.length < lastSize) {\n                createLoop();\n                return;\n              }\n              lastSize = cachedData.length;\n              this._fs.writeFile(cachedDataPath, Buffer.concat([hashData, cachedData]), (err) => {\n                if (err) {\n                  moduleManager.getConfig().onError(err);\n                }\n                moduleManager.getRecorder().record(63, cachedDataPath);\n                createLoop();\n              });\n            }, timeout * Math.pow(4, iteration++));\n          };\n          createLoop();\n        }\n        _readSourceAndCachedData(sourcePath, cachedDataPath, recorder, callback) {\n          if (!cachedDataPath) {\n            this._fs.readFile(sourcePath, { encoding: \"utf8\" }, callback);\n          } else {\n            let source = void 0;\n            let cachedData = void 0;\n            let hashData = void 0;\n            let steps = 2;\n            const step = (err) => {\n              if (err) {\n                callback(err);\n              } else if (--steps === 0) {\n                callback(void 0, source, cachedData, hashData);\n              }\n            };\n            this._fs.readFile(sourcePath, { encoding: \"utf8\" }, (err, data) => {\n              source = data;\n              step(err);\n            });\n            this._fs.readFile(cachedDataPath, (err, data) => {\n              if (!err && data && data.length > 0) {\n                hashData = data.slice(0, 16);\n                cachedData = data.slice(16);\n                recorder.record(60, cachedDataPath);\n              } else {\n                recorder.record(61, cachedDataPath);\n              }\n              step();\n            });\n          }\n        }\n        _verifyCachedData(script, scriptSource, cachedDataPath, hashData, moduleManager) {\n          if (!hashData) {\n            return;\n          }\n          if (script.cachedDataRejected) {\n            return;\n          }\n          setTimeout(() => {\n            const hashDataNow = this._crypto.createHash(\"md5\").update(scriptSource, \"utf8\").digest();\n            if (!hashData.equals(hashDataNow)) {\n              moduleManager.getConfig().onError(new Error(`FAILED TO VERIFY CACHED DATA, deleting stale '${cachedDataPath}' now, but a RESTART IS REQUIRED`));\n              this._fs.unlink(cachedDataPath, (err) => {\n                if (err) {\n                  moduleManager.getConfig().onError(err);\n                }\n              });\n            }\n          }, Math.ceil(5e3 * (1 + Math.random())));\n        }\n      }\n      NodeScriptLoader._BOM = 65279;\n      NodeScriptLoader._PREFIX = \"(function (require, define, __filename, __dirname) { \";\n      NodeScriptLoader._SUFFIX = \"\\n});\";\n      function ensureRecordedNodeRequire(recorder, _nodeRequire) {\n        if (_nodeRequire.__$__isRecorded) {\n          return _nodeRequire;\n        }\n        const nodeRequire = function nodeRequire2(what) {\n          recorder.record(33, what);\n          try {\n            return _nodeRequire(what);\n          } finally {\n            recorder.record(34, what);\n          }\n        };\n        nodeRequire.__$__isRecorded = true;\n        return nodeRequire;\n      }\n      AMDLoader2.ensureRecordedNodeRequire = ensureRecordedNodeRequire;\n      function createScriptLoader(env) {\n        return new OnlyOnceScriptLoader(env);\n      }\n      AMDLoader2.createScriptLoader = createScriptLoader;\n    })(AMDLoader || (AMDLoader = {}));\n    var AMDLoader;\n    (function(AMDLoader2) {\n      class ModuleIdResolver {\n        constructor(fromModuleId) {\n          let lastSlash = fromModuleId.lastIndexOf(\"/\");\n          if (lastSlash !== -1) {\n            this.fromModulePath = fromModuleId.substr(0, lastSlash + 1);\n          } else {\n            this.fromModulePath = \"\";\n          }\n        }\n        /**\n         * Normalize 'a/../name' to 'name', etc.\n         */\n        static _normalizeModuleId(moduleId) {\n          let r = moduleId, pattern;\n          pattern = /\\/\\.\\//;\n          while (pattern.test(r)) {\n            r = r.replace(pattern, \"/\");\n          }\n          r = r.replace(/^\\.\\//g, \"\");\n          pattern = /\\/(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//;\n          while (pattern.test(r)) {\n            r = r.replace(pattern, \"/\");\n          }\n          r = r.replace(/^(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//, \"\");\n          return r;\n        }\n        /**\n         * Resolve relative module ids\n         */\n        resolveModule(moduleId) {\n          let result = moduleId;\n          if (!AMDLoader2.Utilities.isAbsolutePath(result)) {\n            if (AMDLoader2.Utilities.startsWith(result, \"./\") || AMDLoader2.Utilities.startsWith(result, \"../\")) {\n              result = ModuleIdResolver._normalizeModuleId(this.fromModulePath + result);\n            }\n          }\n          return result;\n        }\n      }\n      ModuleIdResolver.ROOT = new ModuleIdResolver(\"\");\n      AMDLoader2.ModuleIdResolver = ModuleIdResolver;\n      class Module {\n        constructor(id, strId, dependencies, callback, errorback, moduleIdResolver) {\n          this.id = id;\n          this.strId = strId;\n          this.dependencies = dependencies;\n          this._callback = callback;\n          this._errorback = errorback;\n          this.moduleIdResolver = moduleIdResolver;\n          this.exports = {};\n          this.error = null;\n          this.exportsPassedIn = false;\n          this.unresolvedDependenciesCount = this.dependencies.length;\n          this._isComplete = false;\n        }\n        static _safeInvokeFunction(callback, args) {\n          try {\n            return {\n              returnedValue: callback.apply(AMDLoader2.global, args),\n              producedError: null\n            };\n          } catch (e) {\n            return {\n              returnedValue: null,\n              producedError: e\n            };\n          }\n        }\n        static _invokeFactory(config, strModuleId, callback, dependenciesValues) {\n          if (!config.shouldInvokeFactory(strModuleId)) {\n            return {\n              returnedValue: null,\n              producedError: null\n            };\n          }\n          if (config.shouldCatchError()) {\n            return this._safeInvokeFunction(callback, dependenciesValues);\n          }\n          return {\n            returnedValue: callback.apply(AMDLoader2.global, dependenciesValues),\n            producedError: null\n          };\n        }\n        complete(recorder, config, dependenciesValues, inversedependenciesProvider) {\n          this._isComplete = true;\n          let producedError = null;\n          if (this._callback) {\n            if (typeof this._callback === \"function\") {\n              recorder.record(21, this.strId);\n              let r = Module._invokeFactory(config, this.strId, this._callback, dependenciesValues);\n              producedError = r.producedError;\n              recorder.record(22, this.strId);\n              if (!producedError && typeof r.returnedValue !== \"undefined\" && (!this.exportsPassedIn || AMDLoader2.Utilities.isEmpty(this.exports))) {\n                this.exports = r.returnedValue;\n              }\n            } else {\n              this.exports = this._callback;\n            }\n          }\n          if (producedError) {\n            let err = AMDLoader2.ensureError(producedError);\n            err.phase = \"factory\";\n            err.moduleId = this.strId;\n            err.neededBy = inversedependenciesProvider(this.id);\n            this.error = err;\n            config.onError(err);\n          }\n          this.dependencies = null;\n          this._callback = null;\n          this._errorback = null;\n          this.moduleIdResolver = null;\n        }\n        /**\n         * One of the direct dependencies or a transitive dependency has failed to load.\n         */\n        onDependencyError(err) {\n          this._isComplete = true;\n          this.error = err;\n          if (this._errorback) {\n            this._errorback(err);\n            return true;\n          }\n          return false;\n        }\n        /**\n         * Is the current module complete?\n         */\n        isComplete() {\n          return this._isComplete;\n        }\n      }\n      AMDLoader2.Module = Module;\n      class ModuleIdProvider {\n        constructor() {\n          this._nextId = 0;\n          this._strModuleIdToIntModuleId = /* @__PURE__ */ new Map();\n          this._intModuleIdToStrModuleId = [];\n          this.getModuleId(\"exports\");\n          this.getModuleId(\"module\");\n          this.getModuleId(\"require\");\n        }\n        getMaxModuleId() {\n          return this._nextId;\n        }\n        getModuleId(strModuleId) {\n          let id = this._strModuleIdToIntModuleId.get(strModuleId);\n          if (typeof id === \"undefined\") {\n            id = this._nextId++;\n            this._strModuleIdToIntModuleId.set(strModuleId, id);\n            this._intModuleIdToStrModuleId[id] = strModuleId;\n          }\n          return id;\n        }\n        getStrModuleId(moduleId) {\n          return this._intModuleIdToStrModuleId[moduleId];\n        }\n      }\n      class RegularDependency {\n        constructor(id) {\n          this.id = id;\n        }\n      }\n      RegularDependency.EXPORTS = new RegularDependency(\n        0\n        /* ModuleId.EXPORTS */\n      );\n      RegularDependency.MODULE = new RegularDependency(\n        1\n        /* ModuleId.MODULE */\n      );\n      RegularDependency.REQUIRE = new RegularDependency(\n        2\n        /* ModuleId.REQUIRE */\n      );\n      AMDLoader2.RegularDependency = RegularDependency;\n      class PluginDependency {\n        constructor(id, pluginId, pluginParam) {\n          this.id = id;\n          this.pluginId = pluginId;\n          this.pluginParam = pluginParam;\n        }\n      }\n      AMDLoader2.PluginDependency = PluginDependency;\n      class ModuleManager {\n        constructor(env, scriptLoader, defineFunc, requireFunc, loaderAvailableTimestamp = 0) {\n          this._env = env;\n          this._scriptLoader = scriptLoader;\n          this._loaderAvailableTimestamp = loaderAvailableTimestamp;\n          this._defineFunc = defineFunc;\n          this._requireFunc = requireFunc;\n          this._moduleIdProvider = new ModuleIdProvider();\n          this._config = new AMDLoader2.Configuration(this._env);\n          this._hasDependencyCycle = false;\n          this._modules2 = [];\n          this._knownModules2 = [];\n          this._inverseDependencies2 = [];\n          this._inversePluginDependencies2 = /* @__PURE__ */ new Map();\n          this._currentAnonymousDefineCall = null;\n          this._recorder = null;\n          this._buildInfoPath = [];\n          this._buildInfoDefineStack = [];\n          this._buildInfoDependencies = [];\n          this._requireFunc.moduleManager = this;\n        }\n        reset() {\n          return new ModuleManager(this._env, this._scriptLoader, this._defineFunc, this._requireFunc, this._loaderAvailableTimestamp);\n        }\n        getGlobalAMDDefineFunc() {\n          return this._defineFunc;\n        }\n        getGlobalAMDRequireFunc() {\n          return this._requireFunc;\n        }\n        static _findRelevantLocationInStack(needle, stack) {\n          let normalize = (str) => str.replace(/\\\\/g, \"/\");\n          let normalizedPath = normalize(needle);\n          let stackPieces = stack.split(/\\n/);\n          for (let i = 0; i < stackPieces.length; i++) {\n            let m = stackPieces[i].match(/(.*):(\\d+):(\\d+)\\)?$/);\n            if (m) {\n              let stackPath = m[1];\n              let stackLine = m[2];\n              let stackColumn = m[3];\n              let trimPathOffset = Math.max(stackPath.lastIndexOf(\" \") + 1, stackPath.lastIndexOf(\"(\") + 1);\n              stackPath = stackPath.substr(trimPathOffset);\n              stackPath = normalize(stackPath);\n              if (stackPath === normalizedPath) {\n                let r = {\n                  line: parseInt(stackLine, 10),\n                  col: parseInt(stackColumn, 10)\n                };\n                if (r.line === 1) {\n                  r.col -= \"(function (require, define, __filename, __dirname) { \".length;\n                }\n                return r;\n              }\n            }\n          }\n          throw new Error(\"Could not correlate define call site for needle \" + needle);\n        }\n        getBuildInfo() {\n          if (!this._config.isBuild()) {\n            return null;\n          }\n          let result = [], resultLen = 0;\n          for (let i = 0, len = this._modules2.length; i < len; i++) {\n            let m = this._modules2[i];\n            if (!m) {\n              continue;\n            }\n            let location = this._buildInfoPath[m.id] || null;\n            let defineStack = this._buildInfoDefineStack[m.id] || null;\n            let dependencies = this._buildInfoDependencies[m.id];\n            result[resultLen++] = {\n              id: m.strId,\n              path: location,\n              defineLocation: location && defineStack ? ModuleManager._findRelevantLocationInStack(location, defineStack) : null,\n              dependencies,\n              shim: null,\n              exports: m.exports\n            };\n          }\n          return result;\n        }\n        getRecorder() {\n          if (!this._recorder) {\n            if (this._config.shouldRecordStats()) {\n              this._recorder = new AMDLoader2.LoaderEventRecorder(this._loaderAvailableTimestamp);\n            } else {\n              this._recorder = AMDLoader2.NullLoaderEventRecorder.INSTANCE;\n            }\n          }\n          return this._recorder;\n        }\n        getLoaderEvents() {\n          return this.getRecorder().getEvents();\n        }\n        /**\n         * Defines an anonymous module (without an id). Its name will be resolved as we receive a callback from the scriptLoader.\n         * @param dependencies @see defineModule\n         * @param callback @see defineModule\n         */\n        enqueueDefineAnonymousModule(dependencies, callback) {\n          if (this._currentAnonymousDefineCall !== null) {\n            throw new Error(\"Can only have one anonymous define call per script file\");\n          }\n          let stack = null;\n          if (this._config.isBuild()) {\n            stack = new Error(\"StackLocation\").stack || null;\n          }\n          this._currentAnonymousDefineCall = {\n            stack,\n            dependencies,\n            callback\n          };\n        }\n        /**\n         * Creates a module and stores it in _modules. The manager will immediately begin resolving its dependencies.\n         * @param strModuleId An unique and absolute id of the module. This must not collide with another module's id\n         * @param dependencies An array with the dependencies of the module. Special keys are: \"require\", \"exports\" and \"module\"\n         * @param callback if callback is a function, it will be called with the resolved dependencies. if callback is an object, it will be considered as the exports of the module.\n         */\n        defineModule(strModuleId, dependencies, callback, errorback, stack, moduleIdResolver = new ModuleIdResolver(strModuleId)) {\n          let moduleId = this._moduleIdProvider.getModuleId(strModuleId);\n          if (this._modules2[moduleId]) {\n            if (!this._config.isDuplicateMessageIgnoredFor(strModuleId)) {\n              console.warn(\"Duplicate definition of module '\" + strModuleId + \"'\");\n            }\n            return;\n          }\n          let m = new Module(moduleId, strModuleId, this._normalizeDependencies(dependencies, moduleIdResolver), callback, errorback, moduleIdResolver);\n          this._modules2[moduleId] = m;\n          if (this._config.isBuild()) {\n            this._buildInfoDefineStack[moduleId] = stack;\n            this._buildInfoDependencies[moduleId] = (m.dependencies || []).map((dep) => this._moduleIdProvider.getStrModuleId(dep.id));\n          }\n          this._resolve(m);\n        }\n        _normalizeDependency(dependency, moduleIdResolver) {\n          if (dependency === \"exports\") {\n            return RegularDependency.EXPORTS;\n          }\n          if (dependency === \"module\") {\n            return RegularDependency.MODULE;\n          }\n          if (dependency === \"require\") {\n            return RegularDependency.REQUIRE;\n          }\n          let bangIndex = dependency.indexOf(\"!\");\n          if (bangIndex >= 0) {\n            let strPluginId = moduleIdResolver.resolveModule(dependency.substr(0, bangIndex));\n            let pluginParam = moduleIdResolver.resolveModule(dependency.substr(bangIndex + 1));\n            let dependencyId = this._moduleIdProvider.getModuleId(strPluginId + \"!\" + pluginParam);\n            let pluginId = this._moduleIdProvider.getModuleId(strPluginId);\n            return new PluginDependency(dependencyId, pluginId, pluginParam);\n          }\n          return new RegularDependency(this._moduleIdProvider.getModuleId(moduleIdResolver.resolveModule(dependency)));\n        }\n        _normalizeDependencies(dependencies, moduleIdResolver) {\n          let result = [], resultLen = 0;\n          for (let i = 0, len = dependencies.length; i < len; i++) {\n            result[resultLen++] = this._normalizeDependency(dependencies[i], moduleIdResolver);\n          }\n          return result;\n        }\n        _relativeRequire(moduleIdResolver, dependencies, callback, errorback) {\n          if (typeof dependencies === \"string\") {\n            return this.synchronousRequire(dependencies, moduleIdResolver);\n          }\n          this.defineModule(AMDLoader2.Utilities.generateAnonymousModule(), dependencies, callback, errorback, null, moduleIdResolver);\n        }\n        /**\n         * Require synchronously a module by its absolute id. If the module is not loaded, an exception will be thrown.\n         * @param id The unique and absolute id of the required module\n         * @return The exports of module 'id'\n         */\n        synchronousRequire(_strModuleId, moduleIdResolver = new ModuleIdResolver(_strModuleId)) {\n          let dependency = this._normalizeDependency(_strModuleId, moduleIdResolver);\n          let m = this._modules2[dependency.id];\n          if (!m) {\n            throw new Error(\"Check dependency list! Synchronous require cannot resolve module '\" + _strModuleId + \"'. This is the first mention of this module!\");\n          }\n          if (!m.isComplete()) {\n            throw new Error(\"Check dependency list! Synchronous require cannot resolve module '\" + _strModuleId + \"'. This module has not been resolved completely yet.\");\n          }\n          if (m.error) {\n            throw m.error;\n          }\n          return m.exports;\n        }\n        configure(params, shouldOverwrite) {\n          let oldShouldRecordStats = this._config.shouldRecordStats();\n          if (shouldOverwrite) {\n            this._config = new AMDLoader2.Configuration(this._env, params);\n          } else {\n            this._config = this._config.cloneAndMerge(params);\n          }\n          if (this._config.shouldRecordStats() && !oldShouldRecordStats) {\n            this._recorder = null;\n          }\n        }\n        getConfig() {\n          return this._config;\n        }\n        /**\n         * Callback from the scriptLoader when a module has been loaded.\n         * This means its code is available and has been executed.\n         */\n        _onLoad(moduleId) {\n          if (this._currentAnonymousDefineCall !== null) {\n            let defineCall = this._currentAnonymousDefineCall;\n            this._currentAnonymousDefineCall = null;\n            this.defineModule(this._moduleIdProvider.getStrModuleId(moduleId), defineCall.dependencies, defineCall.callback, null, defineCall.stack);\n          }\n        }\n        _createLoadError(moduleId, _err) {\n          let strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n          let neededBy = (this._inverseDependencies2[moduleId] || []).map((intModuleId) => this._moduleIdProvider.getStrModuleId(intModuleId));\n          const err = AMDLoader2.ensureError(_err);\n          err.phase = \"loading\";\n          err.moduleId = strModuleId;\n          err.neededBy = neededBy;\n          return err;\n        }\n        /**\n         * Callback from the scriptLoader when a module hasn't been loaded.\n         * This means that the script was not found (e.g. 404) or there was an error in the script.\n         */\n        _onLoadError(moduleId, err) {\n          const error = this._createLoadError(moduleId, err);\n          if (!this._modules2[moduleId]) {\n            this._modules2[moduleId] = new Module(moduleId, this._moduleIdProvider.getStrModuleId(moduleId), [], () => {\n            }, null, null);\n          }\n          let seenModuleId = [];\n          for (let i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n            seenModuleId[i] = false;\n          }\n          let someoneNotified = false;\n          let queue = [];\n          queue.push(moduleId);\n          seenModuleId[moduleId] = true;\n          while (queue.length > 0) {\n            let queueElement = queue.shift();\n            let m = this._modules2[queueElement];\n            if (m) {\n              someoneNotified = m.onDependencyError(error) || someoneNotified;\n            }\n            let inverseDeps = this._inverseDependencies2[queueElement];\n            if (inverseDeps) {\n              for (let i = 0, len = inverseDeps.length; i < len; i++) {\n                let inverseDep = inverseDeps[i];\n                if (!seenModuleId[inverseDep]) {\n                  queue.push(inverseDep);\n                  seenModuleId[inverseDep] = true;\n                }\n              }\n            }\n          }\n          if (!someoneNotified) {\n            this._config.onError(error);\n          }\n        }\n        /**\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\n         * Returns true if there is such a path or false otherwise.\n         * @param from Module id to start at\n         * @param to Module id to look for\n         */\n        _hasDependencyPath(fromId, toId) {\n          let from = this._modules2[fromId];\n          if (!from) {\n            return false;\n          }\n          let inQueue = [];\n          for (let i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n            inQueue[i] = false;\n          }\n          let queue = [];\n          queue.push(from);\n          inQueue[fromId] = true;\n          while (queue.length > 0) {\n            let element = queue.shift();\n            let dependencies = element.dependencies;\n            if (dependencies) {\n              for (let i = 0, len = dependencies.length; i < len; i++) {\n                let dependency = dependencies[i];\n                if (dependency.id === toId) {\n                  return true;\n                }\n                let dependencyModule = this._modules2[dependency.id];\n                if (dependencyModule && !inQueue[dependency.id]) {\n                  inQueue[dependency.id] = true;\n                  queue.push(dependencyModule);\n                }\n              }\n            }\n          }\n          return false;\n        }\n        /**\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\n         * Returns cycle as array.\n         * @param from Module id to start at\n         * @param to Module id to look for\n         */\n        _findCyclePath(fromId, toId, depth) {\n          if (fromId === toId || depth === 50) {\n            return [fromId];\n          }\n          let from = this._modules2[fromId];\n          if (!from) {\n            return null;\n          }\n          let dependencies = from.dependencies;\n          if (dependencies) {\n            for (let i = 0, len = dependencies.length; i < len; i++) {\n              let path = this._findCyclePath(dependencies[i].id, toId, depth + 1);\n              if (path !== null) {\n                path.push(fromId);\n                return path;\n              }\n            }\n          }\n          return null;\n        }\n        /**\n         * Create the local 'require' that is passed into modules\n         */\n        _createRequire(moduleIdResolver) {\n          let result = (dependencies, callback, errorback) => {\n            return this._relativeRequire(moduleIdResolver, dependencies, callback, errorback);\n          };\n          result.toUrl = (id) => {\n            return this._config.requireToUrl(moduleIdResolver.resolveModule(id));\n          };\n          result.getStats = () => {\n            return this.getLoaderEvents();\n          };\n          result.hasDependencyCycle = () => {\n            return this._hasDependencyCycle;\n          };\n          result.config = (params, shouldOverwrite = false) => {\n            this.configure(params, shouldOverwrite);\n          };\n          result.__$__nodeRequire = AMDLoader2.global.nodeRequire;\n          return result;\n        }\n        _loadModule(moduleId) {\n          if (this._modules2[moduleId] || this._knownModules2[moduleId]) {\n            return;\n          }\n          this._knownModules2[moduleId] = true;\n          let strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n          let paths = this._config.moduleIdToPaths(strModuleId);\n          let scopedPackageRegex = /^@[^\\/]+\\/[^\\/]+$/;\n          if (this._env.isNode && (strModuleId.indexOf(\"/\") === -1 || scopedPackageRegex.test(strModuleId))) {\n            paths.push(\"node|\" + strModuleId);\n          }\n          let lastPathIndex = -1;\n          let loadNextPath = (err) => {\n            lastPathIndex++;\n            if (lastPathIndex >= paths.length) {\n              this._onLoadError(moduleId, err);\n            } else {\n              let currentPath = paths[lastPathIndex];\n              let recorder = this.getRecorder();\n              if (this._config.isBuild() && currentPath === \"empty:\") {\n                this._buildInfoPath[moduleId] = currentPath;\n                this.defineModule(this._moduleIdProvider.getStrModuleId(moduleId), [], null, null, null);\n                this._onLoad(moduleId);\n                return;\n              }\n              recorder.record(10, currentPath);\n              this._scriptLoader.load(this, currentPath, () => {\n                if (this._config.isBuild()) {\n                  this._buildInfoPath[moduleId] = currentPath;\n                }\n                recorder.record(11, currentPath);\n                this._onLoad(moduleId);\n              }, (err2) => {\n                recorder.record(12, currentPath);\n                loadNextPath(err2);\n              });\n            }\n          };\n          loadNextPath(null);\n        }\n        /**\n         * Resolve a plugin dependency with the plugin loaded & complete\n         * @param module The module that has this dependency\n         * @param pluginDependency The semi-normalized dependency that appears in the module. e.g. 'vs/css!./mycssfile'. Only the plugin part (before !) is normalized\n         * @param plugin The plugin (what the plugin exports)\n         */\n        _loadPluginDependency(plugin, pluginDependency) {\n          if (this._modules2[pluginDependency.id] || this._knownModules2[pluginDependency.id]) {\n            return;\n          }\n          this._knownModules2[pluginDependency.id] = true;\n          let load = (value) => {\n            this.defineModule(this._moduleIdProvider.getStrModuleId(pluginDependency.id), [], value, null, null);\n          };\n          load.error = (err) => {\n            this._config.onError(this._createLoadError(pluginDependency.id, err));\n          };\n          plugin.load(pluginDependency.pluginParam, this._createRequire(ModuleIdResolver.ROOT), load, this._config.getOptionsLiteral());\n        }\n        /**\n         * Examine the dependencies of module 'module' and resolve them as needed.\n         */\n        _resolve(module3) {\n          let dependencies = module3.dependencies;\n          if (dependencies) {\n            for (let i = 0, len = dependencies.length; i < len; i++) {\n              let dependency = dependencies[i];\n              if (dependency === RegularDependency.EXPORTS) {\n                module3.exportsPassedIn = true;\n                module3.unresolvedDependenciesCount--;\n                continue;\n              }\n              if (dependency === RegularDependency.MODULE) {\n                module3.unresolvedDependenciesCount--;\n                continue;\n              }\n              if (dependency === RegularDependency.REQUIRE) {\n                module3.unresolvedDependenciesCount--;\n                continue;\n              }\n              let dependencyModule = this._modules2[dependency.id];\n              if (dependencyModule && dependencyModule.isComplete()) {\n                if (dependencyModule.error) {\n                  module3.onDependencyError(dependencyModule.error);\n                  return;\n                }\n                module3.unresolvedDependenciesCount--;\n                continue;\n              }\n              if (this._hasDependencyPath(dependency.id, module3.id)) {\n                this._hasDependencyCycle = true;\n                console.warn(\"There is a dependency cycle between '\" + this._moduleIdProvider.getStrModuleId(dependency.id) + \"' and '\" + this._moduleIdProvider.getStrModuleId(module3.id) + \"'. The cyclic path follows:\");\n                let cyclePath = this._findCyclePath(dependency.id, module3.id, 0) || [];\n                cyclePath.reverse();\n                cyclePath.push(dependency.id);\n                console.warn(cyclePath.map((id) => this._moduleIdProvider.getStrModuleId(id)).join(\" => \\n\"));\n                module3.unresolvedDependenciesCount--;\n                continue;\n              }\n              this._inverseDependencies2[dependency.id] = this._inverseDependencies2[dependency.id] || [];\n              this._inverseDependencies2[dependency.id].push(module3.id);\n              if (dependency instanceof PluginDependency) {\n                let plugin = this._modules2[dependency.pluginId];\n                if (plugin && plugin.isComplete()) {\n                  this._loadPluginDependency(plugin.exports, dependency);\n                  continue;\n                }\n                let inversePluginDeps = this._inversePluginDependencies2.get(dependency.pluginId);\n                if (!inversePluginDeps) {\n                  inversePluginDeps = [];\n                  this._inversePluginDependencies2.set(dependency.pluginId, inversePluginDeps);\n                }\n                inversePluginDeps.push(dependency);\n                this._loadModule(dependency.pluginId);\n                continue;\n              }\n              this._loadModule(dependency.id);\n            }\n          }\n          if (module3.unresolvedDependenciesCount === 0) {\n            this._onModuleComplete(module3);\n          }\n        }\n        _onModuleComplete(module3) {\n          let recorder = this.getRecorder();\n          if (module3.isComplete()) {\n            return;\n          }\n          let dependencies = module3.dependencies;\n          let dependenciesValues = [];\n          if (dependencies) {\n            for (let i = 0, len = dependencies.length; i < len; i++) {\n              let dependency = dependencies[i];\n              if (dependency === RegularDependency.EXPORTS) {\n                dependenciesValues[i] = module3.exports;\n                continue;\n              }\n              if (dependency === RegularDependency.MODULE) {\n                dependenciesValues[i] = {\n                  id: module3.strId,\n                  config: () => {\n                    return this._config.getConfigForModule(module3.strId);\n                  }\n                };\n                continue;\n              }\n              if (dependency === RegularDependency.REQUIRE) {\n                dependenciesValues[i] = this._createRequire(module3.moduleIdResolver);\n                continue;\n              }\n              let dependencyModule = this._modules2[dependency.id];\n              if (dependencyModule) {\n                dependenciesValues[i] = dependencyModule.exports;\n                continue;\n              }\n              dependenciesValues[i] = null;\n            }\n          }\n          const inversedependenciesProvider = (moduleId) => {\n            return (this._inverseDependencies2[moduleId] || []).map((intModuleId) => this._moduleIdProvider.getStrModuleId(intModuleId));\n          };\n          module3.complete(recorder, this._config, dependenciesValues, inversedependenciesProvider);\n          let inverseDeps = this._inverseDependencies2[module3.id];\n          this._inverseDependencies2[module3.id] = null;\n          if (inverseDeps) {\n            for (let i = 0, len = inverseDeps.length; i < len; i++) {\n              let inverseDependencyId = inverseDeps[i];\n              let inverseDependency = this._modules2[inverseDependencyId];\n              inverseDependency.unresolvedDependenciesCount--;\n              if (inverseDependency.unresolvedDependenciesCount === 0) {\n                this._onModuleComplete(inverseDependency);\n              }\n            }\n          }\n          let inversePluginDeps = this._inversePluginDependencies2.get(module3.id);\n          if (inversePluginDeps) {\n            this._inversePluginDependencies2.delete(module3.id);\n            for (let i = 0, len = inversePluginDeps.length; i < len; i++) {\n              this._loadPluginDependency(module3.exports, inversePluginDeps[i]);\n            }\n          }\n        }\n      }\n      AMDLoader2.ModuleManager = ModuleManager;\n    })(AMDLoader || (AMDLoader = {}));\n    var define2;\n    var AMDLoader;\n    (function(AMDLoader2) {\n      const env = new AMDLoader2.Environment();\n      let moduleManager = null;\n      const DefineFunc = function(id, dependencies, callback) {\n        if (typeof id !== \"string\") {\n          callback = dependencies;\n          dependencies = id;\n          id = null;\n        }\n        if (typeof dependencies !== \"object\" || !Array.isArray(dependencies)) {\n          callback = dependencies;\n          dependencies = null;\n        }\n        if (!dependencies) {\n          dependencies = [\"require\", \"exports\", \"module\"];\n        }\n        if (id) {\n          moduleManager.defineModule(id, dependencies, callback, null, null);\n        } else {\n          moduleManager.enqueueDefineAnonymousModule(dependencies, callback);\n        }\n      };\n      DefineFunc.amd = {\n        jQuery: true\n      };\n      const _requireFunc_config = function(params, shouldOverwrite = false) {\n        moduleManager.configure(params, shouldOverwrite);\n      };\n      const RequireFunc = function() {\n        if (arguments.length === 1) {\n          if (arguments[0] instanceof Object && !Array.isArray(arguments[0])) {\n            _requireFunc_config(arguments[0]);\n            return;\n          }\n          if (typeof arguments[0] === \"string\") {\n            return moduleManager.synchronousRequire(arguments[0]);\n          }\n        }\n        if (arguments.length === 2 || arguments.length === 3) {\n          if (Array.isArray(arguments[0])) {\n            moduleManager.defineModule(AMDLoader2.Utilities.generateAnonymousModule(), arguments[0], arguments[1], arguments[2], null);\n            return;\n          }\n        }\n        throw new Error(\"Unrecognized require call\");\n      };\n      RequireFunc.config = _requireFunc_config;\n      RequireFunc.getConfig = function() {\n        return moduleManager.getConfig().getOptionsLiteral();\n      };\n      RequireFunc.reset = function() {\n        moduleManager = moduleManager.reset();\n      };\n      RequireFunc.getBuildInfo = function() {\n        return moduleManager.getBuildInfo();\n      };\n      RequireFunc.getStats = function() {\n        return moduleManager.getLoaderEvents();\n      };\n      RequireFunc.define = DefineFunc;\n      function init() {\n        if (typeof AMDLoader2.global.require !== \"undefined\" || typeof require !== \"undefined\") {\n          const _nodeRequire = AMDLoader2.global.require || require;\n          if (typeof _nodeRequire === \"function\" && typeof _nodeRequire.resolve === \"function\") {\n            const nodeRequire = AMDLoader2.ensureRecordedNodeRequire(moduleManager.getRecorder(), _nodeRequire);\n            AMDLoader2.global.nodeRequire = nodeRequire;\n            RequireFunc.nodeRequire = nodeRequire;\n            RequireFunc.__$__nodeRequire = nodeRequire;\n          }\n        }\n        if (env.isNode && !env.isElectronRenderer && !env.isElectronNodeIntegrationWebWorker) {\n          module2.exports = RequireFunc;\n        } else {\n          if (!env.isElectronRenderer) {\n            AMDLoader2.global.define = DefineFunc;\n          }\n          AMDLoader2.global.require = RequireFunc;\n        }\n      }\n      AMDLoader2.init = init;\n      if (typeof AMDLoader2.global.define !== \"function\" || !AMDLoader2.global.define.amd) {\n        moduleManager = new AMDLoader2.ModuleManager(env, AMDLoader2.createScriptLoader(env), DefineFunc, RequireFunc, AMDLoader2.Utilities.getHighPerformanceTimestamp());\n        if (typeof AMDLoader2.global.require !== \"undefined\" && typeof AMDLoader2.global.require !== \"function\") {\n          RequireFunc.config(AMDLoader2.global.require);\n        }\n        define2 = function() {\n          return DefineFunc.apply(null, arguments);\n        };\n        define2.amd = DefineFunc.amd;\n        if (typeof doNotInitLoader === \"undefined\") {\n          init();\n        }\n      }\n    })(AMDLoader || (AMDLoader = {}));\n    define2(\"vs/css\", [\"require\", \"exports\"], function(require2, exports3) {\n      \"use strict\";\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.load = load;\n      function load(name, req, load2, config) {\n        config = config || {};\n        const cssConfig = config[\"vs/css\"] || {};\n        if (cssConfig.disabled) {\n          load2({});\n          return;\n        }\n        const cssUrl = req.toUrl(name + \".css\");\n        loadCSS(name, cssUrl, () => {\n          load2({});\n        }, (err) => {\n          if (typeof load2.error === \"function\") {\n            load2.error(\"Could not find \" + cssUrl + \".\");\n          }\n        });\n      }\n      function loadCSS(name, cssUrl, callback, errorback) {\n        if (linkTagExists(name, cssUrl)) {\n          callback();\n          return;\n        }\n        createLinkTag(name, cssUrl, callback, errorback);\n      }\n      function linkTagExists(name, cssUrl) {\n        const links = window.document.getElementsByTagName(\"link\");\n        for (let i = 0, len = links.length; i < len; i++) {\n          const nameAttr = links[i].getAttribute(\"data-name\");\n          const hrefAttr = links[i].getAttribute(\"href\");\n          if (nameAttr === name || hrefAttr === cssUrl) {\n            return true;\n          }\n        }\n        return false;\n      }\n      function createLinkTag(name, cssUrl, callback, errorback) {\n        const linkNode = document.createElement(\"link\");\n        linkNode.setAttribute(\"rel\", \"stylesheet\");\n        linkNode.setAttribute(\"type\", \"text/css\");\n        linkNode.setAttribute(\"data-name\", name);\n        attachListeners(name, linkNode, callback, errorback);\n        linkNode.setAttribute(\"href\", cssUrl);\n        const head = window.document.head || window.document.getElementsByTagName(\"head\")[0];\n        head.appendChild(linkNode);\n      }\n      function attachListeners(name, linkNode, callback, errorback) {\n        const unbind = () => {\n          linkNode.removeEventListener(\"load\", loadEventListener);\n          linkNode.removeEventListener(\"error\", errorEventListener);\n        };\n        const loadEventListener = (e) => {\n          unbind();\n          callback();\n        };\n        const errorEventListener = (e) => {\n          unbind();\n          errorback(e);\n        };\n        linkNode.addEventListener(\"load\", loadEventListener);\n        linkNode.addEventListener(\"error\", errorEventListener);\n      }\n    });\n    define2(\"vs/nls\", [\"require\", \"exports\"], function(require2, exports3) {\n      \"use strict\";\n      Object.defineProperty(exports3, \"__esModule\", { value: true });\n      exports3.localize = localize;\n      exports3.localize2 = localize2;\n      exports3.getConfiguredDefaultLocale = getConfiguredDefaultLocale;\n      exports3.setPseudoTranslation = setPseudoTranslation;\n      exports3.create = create;\n      exports3.load = load;\n      let isPseudo = typeof document !== \"undefined\" && document.location && document.location.hash.indexOf(\"pseudo=true\") >= 0;\n      const DEFAULT_TAG = \"i-default\";\n      function _format(message, args) {\n        let result;\n        if (args.length === 0) {\n          result = message;\n        } else {\n          result = message.replace(/\\{(\\d+)\\}/g, (match, rest) => {\n            const index = rest[0];\n            const arg = args[index];\n            let result2 = match;\n            if (typeof arg === \"string\") {\n              result2 = arg;\n            } else if (typeof arg === \"number\" || typeof arg === \"boolean\" || arg === void 0 || arg === null) {\n              result2 = String(arg);\n            }\n            return result2;\n          });\n        }\n        if (isPseudo) {\n          result = \"\\uFF3B\" + result.replace(/[aouei]/g, \"$&$&\") + \"\\uFF3D\";\n        }\n        return result;\n      }\n      function findLanguageForModule(config, name) {\n        let result = config[name];\n        if (result) {\n          return result;\n        }\n        result = config[\"*\"];\n        if (result) {\n          return result;\n        }\n        return null;\n      }\n      function endWithSlash(path) {\n        if (path.charAt(path.length - 1) === \"/\") {\n          return path;\n        }\n        return path + \"/\";\n      }\n      async function getMessagesFromTranslationsService(translationServiceUrl, language, name) {\n        const url = endWithSlash(translationServiceUrl) + endWithSlash(language) + \"vscode/\" + endWithSlash(name);\n        const res = await fetch(url);\n        if (res.ok) {\n          const messages = await res.json();\n          return messages;\n        }\n        throw new Error(`${res.status} - ${res.statusText}`);\n      }\n      function createScopedLocalize(scope) {\n        return function(idx, defaultValue) {\n          const restArgs = Array.prototype.slice.call(arguments, 2);\n          return _format(scope[idx], restArgs);\n        };\n      }\n      function createScopedLocalize2(scope) {\n        return (idx, defaultValue, ...args) => ({\n          value: _format(scope[idx], args),\n          original: _format(defaultValue, args)\n        });\n      }\n      function localize(data, message, ...args) {\n        return _format(message, args);\n      }\n      function localize2(data, message, ...args) {\n        const original = _format(message, args);\n        return {\n          value: original,\n          original\n        };\n      }\n      function getConfiguredDefaultLocale(_) {\n        return void 0;\n      }\n      function setPseudoTranslation(value) {\n        isPseudo = value;\n      }\n      function create(key, data) {\n        return {\n          localize: createScopedLocalize(data[key]),\n          localize2: createScopedLocalize2(data[key]),\n          getConfiguredDefaultLocale: data.getConfiguredDefaultLocale ?? ((_) => void 0)\n        };\n      }\n      function load(name, req, load2, config) {\n        const pluginConfig = config[\"vs/nls\"] ?? {};\n        if (!name || name.length === 0) {\n          return load2({\n            localize,\n            localize2,\n            getConfiguredDefaultLocale: () => pluginConfig.availableLanguages?.[\"*\"]\n          });\n        }\n        const language = pluginConfig.availableLanguages ? findLanguageForModule(pluginConfig.availableLanguages, name) : null;\n        const useDefaultLanguage = language === null || language === DEFAULT_TAG;\n        let suffix = \".nls\";\n        if (!useDefaultLanguage) {\n          suffix = suffix + \".\" + language;\n        }\n        const messagesLoaded = (messages) => {\n          if (Array.isArray(messages)) {\n            messages.localize = createScopedLocalize(messages);\n            messages.localize2 = createScopedLocalize2(messages);\n          } else {\n            messages.localize = createScopedLocalize(messages[name]);\n            messages.localize2 = createScopedLocalize2(messages[name]);\n          }\n          messages.getConfiguredDefaultLocale = () => pluginConfig.availableLanguages?.[\"*\"];\n          load2(messages);\n        };\n        if (typeof pluginConfig.loadBundle === \"function\") {\n          pluginConfig.loadBundle(name, language, (err, messages) => {\n            if (err) {\n              req([name + \".nls\"], messagesLoaded);\n            } else {\n              messagesLoaded(messages);\n            }\n          });\n        } else if (pluginConfig.translationServiceUrl && !useDefaultLanguage) {\n          (async () => {\n            try {\n              const messages = await getMessagesFromTranslationsService(pluginConfig.translationServiceUrl, language, name);\n              return messagesLoaded(messages);\n            } catch (err) {\n              if (!language.includes(\"-\")) {\n                console.error(err);\n                return req([name + \".nls\"], messagesLoaded);\n              }\n              try {\n                const genericLanguage = language.split(\"-\")[0];\n                const messages = await getMessagesFromTranslationsService(pluginConfig.translationServiceUrl, genericLanguage, name);\n                pluginConfig.availableLanguages ?? (pluginConfig.availableLanguages = {});\n                pluginConfig.availableLanguages[\"*\"] = genericLanguage;\n                return messagesLoaded(messages);\n              } catch (err2) {\n                console.error(err2);\n                return req([name + \".nls\"], messagesLoaded);\n              }\n            }\n          })();\n        } else {\n          req([name + suffix], messagesLoaded, (err) => {\n            if (suffix === \".nls\") {\n              console.error(\"Failed trying to load default language strings\", err);\n              return;\n            }\n            console.error(`Failed to load message bundle for language ${language}. Falling back to the default language:`, err);\n            req([name + \".nls\"], messagesLoaded);\n          });\n        }\n      }\n    });\n  }\n});\n\n// out-build/bootstrap.js\nvar require_bootstrap = __commonJS({\n  \"out-build/bootstrap.js\"(exports2, module2) {\n    \"use strict\";\n    (function(globalThis2, factory) {\n      if (typeof exports2 === \"object\") {\n        module2.exports = factory();\n      } else {\n        globalThis2.MonacoBootstrap = factory();\n      }\n    })(exports2, function() {\n      const Module = typeof require === \"function\" ? require(\"module\") : void 0;\n      const path = typeof require === \"function\" ? require(\"path\") : void 0;\n      const fs = typeof require === \"function\" ? require(\"fs\") : void 0;\n      const util = typeof require === \"function\" ? require(\"util\") : void 0;\n      Error.stackTraceLimit = 100;\n      if (typeof process !== \"undefined\" && !process.env[\"VSCODE_HANDLES_SIGPIPE\"]) {\n        let didLogAboutSIGPIPE = false;\n        process.on(\"SIGPIPE\", () => {\n          if (!didLogAboutSIGPIPE) {\n            didLogAboutSIGPIPE = true;\n            console.error(new Error(`Unexpected SIGPIPE`));\n          }\n        });\n      }\n      function enableASARSupport() {\n        if (!path || !Module || typeof process === \"undefined\") {\n          console.warn(\"enableASARSupport() is only available in node.js environments\");\n          return;\n        }\n        const NODE_MODULES_PATH = path.join(__dirname, \"../node_modules\");\n        const NODE_MODULES_ASAR_PATH = `${NODE_MODULES_PATH}.asar`;\n        const originalResolveLookupPaths = Module._resolveLookupPaths;\n        Module._resolveLookupPaths = function(request, parent) {\n          const paths = originalResolveLookupPaths(request, parent);\n          if (Array.isArray(paths)) {\n            for (let i = 0, len = paths.length; i < len; i++) {\n              if (paths[i] === NODE_MODULES_PATH) {\n                paths.splice(i, 0, NODE_MODULES_ASAR_PATH);\n                break;\n              }\n            }\n          }\n          return paths;\n        };\n      }\n      function fileUriFromPath(path2, config) {\n        let pathName = path2.replace(/\\\\/g, \"/\");\n        if (pathName.length > 0 && pathName.charAt(0) !== \"/\") {\n          pathName = `/${pathName}`;\n        }\n        let uri;\n        if (config.isWindows && pathName.startsWith(\"//\")) {\n          uri = encodeURI(`${config.scheme || \"file\"}:${pathName}`);\n        } else {\n          uri = encodeURI(`${config.scheme || \"file\"}://${config.fallbackAuthority || \"\"}${pathName}`);\n        }\n        return uri.replace(/#/g, \"%23\");\n      }\n      function setupNLS() {\n        const process2 = safeProcess();\n        let nlsConfig = { availableLanguages: {} };\n        if (process2 && process2.env[\"VSCODE_NLS_CONFIG\"]) {\n          try {\n            nlsConfig = JSON.parse(process2.env[\"VSCODE_NLS_CONFIG\"]);\n          } catch (e) {\n          }\n        }\n        if (nlsConfig._resolvedLanguagePackCoreLocation) {\n          const bundles = /* @__PURE__ */ Object.create(null);\n          nlsConfig.loadBundle = function(bundle, language, cb) {\n            const result = bundles[bundle];\n            if (result) {\n              cb(void 0, result);\n              return;\n            }\n            safeReadNlsFile(nlsConfig._resolvedLanguagePackCoreLocation, `${bundle.replace(/\\//g, \"!\")}.nls.json`).then(function(content) {\n              const json = JSON.parse(content);\n              bundles[bundle] = json;\n              cb(void 0, json);\n            }).catch((error) => {\n              try {\n                if (nlsConfig._corruptedFile) {\n                  safeWriteNlsFile(nlsConfig._corruptedFile, \"corrupted\").catch(function(error2) {\n                    console.error(error2);\n                  });\n                }\n              } finally {\n                cb(error, void 0);\n              }\n            });\n          };\n        }\n        return nlsConfig;\n      }\n      function safeSandboxGlobals() {\n        const globals = typeof self === \"object\" ? self : typeof global === \"object\" ? global : {};\n        return globals.vscode;\n      }\n      function safeProcess() {\n        const sandboxGlobals = safeSandboxGlobals();\n        if (sandboxGlobals) {\n          return sandboxGlobals.process;\n        }\n        if (typeof process !== \"undefined\") {\n          return process;\n        }\n        return void 0;\n      }\n      function safeIpcRenderer() {\n        const sandboxGlobals = safeSandboxGlobals();\n        if (sandboxGlobals) {\n          return sandboxGlobals.ipcRenderer;\n        }\n        return void 0;\n      }\n      async function safeReadNlsFile(...pathSegments) {\n        const ipcRenderer = safeIpcRenderer();\n        if (ipcRenderer) {\n          return ipcRenderer.invoke(\"vscode:readNlsFile\", ...pathSegments);\n        }\n        if (fs && path && util) {\n          return (await util.promisify(fs.readFile)(path.join(...pathSegments))).toString();\n        }\n        throw new Error(\"Unsupported operation (read NLS files)\");\n      }\n      function safeWriteNlsFile(path2, content) {\n        const ipcRenderer = safeIpcRenderer();\n        if (ipcRenderer) {\n          return ipcRenderer.invoke(\"vscode:writeNlsFile\", path2, content);\n        }\n        if (fs && util) {\n          return util.promisify(fs.writeFile)(path2, content);\n        }\n        throw new Error(\"Unsupported operation (write NLS files)\");\n      }\n      return {\n        enableASARSupport,\n        setupNLS,\n        fileUriFromPath\n      };\n    });\n  }\n});\n\n// out-build/bootstrap-amd.js\nvar require_bootstrap_amd = __commonJS({\n  \"out-build/bootstrap-amd.js\"(exports2) {\n    \"use strict\";\n    var nodeRequire = require;\n    globalThis._VSCODE_NODE_MODULES = new Proxy(/* @__PURE__ */ Object.create(null), { get: (_target, mod) => nodeRequire(String(mod)) });\n    globalThis._VSCODE_PRODUCT_JSON = require(\"../product.json\");\n    if (process.env[\"VSCODE_DEV\"]) {\n      try {\n        const overrides = require(\"../product.overrides.json\");\n        globalThis._VSCODE_PRODUCT_JSON = Object.assign(globalThis._VSCODE_PRODUCT_JSON, overrides);\n      } catch (error) {\n      }\n    }\n    globalThis._VSCODE_PACKAGE_JSON = require(\"../package.json\");\n    var loader = require_loader();\n    var bootstrap = require_bootstrap();\n    var performance3 = require_performance();\n    var nlsConfig = bootstrap.setupNLS();\n    loader.config({\n      baseUrl: bootstrap.fileUriFromPath(__dirname, { isWindows: process.platform === \"win32\" }),\n      catchError: true,\n      nodeRequire,\n      \"vs/nls\": nlsConfig,\n      amdModulesPattern: /^vs\\//,\n      recordStats: true\n    });\n    if (process.env[\"ELECTRON_RUN_AS_NODE\"] || process.versions[\"electron\"]) {\n      loader.define(\"fs\", [\"original-fs\"], function(originalFS) {\n        return originalFS;\n      });\n    }\n    if (nlsConfig && nlsConfig.pseudo) {\n      loader([\"vs/nls\"], function(nlsPlugin) {\n        nlsPlugin.setPseudoTranslation(!!nlsConfig.pseudo);\n      });\n    }\n    exports2.load = function(entrypoint, onLoad, onError) {\n      if (!entrypoint) {\n        return;\n      }\n      if (process.env[\"VSCODE_CODE_CACHE_PATH\"]) {\n        loader.config({\n          nodeCachedData: {\n            path: process.env[\"VSCODE_CODE_CACHE_PATH\"],\n            seed: entrypoint\n          }\n        });\n      }\n      onLoad = onLoad || function() {\n      };\n      onError = onError || function(err) {\n        console.error(err);\n      };\n      performance3.mark(\"code/fork/willLoadCode\");\n      loader([entrypoint], onLoad, onError);\n    };\n  }\n});\n\n// out-build/server-main.js\nvar perf = require_performance();\nvar performance2 = require(\"perf_hooks\").performance;\nvar product = require(\"../product.json\");\nvar readline = require(\"readline\");\nvar http = require(\"http\");\nperf.mark(\"code/server/start\");\nglobal.vscodeServerStartTime = performance2.now();\nasync function start() {\n  const minimist = require(\"minimist\");\n  const parsedArgs = minimist(process.argv.slice(2), {\n    boolean: [\"start-server\", \"list-extensions\", \"print-ip-address\", \"help\", \"version\", \"accept-server-license-terms\", \"update-extensions\"],\n    string: [\"install-extension\", \"install-builtin-extension\", \"uninstall-extension\", \"locate-extension\", \"socket-path\", \"host\", \"port\", \"compatibility\"],\n    alias: { help: \"h\", version: \"v\" }\n  });\n  [\"host\", \"port\", \"accept-server-license-terms\"].forEach((e) => {\n    if (!parsedArgs[e]) {\n      const envValue = process.env[`VSCODE_SERVER_${e.toUpperCase().replace(\"-\", \"_\")}`];\n      if (envValue) {\n        parsedArgs[e] = envValue;\n      }\n    }\n  });\n  const extensionLookupArgs = [\"list-extensions\", \"locate-extension\"];\n  const extensionInstallArgs = [\"install-extension\", \"install-builtin-extension\", \"uninstall-extension\", \"update-extensions\"];\n  const shouldSpawnCli = parsedArgs.help || parsedArgs.version || extensionLookupArgs.some((a) => !!parsedArgs[a]) || extensionInstallArgs.some((a) => !!parsedArgs[a]) && !parsedArgs[\"start-server\"];\n  if (shouldSpawnCli) {\n    loadCode().then((mod) => {\n      mod.spawnCli();\n    });\n    return;\n  }\n  let _remoteExtensionHostAgentServer = null;\n  let _remoteExtensionHostAgentServerPromise = null;\n  const getRemoteExtensionHostAgentServer = () => {\n    if (!_remoteExtensionHostAgentServerPromise) {\n      _remoteExtensionHostAgentServerPromise = loadCode().then(async (mod) => {\n        const server2 = await mod.createServer(address);\n        _remoteExtensionHostAgentServer = server2;\n        return server2;\n      });\n    }\n    return _remoteExtensionHostAgentServerPromise;\n  };\n  const http2 = require(\"http\");\n  const os = require(\"os\");\n  if (Array.isArray(product.serverLicense) && product.serverLicense.length) {\n    console.log(product.serverLicense.join(\"\\n\"));\n    if (product.serverLicensePrompt && parsedArgs[\"accept-server-license-terms\"] !== true) {\n      if (hasStdinWithoutTty()) {\n        console.log(\"To accept the license terms, start the server with --accept-server-license-terms\");\n        process.exit(1);\n      }\n      try {\n        const accept = await prompt(product.serverLicensePrompt);\n        if (!accept) {\n          process.exit(1);\n        }\n      } catch (e) {\n        console.log(e);\n        process.exit(1);\n      }\n    }\n  }\n  let firstRequest = true;\n  let firstWebSocket = true;\n  let address = null;\n  const server = http2.createServer(async (req, res) => {\n    if (firstRequest) {\n      firstRequest = false;\n      perf.mark(\"code/server/firstRequest\");\n    }\n    const remoteExtensionHostAgentServer = await getRemoteExtensionHostAgentServer();\n    return remoteExtensionHostAgentServer.handleRequest(req, res);\n  });\n  server.on(\"upgrade\", async (req, socket) => {\n    if (firstWebSocket) {\n      firstWebSocket = false;\n      perf.mark(\"code/server/firstWebSocket\");\n    }\n    const remoteExtensionHostAgentServer = await getRemoteExtensionHostAgentServer();\n    return remoteExtensionHostAgentServer.handleUpgrade(req, socket);\n  });\n  server.on(\"error\", async (err) => {\n    const remoteExtensionHostAgentServer = await getRemoteExtensionHostAgentServer();\n    return remoteExtensionHostAgentServer.handleServerError(err);\n  });\n  const host = sanitizeStringArg(parsedArgs[\"host\"]) || (parsedArgs[\"compatibility\"] !== \"1.63\" ? \"localhost\" : void 0);\n  const nodeListenOptions = parsedArgs[\"socket-path\"] ? { path: sanitizeStringArg(parsedArgs[\"socket-path\"]) } : { host, port: await parsePort(host, sanitizeStringArg(parsedArgs[\"port\"])) };\n  server.listen(nodeListenOptions, async () => {\n    let output = Array.isArray(product.serverGreeting) && product.serverGreeting.length ? `\n\n${product.serverGreeting.join(\"\\n\")}\n\n` : ``;\n    if (typeof nodeListenOptions.port === \"number\" && parsedArgs[\"print-ip-address\"]) {\n      const ifaces = os.networkInterfaces();\n      Object.keys(ifaces).forEach(function(ifname) {\n        ifaces[ifname]?.forEach(function(iface) {\n          if (!iface.internal && iface.family === \"IPv4\") {\n            output += `IP Address: ${iface.address}\n`;\n          }\n        });\n      });\n    }\n    address = server.address();\n    if (address === null) {\n      throw new Error(\"Unexpected server address\");\n    }\n    output += `Server bound to ${typeof address === \"string\" ? address : `${address.address}:${address.port} (${address.family})`}\n`;\n    output += `Extension host agent listening on ${typeof address === \"string\" ? address : address.port}\n`;\n    console.log(output);\n    perf.mark(\"code/server/started\");\n    global.vscodeServerListenTime = performance2.now();\n    await getRemoteExtensionHostAgentServer();\n  });\n  process.on(\"exit\", () => {\n    server.close();\n    if (_remoteExtensionHostAgentServer) {\n      _remoteExtensionHostAgentServer.dispose();\n    }\n  });\n}\nfunction sanitizeStringArg(val) {\n  if (Array.isArray(val)) {\n    val = val.pop();\n  }\n  return typeof val === \"string\" ? val : void 0;\n}\nasync function parsePort(host, strPort) {\n  if (strPort) {\n    let range;\n    if (strPort.match(/^\\d+$/)) {\n      return parseInt(strPort, 10);\n    } else if (range = parseRange(strPort)) {\n      const port = await findFreePort(host, range.start, range.end);\n      if (port !== void 0) {\n        return port;\n      }\n      console.warn(`--port: Could not find free port in range: ${range.start} - ${range.end} (inclusive).`);\n      process.exit(1);\n    } else {\n      console.warn(`--port \"${strPort}\" is not a valid number or range. Ranges must be in the form 'from-to' with 'from' an integer larger than 0 and not larger than 'end'.`);\n      process.exit(1);\n    }\n  }\n  return 8e3;\n}\nfunction parseRange(strRange) {\n  const match = strRange.match(/^(\\d+)-(\\d+)$/);\n  if (match) {\n    const start2 = parseInt(match[1], 10), end = parseInt(match[2], 10);\n    if (start2 > 0 && start2 <= end && end <= 65535) {\n      return { start: start2, end };\n    }\n  }\n  return void 0;\n}\nasync function findFreePort(host, start2, end) {\n  const testPort = (port) => {\n    return new Promise((resolve) => {\n      const server = http.createServer();\n      server.listen(port, host, () => {\n        server.close();\n        resolve(true);\n      }).on(\"error\", () => {\n        resolve(false);\n      });\n    });\n  };\n  for (let port = start2; port <= end; port++) {\n    if (await testPort(port)) {\n      return port;\n    }\n  }\n  return void 0;\n}\nfunction loadCode() {\n  return new Promise((resolve, reject) => {\n    const path = require(\"path\");\n    delete process.env[\"ELECTRON_RUN_AS_NODE\"];\n    process.env[\"VSCODE_HANDLES_SIGPIPE\"] = \"true\";\n    if (process.env[\"VSCODE_DEV\"]) {\n      process.env[\"VSCODE_INJECT_NODE_MODULE_LOOKUP_PATH\"] = process.env[\"VSCODE_INJECT_NODE_MODULE_LOOKUP_PATH\"] || path.join(__dirname, \"..\", \"remote\", \"node_modules\");\n      require_bootstrap_node().injectNodeModuleLookupPath(process.env[\"VSCODE_INJECT_NODE_MODULE_LOOKUP_PATH\"]);\n    } else {\n      delete process.env[\"VSCODE_INJECT_NODE_MODULE_LOOKUP_PATH\"];\n    }\n    require_bootstrap_amd().load(\"vs/server/node/server.main\", resolve, reject);\n  });\n}\nfunction hasStdinWithoutTty() {\n  try {\n    return !process.stdin.isTTY;\n  } catch (error) {\n  }\n  return false;\n}\nfunction prompt(question) {\n  const rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n  });\n  return new Promise((resolve, reject) => {\n    rl.question(question + \" \", async function(data) {\n      rl.close();\n      const str = data.toString().trim().toLowerCase();\n      if (str === \"\" || str === \"y\" || str === \"yes\") {\n        resolve(true);\n      } else if (str === \"n\" || str === \"no\") {\n        resolve(false);\n      } else {\n        process.stdout.write(\"\\nInvalid Response. Answer either yes (y, yes) or no (n, no)\\n\");\n        resolve(await prompt(question));\n      }\n    });\n  });\n}\nstart();\n"],"mappings":"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","names":["cb","mod","exports2","module2","_definePolyfillMarks","timeOrigin","_data","mark","name","getMarks","result","_define","entry","_factory","sharedObj2","sharedObj","setupCurrentWorkingDirectory","path","err","injectPath","Module","nodeModulesPath","originalResolveLookupPaths","moduleName","parent","paths","i","len","globalPaths","commonSuffixLength","product2","fs","appRoot","getApplicationPath","path2","getPortableDataPath","portableDataName","portableDataPath","isPortable","portableTempPath","isTempPortable","_amdLoaderGlobal","_commonjsGlobal","AMDLoader","AMDLoader2","Environment","LoaderEvent","type","detail","timestamp","LoaderEventRecorder","loaderAvailableTimestamp","NullLoaderEventRecorder","Utilities","isWindows","uri","haystack","needle","url","obj","callback","key","isEmpty","value","id","ensureError","ConfigurationOptionsUtil","options","defaultOnError","overwrite","base","key2","value2","Configuration","env","nodeMain","dirnameIndex","from","to","a","b","moduleId","pathRule","j","lenJ","urls","results","strModuleId","OnlyOnceScriptLoader","moduleManager","scriptSrc","errorback","WorkerScriptLoader","preferScriptTags","BrowserScriptLoader","NodeScriptLoader","scriptCallbacks","script","unbind","loadEventListener","errorEventListener","e","opts","nodeRequire","ensureRecordedNodeRequire","pieces","moduleExports","trustedTypesPolicy","cspNonce","canUseEval","response","text","nodeCachedData","that","makeRequireFunction","Module2","require2","request","content","filename","scriptSource","recorder","cachedDataPath","hashData","data","compileWrapper","dirname","args","nodeInstrumenter","c","normalizedScriptSrc","vmScriptPathOrUri","wantsCachedData","cachedData","scriptOpts","contents","ret","globalDefineFunc","receivedDefineCall","localDefineFunc","driveLetterMatch","config","hash","basename","createCachedData","timeout","lastSize","iteration","createLoop","sourcePath","source","steps","step","hashDataNow","_nodeRequire","what","createScriptLoader","ModuleIdResolver","fromModuleId","lastSlash","r","pattern","strId","dependencies","moduleIdResolver","dependenciesValues","inversedependenciesProvider","producedError","ModuleIdProvider","RegularDependency","PluginDependency","pluginId","pluginParam","ModuleManager","scriptLoader","defineFunc","requireFunc","stack","normalize","str","normalizedPath","stackPieces","m","stackPath","stackLine","stackColumn","trimPathOffset","resultLen","location","defineStack","dep","dependency","bangIndex","strPluginId","dependencyId","_strModuleId","params","shouldOverwrite","oldShouldRecordStats","defineCall","_err","neededBy","intModuleId","error","seenModuleId","someoneNotified","queue","queueElement","inverseDeps","inverseDep","fromId","toId","inQueue","dependencyModule","depth","scopedPackageRegex","lastPathIndex","loadNextPath","currentPath","err2","plugin","pluginDependency","load","module3","cyclePath","inversePluginDeps","inverseDependencyId","inverseDependency","define2","DefineFunc","_requireFunc_config","RequireFunc","init","exports3","req","load2","cssUrl","loadCSS","linkTagExists","createLinkTag","links","nameAttr","hrefAttr","linkNode","attachListeners","localize","localize2","getConfiguredDefaultLocale","setPseudoTranslation","create","isPseudo","DEFAULT_TAG","_format","message","match","rest","index","arg","result2","findLanguageForModule","endWithSlash","getMessagesFromTranslationsService","translationServiceUrl","language","res","createScopedLocalize","scope","idx","defaultValue","restArgs","createScopedLocalize2","original","_","pluginConfig","useDefaultLanguage","suffix","messagesLoaded","messages","genericLanguage","globalThis2","factory","util","didLogAboutSIGPIPE","enableASARSupport","NODE_MODULES_PATH","NODE_MODULES_ASAR_PATH","fileUriFromPath","pathName","setupNLS","process2","safeProcess","nlsConfig","bundles","bundle","safeReadNlsFile","json","safeWriteNlsFile","error2","safeSandboxGlobals","sandboxGlobals","safeIpcRenderer","pathSegments","ipcRenderer","_target","overrides","loader","bootstrap","performance3","originalFS","nlsPlugin","entrypoint","onLoad","onError","parsedArgs","envValue","extensionLookupArgs","extensionInstallArgs","_remoteExtensionHostAgentServer","_remoteExtensionHostAgentServerPromise","getRemoteExtensionHostAgentServer","server2","address","http2","os","firstRequest","firstWebSocket","server","socket","host","nodeListenOptions","output","ifaces","ifname","iface","val","strPort","range","port","strRange","start2","end","testPort","resolve","reject","question","rl"],"file":"server-main.js"}